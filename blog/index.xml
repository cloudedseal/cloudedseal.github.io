<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>keep doing – Blog</title><link>https://cloudedseal.github.io/blog/</link><description>Recent content in Blog on keep doing</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 27 Apr 2025 15:20:04 +0800</lastBuildDate><atom:link href="https://cloudedseal.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://cloudedseal.github.io/blog/about/</link><pubDate>Sun, 27 Mar 2022 23:18:39 +0800</pubDate><guid>https://cloudedseal.github.io/blog/about/</guid><description>
&lt;blockquote>
&lt;p>The pain you feel when you write is actually the pain of clarifying your thinking.(David Perell)&lt;/p>
&lt;/blockquote></description></item><item><title>Master Linux Pipe</title><link>https://cloudedseal.github.io/blog/master-linux-pipe/</link><pubDate>Sun, 25 May 2025 18:26:01 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-linux-pipe/</guid><description>
&lt;h2>file descriptor&lt;span class="hx-absolute -hx-mt-20" id="file-descriptor">&lt;/span>
&lt;a href="#file-descriptor" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>A file descriptor, or FD, is a positive integer that refers to an input/output source. 指向 I/O 源,不关心具体的源是什么, 这就是抽象&lt;/p>
&lt;/blockquote>
&lt;p>所谓 I/O redirection 不过是对指定的 FD 复制而已&lt;/p>
&lt;h2>&lt;code>sh&lt;/code> 系统调用追踪&lt;span class="hx-absolute -hx-mt-20" id="sh-系统调用追踪">&lt;/span>
&lt;a href="#sh-%e7%b3%bb%e7%bb%9f%e8%b0%83%e7%94%a8%e8%bf%bd%e8%b8%aa" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>shell pipeline 流程&lt;span class="hx-absolute -hx-mt-20" id="shell-pipeline-流程">&lt;/span>
&lt;a href="#shell-pipeline-%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>complete lifecycle of a shell pipeline&lt;/strong> (&lt;code>cat /etc/passwd | wc -l&lt;/code>) executed via &lt;code>sh&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>✅ &lt;code>pipe2()&lt;/code> (pipe creation, kernel managed buffer, pipe[0] read pipe[1] write)&lt;/li>
&lt;li>✅ &lt;code>clone()&lt;/code> (Linux process creation, replaces &lt;code>fork()&lt;/code>)&lt;/li>
&lt;li>✅ &lt;code>dup2()&lt;/code> (redirects stdin/stdout)&lt;/li>
&lt;li>✅ &lt;code>execve()&lt;/code> (runs &lt;code>cat&lt;/code> and &lt;code>wc -l&lt;/code>)&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">strace -f -tt -s &lt;span class="m">1000&lt;/span> -o pipe.log -e &lt;span class="nv">trace&lt;/span>&lt;span class="o">=&lt;/span>pipe2,clone,execve,dup2,close sh -c &lt;span class="s1">&amp;#39;cat /etc/passwd | wc -l&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.436915 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/sh&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;sh&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;cat /etc/passwd | wc -l&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x7ffcc4e072a0 /* &lt;span class="m">65&lt;/span> vars */&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.446359 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.452650 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.471471 pipe2&lt;span class="o">([&lt;/span>3, 4&lt;span class="o">]&lt;/span>, 0&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.472226 clone&lt;span class="o">(&lt;/span>&lt;span class="nv">child_stack&lt;/span>&lt;span class="o">=&lt;/span>NULL, &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>CLONE_CHILD_CLEARTID&lt;span class="p">|&lt;/span>CLONE_CHILD_SETTID&lt;span class="p">|&lt;/span>SIGCHLD, &lt;span class="nv">child_tidptr&lt;/span>&lt;span class="o">=&lt;/span>0x77cc40b30a10&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">27641&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.474244 close&lt;span class="o">(&lt;/span>4&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.474851 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.475308 dup2&lt;span class="o">(&lt;/span>4, 1&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.475737 close&lt;span class="o">(&lt;/span>4&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.476204 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/cat&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;cat&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;/etc/passwd&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x6292fba9d0f8 /* &lt;span class="m">65&lt;/span> vars */ &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.477420 clone&lt;span class="o">(&lt;/span>&lt;span class="nv">child_stack&lt;/span>&lt;span class="o">=&lt;/span>NULL, &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>CLONE_CHILD_CLEARTID&lt;span class="p">|&lt;/span>CLONE_CHILD_SETTID&lt;span class="p">|&lt;/span>SIGCHLD &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.477659 &amp;lt;... execve resumed&amp;gt;&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.478608 &amp;lt;... clone resumed&amp;gt;, &lt;span class="nv">child_tidptr&lt;/span>&lt;span class="o">=&lt;/span>0x77cc40b30a10&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">27642&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.479006 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.480741 close&lt;span class="o">(&lt;/span>-1 &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.480811 dup2&lt;span class="o">(&lt;/span>3, 0&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.481370 &amp;lt;... close resumed&amp;gt;&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 EBADF &lt;span class="o">(&lt;/span>Bad file descriptor&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.482849 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.483297 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/wc&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;wc&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-l&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x6292fba9d128 /* &lt;span class="m">65&lt;/span> vars */&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.486693 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.487874 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.491607 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.494576 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.500190 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.502045 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.504291 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.507177 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.515626 close&lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.516854 close&lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.517974 close&lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.519465 close&lt;span class="o">(&lt;/span>&lt;span class="m">0&lt;/span> &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.519562 +++ exited with &lt;span class="m">0&lt;/span> +++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.519778 &amp;lt;... close resumed&amp;gt;&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.520356 close&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.520949 --- SIGCHLD &lt;span class="o">{&lt;/span>&lt;span class="nv">si_signo&lt;/span>&lt;span class="o">=&lt;/span>SIGCHLD, &lt;span class="nv">si_code&lt;/span>&lt;span class="o">=&lt;/span>CLD_EXITED, &lt;span class="nv">si_pid&lt;/span>&lt;span class="o">=&lt;/span>27641, &lt;span class="nv">si_uid&lt;/span>&lt;span class="o">=&lt;/span>1000, &lt;span class="nv">si_status&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">si_utime&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">si_stime&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="o">}&lt;/span> ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.521080 &amp;lt;... close resumed&amp;gt;&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.521383 close&lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.523033 +++ exited with &lt;span class="m">0&lt;/span> +++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.523476 --- SIGCHLD &lt;span class="o">{&lt;/span>&lt;span class="nv">si_signo&lt;/span>&lt;span class="o">=&lt;/span>SIGCHLD, &lt;span class="nv">si_code&lt;/span>&lt;span class="o">=&lt;/span>CLD_EXITED, &lt;span class="nv">si_pid&lt;/span>&lt;span class="o">=&lt;/span>27642, &lt;span class="nv">si_uid&lt;/span>&lt;span class="o">=&lt;/span>1000, &lt;span class="nv">si_status&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">si_utime&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">si_stime&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="o">}&lt;/span> ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.527449 +++ exited with &lt;span class="m">0&lt;/span> +++&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>strace 过滤&lt;span class="hx-absolute -hx-mt-20" id="strace-过滤">&lt;/span>
&lt;a href="#strace-%e8%bf%87%e6%bb%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">grep -E &lt;span class="s1">&amp;#39;pipe2|clone|dup2|execve&amp;#39;&lt;/span> pipe.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.436915 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/sh&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;sh&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;cat /etc/passwd | wc -l&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x7ffcc4e072a0 /* &lt;span class="m">65&lt;/span> vars */&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.471471 pipe2&lt;span class="o">([&lt;/span>3, 4&lt;span class="o">]&lt;/span>, 0&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.472226 clone&lt;span class="o">(&lt;/span>&lt;span class="nv">child_stack&lt;/span>&lt;span class="o">=&lt;/span>NULL, &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>CLONE_CHILD_CLEARTID&lt;span class="p">|&lt;/span>CLONE_CHILD_SETTID&lt;span class="p">|&lt;/span>SIGCHLD, &lt;span class="nv">child_tidptr&lt;/span>&lt;span class="o">=&lt;/span>0x77cc40b30a10&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">27641&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.475308 dup2&lt;span class="o">(&lt;/span>4, 1&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.476204 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/cat&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;cat&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;/etc/passwd&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x6292fba9d0f8 /* &lt;span class="m">65&lt;/span> vars */ &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.477420 clone&lt;span class="o">(&lt;/span>&lt;span class="nv">child_stack&lt;/span>&lt;span class="o">=&lt;/span>NULL, &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>CLONE_CHILD_CLEARTID&lt;span class="p">|&lt;/span>CLONE_CHILD_SETTID&lt;span class="p">|&lt;/span>SIGCHLD &amp;lt;unfinished ...&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27641&lt;/span> 13:23:49.477659 &amp;lt;... execve resumed&amp;gt;&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27640&lt;/span> 13:23:49.478608 &amp;lt;... clone resumed&amp;gt;, &lt;span class="nv">child_tidptr&lt;/span>&lt;span class="o">=&lt;/span>0x77cc40b30a10&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">27642&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.480811 dup2&lt;span class="o">(&lt;/span>3, 0&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">27642&lt;/span> 13:23:49.483297 execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/wc&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;wc&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-l&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x6292fba9d128 /* &lt;span class="m">65&lt;/span> vars */&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>进程 ID&lt;span class="hx-absolute -hx-mt-20" id="进程-id">&lt;/span>
&lt;a href="#%e8%bf%9b%e7%a8%8b-id" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Parent Shell (sh)&lt;/strong>: PID &lt;code>27640&lt;/code>&lt;/li>
&lt;li>&lt;strong>Child 1 (&lt;code>cat&lt;/code>)&lt;/strong>: PID &lt;code>27641&lt;/code>&lt;/li>
&lt;li>&lt;strong>Child 2 (&lt;code>wc&lt;/code>)&lt;/strong>: PID &lt;code>27642&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>数据流向&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="数据流向">&lt;/span>
&lt;a href="#%e6%95%b0%e6%8d%ae%e6%b5%81%e5%90%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Pipe Setup&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>pipe2([3,4])&lt;/code> creates a communication channel:
&lt;ul>
&lt;li>&lt;code>3&lt;/code>: &lt;strong>Read&lt;/strong> end (used by &lt;code>wc&lt;/code>)&lt;/li>
&lt;li>&lt;code>4&lt;/code>: &lt;strong>Write&lt;/strong> end (used by &lt;code>cat&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Child 1 (&lt;code>cat&lt;/code>)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>dup2(4, 1)&lt;/code> → Redirects &lt;code>cat&lt;/code>&amp;rsquo;s stdout to the pipe.&lt;/li>
&lt;li>&lt;code>execve(&amp;quot;cat&amp;quot;, ...)&lt;/code> → &lt;code>cat&lt;/code> writes &lt;code>/etc/passwd&lt;/code> to the pipe.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Child 2 (&lt;code>wc&lt;/code>)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>dup2(3, 0)&lt;/code> → Redirects &lt;code>wc&lt;/code>&amp;rsquo;s stdin to the pipe.&lt;/li>
&lt;li>&lt;code>execve(&amp;quot;wc&amp;quot;, ...)&lt;/code> → &lt;code>wc&lt;/code> reads from the pipe and counts lines.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Parent Cleanup&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Closes both ends of the pipe (&lt;code>close(3)&lt;/code> and &lt;code>close(4)&lt;/code>) to prevent resource leaks.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>数据流可视化&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="数据流可视化">&lt;/span>
&lt;a href="#%e6%95%b0%e6%8d%ae%e6%b5%81%e5%8f%af%e8%a7%86%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>&amp;#43;-------------------&amp;#43;
| Parent Shell |
| (PID 27640) |
&amp;#43;-------------------&amp;#43;
|
| 🔵 pipe2([3,4], 0)
▼
&amp;#43;-------------------&amp;#43;
| Pipe: |
| Read: FD 3 |
| Write: FD 4 |
&amp;#43;-------------------&amp;#43;
|
| 🟢 clone(SIGCHLD) → PID 27641
| 🟢 clone(SIGCHLD) → PID 27642
▼
&amp;#43;-------------------&amp;#43; &amp;#43;-------------------&amp;#43;
| Child 27641 (cat) | | Child 27642 (wc) |
&amp;#43;-------------------&amp;#43; &amp;#43;-------------------&amp;#43;
| 🟡 dup2(4, 1) | | 🟡 dup2(3, 0) |
| 🔴 close(4) | | 🔴 close(3) |
| 🟠 execve(&amp;#34;cat&amp;#34;) | | 🟠 execve(&amp;#34;wc&amp;#34;) |
| → Writes to pipe | | → Reads from pipe |
&amp;#43;-------------------&amp;#43; &amp;#43;-------------------&amp;#43;
| ↑
| |
&amp;#43;--------------------------&amp;#43;
Data flow via pipe&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>pipeline 流程详细分析&lt;span class="hx-absolute -hx-mt-20" id="pipeline-流程详细分析">&lt;/span>
&lt;a href="#pipeline-%e6%b5%81%e7%a8%8b%e8%af%a6%e7%bb%86%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>✅ Step 1: Pipe Creation&lt;span class="hx-absolute -hx-mt-20" id="-step-1-pipe-creation">&lt;/span>
&lt;a href="#-step-1-pipe-creation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27640&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.471471&lt;/span> &lt;span class="nf">pipe2&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The parent shell creates a pipe with two file descriptors:
&lt;ul>
&lt;li>&lt;code>3&lt;/code>: Read end (for &lt;code>wc&lt;/code>)&lt;/li>
&lt;li>&lt;code>4&lt;/code>: Write end (for &lt;code>cat&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>pipe2()&lt;/code> is a modern variant of &lt;code>pipe()&lt;/code> that supports flags. Here, no flags are set (&lt;code>0&lt;/code>), so it behaves like &lt;code>pipe()&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3>✅ Step 2: Forking Child Processes&lt;span class="hx-absolute -hx-mt-20" id="-step-2-forking-child-processes">&lt;/span>
&lt;a href="#-step-2-forking-child-processes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>First Child (PID &lt;code>27641&lt;/code>) – runs &lt;code>cat&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="first-child-pid-27641--runs-cat">&lt;/span>
&lt;a href="#first-child-pid-27641--runs-cat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27640&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.472226&lt;/span> &lt;span class="nf">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">child_stack&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flags&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">CLONE_CHILD_CLEARTID&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">CLONE_CHILD_SETTID&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">SIGCHLD&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27641&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The parent shell uses &lt;code>clone()&lt;/code> to create a child process.&lt;/li>
&lt;li>This is how &lt;code>fork()&lt;/code> is implemented in modern &lt;code>glibc&lt;/code> — via &lt;code>clone()&lt;/code> with &lt;code>SIGCHLD&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>Second Child (PID &lt;code>27642&lt;/code>) – runs &lt;code>wc -l&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="second-child-pid-27642--runs-wc--l">&lt;/span>
&lt;a href="#second-child-pid-27642--runs-wc--l" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27640&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.478608&lt;/span> &lt;span class="nf">clone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">child_stack&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flags&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">CLONE_CHILD_CLEARTID&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">CLONE_CHILD_SETTID&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">SIGCHLD&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27642&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The parent shell creates a second child process.&lt;/li>
&lt;li>Again, this is a &lt;code>fork()&lt;/code> under the hood.&lt;/li>
&lt;/ul>
&lt;h3>✅ Step 3: Redirecting File Descriptors&lt;span class="hx-absolute -hx-mt-20" id="-step-3-redirecting-file-descriptors">&lt;/span>
&lt;a href="#-step-3-redirecting-file-descriptors" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>First Child (PID &lt;code>27641&lt;/code>) – &lt;code>cat&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="first-child-pid-27641--cat">&lt;/span>
&lt;a href="#first-child-pid-27641--cat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27641&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.475308&lt;/span> &lt;span class="nf">dup2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27641&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.475737&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Redirects stdout (&lt;code>FD 1&lt;/code>) to the write end of the pipe (&lt;code>FD 4&lt;/code>).&lt;/li>
&lt;li>Closes the redundant &lt;code>FD 4&lt;/code> after duplication.&lt;/li>
&lt;/ul>
&lt;h4>Second Child (PID &lt;code>27642&lt;/code>) – &lt;code>wc&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="second-child-pid-27642--wc">&lt;/span>
&lt;a href="#second-child-pid-27642--wc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27642&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.480811&lt;/span> &lt;span class="nf">dup2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27642&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.482849&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Redirects stdin (&lt;code>FD 0&lt;/code>) to the read end of the pipe (&lt;code>FD 3&lt;/code>).&lt;/li>
&lt;li>Closes the redundant &lt;code>FD 3&lt;/code> after duplication.&lt;/li>
&lt;/ul>
&lt;h3>✅ Step 4: Executing Commands&lt;span class="hx-absolute -hx-mt-20" id="-step-4-executing-commands">&lt;/span>
&lt;a href="#-step-4-executing-commands" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;code>cat&lt;/code> Process (PID &lt;code>27641&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="cat-process-pid-27641">&lt;/span>
&lt;a href="#cat-process-pid-27641" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27641&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.476204&lt;/span> &lt;span class="nf">execve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/usr/bin/cat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;cat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;/etc/passwd&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Replaces child process with &lt;code>cat /etc/passwd&lt;/code>.&lt;/li>
&lt;li>Now &lt;code>cat&lt;/code> writes its output to the pipe.&lt;/li>
&lt;/ul>
&lt;h4>&lt;code>wc&lt;/code> Process (PID &lt;code>27642&lt;/code>)&lt;span class="hx-absolute -hx-mt-20" id="wc-process-pid-27642">&lt;/span>
&lt;a href="#wc-process-pid-27642" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27642&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.483297&lt;/span> &lt;span class="nf">execve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/usr/bin/wc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;wc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;-l&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Replaces child process with &lt;code>wc -l&lt;/code>.&lt;/li>
&lt;li>Now &lt;code>wc&lt;/code> reads input from the pipe and counts lines.&lt;/li>
&lt;/ul>
&lt;h3>✅ Step 5: Parent Shell Cleanup&lt;span class="hx-absolute -hx-mt-20" id="-step-5-parent-shell-cleanup">&lt;/span>
&lt;a href="#-step-5-parent-shell-cleanup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27640&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.474244&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">27640&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mf">49.479006&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The parent shell closes both ends of the pipe.&lt;/li>
&lt;li>This ensures the reader (&lt;code>wc&lt;/code>) knows when the writer (&lt;code>cat&lt;/code>) has finished (when all writers have closed the pipe).&lt;/li>
&lt;/ul>
&lt;h3>✅ Step 6: Process Exit&lt;span class="hx-absolute -hx-mt-20" id="-step-6-process-exit">&lt;/span>
&lt;a href="#-step-6-process-exit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Both child processes exit cleanly:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="mi">27641&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+++&lt;/span> &lt;span class="n">exited&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">+++&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="mi">27642&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+++&lt;/span> &lt;span class="n">exited&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">+++&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>And finally, the parent shell exits:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="mi">27640&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+++&lt;/span> &lt;span class="n">exited&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">+++&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>涉及系统调用总结&lt;span class="hx-absolute -hx-mt-20" id="涉及系统调用总结">&lt;/span>
&lt;a href="#%e6%b6%89%e5%8f%8a%e7%b3%bb%e7%bb%9f%e8%b0%83%e7%94%a8%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>PID&lt;/th>
&lt;th>Action&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>27640&lt;/td>
&lt;td>&lt;code>pipe2([3, 4], 0)&lt;/code>&lt;/td>
&lt;td>Creates pipe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27640&lt;/td>
&lt;td>&lt;code>clone(...)&lt;/code>&lt;/td>
&lt;td>Forks first child (PID 27641)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27640&lt;/td>
&lt;td>&lt;code>clone(...)&lt;/code>&lt;/td>
&lt;td>Forks second child (PID 27642)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27641&lt;/td>
&lt;td>&lt;code>dup2(4, 1)&lt;/code>&lt;/td>
&lt;td>Redirects stdout to pipe write end&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27642&lt;/td>
&lt;td>&lt;code>dup2(3, 0)&lt;/code>&lt;/td>
&lt;td>Redirects stdin to pipe read end&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27641&lt;/td>
&lt;td>&lt;code>execve(&amp;quot;cat&amp;quot;, ...)&lt;/code>&lt;/td>
&lt;td>Replaces child with &lt;code>cat&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27642&lt;/td>
&lt;td>&lt;code>execve(&amp;quot;wc&amp;quot;, ...)&lt;/code>&lt;/td>
&lt;td>Replaces child with &lt;code>wc -l&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27640&lt;/td>
&lt;td>&lt;code>wait()&lt;/code>&lt;/td>
&lt;td>Waits for both children to finish&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://thoughtbot.com/blog/input-output-redirection-in-the-shell" target="_blank" rel="noopener">IO redirection in shell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/clone.2.html" target="_blank" rel="noopener">sys-call-clone&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/dup.2.html" target="_blank" rel="noopener">sys-call-dup2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/pipe2.2.html" target="_blank" rel="noopener">sys-call-pipe2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/execve.2.html" target="_blank" rel="noopener">sys-call-execve&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chat.qwen.ai/c/83ce0a69-a113-4a13-89c4-9a50ce806806" target="_blank" rel="noopener">supported by qwen&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Master Dns Resolve Steps</title><link>https://cloudedseal.github.io/blog/master-dns-resolve-steps/</link><pubDate>Fri, 23 May 2025 11:55:31 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-dns-resolve-steps/</guid><description>
&lt;blockquote>
&lt;p>分析环境 mint21&lt;/p>
&lt;/blockquote>
&lt;h2>本文目标&lt;span class="hx-absolute -hx-mt-20" id="本文目标">&lt;/span>
&lt;a href="#%e6%9c%ac%e6%96%87%e7%9b%ae%e6%a0%87" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>弄懂在本机向外部的(上游的) DNS server 发出查询之前, 在本机的查询步骤是什么？&lt;/li>
&lt;/ul>
&lt;h2>本文总结&lt;span class="hx-absolute -hx-mt-20" id="本文总结">&lt;/span>
&lt;a href="#%e6%9c%ac%e6%96%87%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>/etc/nsswitch.conf&lt;/code> 的 &lt;code>hosts&lt;/code> 配置本机 DNS 服务查询的顺序, 即 &lt;code>/etc/hosts&lt;/code> 文件等&lt;/li>
&lt;li>&lt;code>systemd-resolved&lt;/code> 就是传说中的 DNS &lt;code>stub&lt;/code> dns resolver&lt;/li>
&lt;/ol>
&lt;h2>linux 上 DNS 解析流程&lt;span class="hx-absolute -hx-mt-20" id="linux-上-dns-解析流程">&lt;/span>
&lt;a href="#linux-%e4%b8%8a-dns-%e8%a7%a3%e6%9e%90%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>以 ping -c 1 baidu.com 为例&lt;/li>
&lt;li>&lt;a href="https://github.com/cloudedseal/underlayer/blob/main/dns-resolve-expore/ping.log.9762" target="_blank" rel="noopener">ping strace 日志&lt;/a>，分析 ping 如何拿到 baidu.com 的 IP, 向目标 IP 发送 ICMP&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo strace -f -o ping.log -e &lt;span class="nv">trace&lt;/span>&lt;span class="o">=&lt;/span>execve,access,openat,socket,connect,newfstatat,sendmmsg,recvfrom,sendto,recvmsg,write ping -c &lt;span class="m">1&lt;/span> baidu.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>1. &lt;strong>Start the &lt;code>ping&lt;/code> Process&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-start-the">&lt;/span>
&lt;a href="#1-start-the" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/ping&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;ping&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;baidu.com&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, 0x7ffce9f3de88 /* &lt;span class="m">26&lt;/span> vars */&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The &lt;code>ping&lt;/code> command begins execution.&lt;/li>
&lt;/ul>
&lt;h3>2. &lt;strong>Load Required Libraries&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-load-required-libraries">&lt;/span>
&lt;a href="#2-load-required-libraries" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openat&lt;span class="o">(&lt;/span>AT_FDCWD, &lt;span class="s2">&amp;#34;/lib/x86_64-linux-gnu/libc.so.6&amp;#34;&lt;/span>, O_RDONLY&lt;span class="p">|&lt;/span>O_CLOEXEC&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openat&lt;span class="o">(&lt;/span>AT_FDCWD, &lt;span class="s2">&amp;#34;/lib/x86_64-linux-gnu/libidn2.so.0&amp;#34;&lt;/span>, O_RDONLY&lt;span class="p">|&lt;/span>O_CLOEXEC&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Libraries like &lt;code>libc&lt;/code> (C standard library) and &lt;code>libidn2&lt;/code> (Internationalized Domain Names) are loaded for DNS resolution and string handling. 处理国际化, 非英文字母的域名&lt;/li>
&lt;/ul>
&lt;h3>3. &lt;strong>Check for &lt;code>nscd&lt;/code> (Name Service Cache Daemon)&lt;/strong> 检查缓存&lt;span class="hx-absolute -hx-mt-20" id="3-check-for--检查缓存">&lt;/span>
&lt;a href="#3-check-for--%e6%a3%80%e6%9f%a5%e7%bc%93%e5%ad%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">connect&lt;span class="o">(&lt;/span>5, &lt;span class="o">{&lt;/span>&lt;span class="nv">sa_family&lt;/span>&lt;span class="o">=&lt;/span>AF_UNIX, &lt;span class="nv">sun_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>, 110&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT &lt;span class="o">(&lt;/span>No such file or directory&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The system tries to use &lt;code>nscd&lt;/code> for cached DNS lookups but fails because &lt;code>/var/run/nscd/socket&lt;/code> does not exist. This means caching is disabled or &lt;code>nscd&lt;/code> is not running.&lt;/li>
&lt;li>查看 &lt;code>nscd&lt;/code> DNS 缓存, 这个服务默认没有安装&lt;/li>
&lt;/ul>
&lt;h3>4. &lt;strong>Read &lt;code>/etc/nsswitch.conf&lt;/code>&lt;/strong> 获取 DNS 解析服务顺序&lt;span class="hx-absolute -hx-mt-20" id="4-read--获取-dns-解析服务顺序">&lt;/span>
&lt;a href="#4-read--%e8%8e%b7%e5%8f%96-dns-%e8%a7%a3%e6%9e%90%e6%9c%8d%e5%8a%a1%e9%a1%ba%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openat&lt;span class="o">(&lt;/span>AT_FDCWD, &lt;span class="s2">&amp;#34;/etc/nsswitch.conf&amp;#34;&lt;/span>, O_RDONLY&lt;span class="p">|&lt;/span>O_CLOEXEC&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The system reads the &lt;strong>Name Service Switch (NSS)&lt;/strong> configuration.&lt;/li>
&lt;li>This file defines the &lt;code>order of name resolution services&lt;/code> (e.g., &lt;code>files&lt;/code> for &lt;code>/etc/hosts&lt;/code>, &lt;code>dns&lt;/code> for DNS).&lt;/li>
&lt;li>定义了 DNS 解析服务的顺序&lt;/li>
&lt;/ul>
&lt;h4>/etc/nsswitch.conf 内容&lt;span class="hx-absolute -hx-mt-20" id="etcnsswitchconf-内容">&lt;/span>
&lt;a href="#etcnsswitchconf-%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/nsswitch.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Example configuration of GNU Name Service Switch functionality.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you have the `glibc-doc-reference&amp;#39; and `info&amp;#39; packages installed, try:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># `info libc &amp;#34;Name Service Switch&amp;#34;&amp;#39; for information about this file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">passwd: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shadow: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gshadow: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hosts: files mdns4_minimal &lt;span class="o">[&lt;/span>&lt;span class="nv">NOTFOUND&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="o">]&lt;/span> dns myhostname
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">networks: files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">protocols: db files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">services: db files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ethers: db files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rpc: db files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netgroup: nis&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>1. &lt;strong>&lt;code>hosts:&lt;/code> Line&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-hosts">&lt;/span>
&lt;a href="#1-hosts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hosts: files mdns4_minimal &lt;span class="o">[&lt;/span>&lt;span class="nv">NOTFOUND&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="o">]&lt;/span> dns myhostname&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Order of resolution-DNS 解析核心逻辑&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>files&lt;/code>&lt;/strong>: Check &lt;code>/etc/hosts&lt;/code> first (static hostname-to-IP mappings).&lt;/li>
&lt;li>&lt;strong>&lt;code>mdns4_minimal&lt;/code>&lt;/strong>: Use multicast DNS (mDNS) for &lt;code>.local&lt;/code> names &lt;strong>IPv4-only&lt;/strong> (common for local network devices).
&lt;ul>
&lt;li>&lt;code>[NOTFOUND=return]&lt;/code>: If mDNS returns &amp;ldquo;not found,&amp;rdquo; stop here and don’t proceed to &lt;code>dns&lt;/code> or &lt;code>myhostname&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>dns&lt;/code>&lt;/strong>: Use DNS (configured in &lt;code>/etc/resolv.conf&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>myhostname&lt;/code>&lt;/strong>: Resolve the local machine’s hostname to its IP addresses (loopback and network interfaces).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Implications&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>For regular domains (e.g., &lt;code>baidu.com&lt;/code>)&lt;/strong>: mDNS is skipped (since it’s not &lt;code>.local&lt;/code>), so DNS is used directly.&lt;/li>
&lt;li>&lt;strong>For &lt;code>.local&lt;/code> names&lt;/strong>: mDNS is prioritized, and DNS is ignored if mDNS fails.&lt;/li>
&lt;li>&lt;strong>Security&lt;/strong>: Prevents DNS fallback for mDNS queries, avoiding potential conflicts.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h5>2. &lt;strong>&lt;code>passwd&lt;/code>, &lt;code>group&lt;/code>, &lt;code>shadow&lt;/code> Lines&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-passwd">&lt;/span>
&lt;a href="#2-passwd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">passwd: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group: files systemd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shadow: files systemd&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Sources&lt;/strong>:
&lt;ul>
&lt;li>&lt;strong>&lt;code>files&lt;/code>&lt;/strong>: Read from &lt;code>/etc/passwd&lt;/code>, &lt;code>/etc/group&lt;/code>, and &lt;code>/etc/shadow&lt;/code>.&lt;/li>
&lt;li>&lt;strong>&lt;code>systemd&lt;/code>&lt;/strong>: Integrates with &lt;code>systemd&lt;/code> for dynamic users (e.g., containerized services or transient users).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Use Case&lt;/strong>: Ensures compatibility with modern systems using &lt;code>systemd&lt;/code>-managed users (e.g., Docker containers).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h5>3. &lt;strong>&lt;code>netgroup&lt;/code> Line&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-netgroup">&lt;/span>
&lt;a href="#3-netgroup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">netgroup: nis&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>NIS (Network Information Service)&lt;/strong>: Legacy protocol for centralized user/group management.&lt;/li>
&lt;li>&lt;strong>Warning&lt;/strong>: NIS is insecure (plaintext communication). If unused, consider removing this line to avoid unnecessary risks.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>How This Affects DNS Resolution?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-this-affects-dns-resolution">&lt;/span>
&lt;a href="#how-this-affects-dns-resolution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>1. &lt;strong>DNS Lookup Path&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-dns-lookup-path">&lt;/span>
&lt;a href="#1-dns-lookup-path" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>For &lt;code>baidu.com&lt;/code> (non-&lt;code>.local&lt;/code> domain):
&lt;ol>
&lt;li>Check &lt;code>/etc/hosts&lt;/code> → No match.&lt;/li>
&lt;li>Skip &lt;code>mdns4_minimal&lt;/code> (not relevant for &lt;code>baidu.com&lt;/code>).&lt;/li>
&lt;li>Query DNS via &lt;code>systemd-resolved&lt;/code> (uses &lt;code>/etc/resolv.conf&lt;/code>).&lt;/li>
&lt;li>Fallback to &lt;code>myhostname&lt;/code> only if DNS fails (unlikely).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h5>2. &lt;strong>&lt;code>/etc/resolv.conf&lt;/code> Integration&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-etcresolvconf">&lt;/span>
&lt;a href="#2-etcresolvconf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>The &lt;code>dns&lt;/code> source uses settings from &lt;code>/etc/resolv.conf&lt;/code> (e.g., &lt;code>nameserver 127.0.0.53&lt;/code> for &lt;code>systemd-resolved&lt;/code>).&lt;/li>
&lt;li>&lt;code>systemd-resolved&lt;/code> acts as a local DNS stub resolver, handling:
&lt;ul>
&lt;li>DNSSEC validation.&lt;/li>
&lt;li>Caching.&lt;/li>
&lt;li>Split DNS (for VPNs).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Check &lt;code>/etc/hosts&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="check">&lt;/span>
&lt;a href="#check" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openat&lt;span class="o">(&lt;/span>AT_FDCWD, &lt;span class="s2">&amp;#34;/etc/hosts&amp;#34;&lt;/span>, O_RDONLY&lt;span class="p">|&lt;/span>O_CLOEXEC&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The system checks &lt;code>/etc/hosts&lt;/code> for a static entry for &lt;code>baidu.com&lt;/code>.&lt;/li>
&lt;li>If found, it skips DNS. No match is found here.&lt;/li>
&lt;li>在这个文件里寻找目标域名的 IP, 找到之后返回&lt;/li>
&lt;/ul>
&lt;h3>5. &lt;strong>Read &lt;code>/etc/resolv.conf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="5-read">&lt;/span>
&lt;a href="#5-read" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">openat&lt;span class="o">(&lt;/span>AT_FDCWD, &lt;span class="s2">&amp;#34;/etc/resolv.conf&amp;#34;&lt;/span>, O_RDONLY&lt;span class="p">|&lt;/span>O_CLOEXEC&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>读取 DNS 解析器配置文件, 真正的配置在 /run/systemd/resolve/stub-resolv.conf&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>dynamic DNS configuration file managed by &lt;code>systemd-resolved&lt;/code>, the local DNS stub resolver.&lt;/li>
&lt;li>It serves as the system&amp;rsquo;s &lt;strong>primary DNS resolver&lt;/strong> configuration, ensuring applications route DNS queries through systemd-resolved for features like &lt;code>caching&lt;/code>, &lt;code>DNSSEC validation&lt;/code>, and &lt;code>split DNS&lt;/code> (e.g., for VPNs).&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>&lt;code>systemd-resolved&lt;/code>&lt;/strong> local DNS stub resolver&lt;span class="hx-absolute -hx-mt-20" id="systemd-resolved-local-dns-stub-resolver">&lt;/span>
&lt;a href="#systemd-resolved-local-dns-stub-resolver" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl status systemd-resolved.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">● systemd-resolved.service - Network Name Resolution
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Loaded: loaded &lt;span class="o">(&lt;/span>/usr/lib/systemd/system/systemd-resolved.service&lt;span class="p">;&lt;/span> enabled&lt;span class="p">;&lt;/span> preset: enabled&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Active: active &lt;span class="o">(&lt;/span>running&lt;span class="o">)&lt;/span> since Sat 2025-05-24 15:09:18 CST&lt;span class="p">;&lt;/span> 58min ago
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Docs: man:systemd-resolved.service&lt;span class="o">(&lt;/span>8&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> man:org.freedesktop.resolve1&lt;span class="o">(&lt;/span>5&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> https://www.freedesktop.org/wiki/Software/systemd/writing-network-configuration-managers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> https://www.freedesktop.org/wiki/Software/systemd/writing-resolver-clients
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Main PID: &lt;span class="m">622&lt;/span> &lt;span class="o">(&lt;/span>systemd-resolve&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Status: &lt;span class="s2">&amp;#34;Processing requests...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Tasks: &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>limit: 4545&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Memory: 7.5M &lt;span class="o">(&lt;/span>peak: 8.0M&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CPU: 269ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CGroup: /system.slice/systemd-resolved.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─622 /usr/lib/systemd/systemd-resolved&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>/etc/resolv.conf 内容&lt;span class="hx-absolute -hx-mt-20" id="etcresolvconf-内容">&lt;/span>
&lt;a href="#etcresolvconf-%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Run &amp;#34;resolvectl status&amp;#34; to see details about the uplink DNS servers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># currently in use.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Third party programs should typically not access this file directly, but only&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># through the symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># different way, replace this symlink by a static file or a different symlink.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># See man:systemd-resolved.service(8) for details about the supported modes of&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># operation for /etc/resolv.conf.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 127.0.0.53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">options edns0 trust-ad
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">search localdomain&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>1. &lt;strong>&lt;code>nameserver 127.0.0.53&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-nameserver-1270053">&lt;/span>
&lt;a href="#1-nameserver-1270053" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: All DNS queries from applications are sent to this &lt;strong>local DNS stub resolver&lt;/strong>.
&lt;ul>
&lt;li>&lt;code>127.0.0.53&lt;/code> is a special &lt;code>loopback address&lt;/code> used exclusively by &lt;code>systemd-resolved&lt;/code>.&lt;/li>
&lt;li>The resolver listens on this address to handle queries from applications.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Why Not a Public DNS Server?&lt;/strong>
&lt;ul>
&lt;li>Applications &lt;code>don't communicate directly&lt;/code> with public DNS servers (e.g., &lt;code>8.8.8.8&lt;/code>). Instead, they send queries to &lt;code>127.0.0.53&lt;/code>, and &lt;code>systemd-resolved&lt;/code> forwards them to upstream DNS servers configured elsewhere.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>连接测试&lt;/strong>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> nc -zv 127.0.0.53 &lt;span class="m">53&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Connection to 127.0.0.53 &lt;span class="m">53&lt;/span> port &lt;span class="o">[&lt;/span>tcp/domain&lt;span class="o">]&lt;/span> succeeded!&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h5>2. &lt;strong>&lt;code>options edns0 trust-ad&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-options-edns0-trust-ad">&lt;/span>
&lt;a href="#2-options-edns0-trust-ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>&lt;code>edns0&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>Enables &lt;strong>EDNS(0)&lt;/strong> (Extension Mechanisms for DNS), allowing larger UDP packets (up to 4096 bytes instead of 512 bytes).&lt;/li>
&lt;li>Required for DNSSEC and modern DNS features like DNS over TLS (DoT).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>trust-ad&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>Tells the resolver to trust the &lt;strong>AD (Authentic Data)&lt;/strong> bit in DNS responses.&lt;/li>
&lt;li>When DNSSEC validation is enabled, &lt;code>systemd-resolved&lt;/code> validates DNS responses and sets the AD bit if valid. This option ensures applications trust the resolver&amp;rsquo;s validation results.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>3. &lt;strong>&lt;code>search localdomain&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-search-localdomain">&lt;/span>
&lt;a href="#3-search-localdomain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Defines the &lt;strong>search domain&lt;/strong> for unqualified hostnames (e.g., resolving &lt;code>myhost&lt;/code> to &lt;code>myhost.localdomain&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Behavior&lt;/strong>:
&lt;ul>
&lt;li>If you run &lt;code>ping myhost&lt;/code>, the resolver will attempt:
&lt;ol>
&lt;li>&lt;code>myhost&lt;/code>&lt;/li>
&lt;li>&lt;code>myhost.localdomain&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Avoids needing to type full FQDNs (Fully Qualified Domain Names) in local networks.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>6. &lt;strong>Query DNS via &lt;code>systemd-resolved&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="6-query-dns-via">&lt;/span>
&lt;a href="#6-query-dns-via" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">socket&lt;span class="o">(&lt;/span>AF_INET, SOCK_DGRAM&lt;span class="p">|&lt;/span>SOCK_CLOEXEC&lt;span class="p">|&lt;/span>SOCK_NONBLOCK, IPPROTO_IP&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">connect&lt;span class="o">(&lt;/span>5, &lt;span class="o">{&lt;/span>&lt;span class="nv">sa_family&lt;/span>&lt;span class="o">=&lt;/span>AF_INET, &lt;span class="nv">sin_port&lt;/span>&lt;span class="o">=&lt;/span>htons&lt;span class="o">(&lt;/span>53&lt;span class="o">)&lt;/span>, &lt;span class="nv">sin_addr&lt;/span>&lt;span class="o">=&lt;/span>inet_addr&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.53&amp;#34;&lt;/span>&lt;span class="o">)}&lt;/span>, 16&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sendmmsg&lt;span class="o">(&lt;/span>5, &lt;span class="o">[{&lt;/span>&lt;span class="nv">msg_hdr&lt;/span>&lt;span class="o">={&lt;/span>...&lt;span class="o">}&lt;/span>, &lt;span class="nv">msg_len&lt;/span>&lt;span class="o">=&lt;/span>38&lt;span class="o">}&lt;/span>, ...&lt;span class="o">]&lt;/span>, 2, MSG_NOSIGNAL&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>A UDP socket is created to communicate with the DNS resolver (&lt;code>127.0.0.53:53&lt;/code>).&lt;/li>
&lt;li>Two DNS queries are sent:
&lt;ul>
&lt;li>&lt;strong>A record query&lt;/strong> (IPv4 address) for &lt;code>baidu.com&lt;/code>.&lt;/li>
&lt;li>&lt;strong>AAAA record query&lt;/strong> (IPv6 address) for &lt;code>baidu.com&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>upstream DNS servers&lt;/strong> 上游的 DNS 服务器&lt;span class="hx-absolute -hx-mt-20" id="upstream-dns-servers-上游的-dns-服务器">&lt;/span>
&lt;a href="#upstream-dns-servers-%e4%b8%8a%e6%b8%b8%e7%9a%84-dns-%e6%9c%8d%e5%8a%a1%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>upstream DNS servers is external DNS servers that local DNS resolver &lt;code>forwards&lt;/code> queries to for resolution&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>The actual upstream DNS servers (e.g., your ISP&amp;rsquo;s DNS or &lt;code>1.1.1.1&lt;/code>)
&lt;ol>
&lt;li>&lt;code>/etc/systemd/resolved.conf&lt;/code> (static configuration).&lt;/li>
&lt;li>Dynamically via &lt;code>DHCP&lt;/code> or &lt;code>VPN managers&lt;/code> (e.g., NetworkManager).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4>查看 upstream DNS 解析器信息&lt;span class="hx-absolute -hx-mt-20" id="查看-upstream-dns-解析器信息">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b-upstream-dns-%e8%a7%a3%e6%9e%90%e5%99%a8%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">resolvectl status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Protocols: -LLMNR -mDNS -DNSOverTLS &lt;span class="nv">DNSSEC&lt;/span>&lt;span class="o">=&lt;/span>no/unsupported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resolv.conf mode: stub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Link &lt;span class="m">2&lt;/span> &lt;span class="o">(&lt;/span>ens33&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Current Scopes: DNS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Protocols: +DefaultRoute -LLMNR -mDNS -DNSOverTLS &lt;span class="nv">DNSSEC&lt;/span>&lt;span class="o">=&lt;/span>no/unsupported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Current DNS Server: 172.16.222.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DNS Servers: 172.16.222.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DNS Domain: localdomain&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>注意 resolv.conf mode: stub&lt;/p>
&lt;/blockquote>
&lt;h3>7. &lt;strong>Receive DNS Responses&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="7-receive-dns-responses">&lt;/span>
&lt;a href="#7-receive-dns-responses" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">recvfrom&lt;span class="o">(&lt;/span>5, &lt;span class="s2">&amp;#34;\266L\201\200\0\1\0\2\0\0\0\1\5baidu\3com\0\0\1\0\1\300\f\0\1\0...&amp;#34;&lt;/span>, 2048, 0, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">70&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">recvfrom&lt;span class="o">(&lt;/span>5, &lt;span class="s2">&amp;#34;\261e\201\200\0\1\0\0\0\1\0\1\5baidu\3com\0\0\34\0\1\300\f\0\6\0...&amp;#34;&lt;/span>, 65536, 0, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">81&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The DNS resolver returns:
&lt;ul>
&lt;li>&lt;strong>A record&lt;/strong>: &lt;code>39.156.66.10&lt;/code> (IPv4 address for &lt;code>baidu.com&lt;/code>).&lt;/li>
&lt;li>&lt;strong>AAAA record&lt;/strong>: &lt;code>2400:cb00:2048:1::681b:8093&lt;/code> (IPv6 address, but not shown in &lt;code>strace&lt;/code> output).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;code>ping&lt;/code> command uses the IPv4 address &lt;code>39.156.66.10&lt;/code> for the ICMP echo request.&lt;/li>
&lt;/ul>
&lt;h3>8. &lt;strong>Final Output&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="8-final-output">&lt;/span>
&lt;a href="#8-final-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">write&lt;span class="o">(&lt;/span>1, &lt;span class="s2">&amp;#34;PING baidu.com (39.156.66.10) 56&amp;#34;&lt;/span>..., 52&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">52&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The resolved IP address is printed, and &lt;code>ping&lt;/code> sends an ICMP packet to &lt;code>39.156.66.10&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Key Files and Services Involved&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-files-and-services-involved">&lt;/span>
&lt;a href="#key-files-and-services-involved" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>&lt;code>/etc/nsswitch.conf&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>Controls the order of name resolution (e.g., &lt;code>files&lt;/code> → &lt;code>dns&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>/etc/resolv.conf&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>Specifies DNS servers (e.g., &lt;code>127.0.0.53&lt;/code> for &lt;code>systemd-resolved&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>systemd-resolved&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>A local DNS stub resolver that handles queries and caches results.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>/etc/hosts&lt;/code>&lt;/strong>:
&lt;ul>
&lt;li>Static hostname-to-IP mappings (bypasses DNS if a match exists).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.man7.org/linux/man-pages/man8/systemd-resolved.service.8.html" target="_blank" rel="noopener">systemd-resolved.service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/nsswitch.conf.5.html" target="_blank" rel="noopener">nsswitch.conf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/gai.conf.5.html" target="_blank" rel="noopener">gai.conf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/resolv.conf.5.html" target="_blank" rel="noopener">resolv.conf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.man7.org/linux/man-pages/man1/resolvectl.1.html" target="_blank" rel="noopener">resolvectl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/title/Systemd-resolved" target="_blank" rel="noopener">Systemd-resolved&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java Thread</title><link>https://cloudedseal.github.io/blog/java-thread/</link><pubDate>Tue, 06 May 2025 15:11:27 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-thread/</guid><description>
&lt;h2>java 的线程由 os scheduler 负责调度&lt;span class="hx-absolute -hx-mt-20" id="java-的线程由-os-scheduler-负责调度">&lt;/span>
&lt;a href="#java-%e7%9a%84%e7%ba%bf%e7%a8%8b%e7%94%b1-os-scheduler-%e8%b4%9f%e8%b4%a3%e8%b0%83%e5%ba%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Java thread scheduling is &lt;strong>primarily managed by the operating system (OS) scheduler&lt;/strong>, but the Java Virtual Machine (JVM) and the application code can &lt;code>influence&lt;/code> thread behavior in several ways.&lt;/p>
&lt;ul>
&lt;li>java 归根结底一个用户空间的程序而已。&lt;/li>
&lt;li>实际的线程调度根本上还是由操作系统的调度器负责。&lt;/li>
&lt;li>java 只是可以调整相应参数来影响线程的调度。&lt;/li>
&lt;li>线程最终如何调度 java 无法决定。&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>OS Scheduler Dependency&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="os-scheduler-dependency">&lt;/span>
&lt;a href="#os-scheduler-dependency" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Native Threads&lt;/strong>: Modern JVMs use &lt;strong>native threads&lt;/strong> (&lt;code>one-to-one&lt;/code> mapping with OS threads). The OS scheduler is responsible for allocating CPU time to these threads based on its own algorithms (e.g., time-sharing, priority-based scheduling).&lt;/li>
&lt;li>&lt;strong>Thread Lifecycle&lt;/strong>: The OS handles thread &lt;code>creation&lt;/code>, &lt;code>scheduling&lt;/code>, &lt;code>preemption&lt;/code>, and &lt;code>termination&lt;/code>. Even though Java provides abstractions like &lt;code>Thread&lt;/code> and &lt;code>Runnable&lt;/code>, the underlying OS controls execution.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>java 可以影响 Thread 行为&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="java-可以影响-thread-行为">&lt;/span>
&lt;a href="#java-%e5%8f%af%e4%bb%a5%e5%bd%b1%e5%93%8d-thread-%e8%a1%8c%e4%b8%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>While the &lt;strong>&lt;code>OS scheduler&lt;/code>&lt;/strong> has &lt;code>ultimate authority&lt;/code>, Java applications can &lt;strong>influence thread behavior&lt;/strong> through:&lt;/p>
&lt;h4>&lt;strong>Thread Priority&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="thread-priority">&lt;/span>
&lt;a href="#thread-priority" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>设置线程的优先级&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Java allows setting thread priorities (&lt;code>Thread.setPriority(int priority)&lt;/code>), which are mapped to OS-specific priorities.
&lt;ul>
&lt;li>&lt;strong>Effect&lt;/strong>: Higher-priority threads may get more CPU time, but this is &lt;strong>not guaranteed&lt;/strong>. OS policies (e.g., Linux&amp;rsquo;s Completely Fair Scheduler) may ignore or reinterpret Java priorities.&lt;/li>
&lt;li>&lt;strong>Example&lt;/strong>: A thread with &lt;code>Thread.MAX_PRIORITY&lt;/code> might run more frequently than one with &lt;code>Thread.MIN_PRIORITY&lt;/code>, but the OS decides.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Thread Yielding and Sleeping&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="thread-yielding-and-sleeping">&lt;/span>
&lt;a href="#thread-yielding-and-sleeping" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>放弃 CPU 的控制权/休眠&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>Thread.yield()&lt;/code>: Hints to the OS scheduler that the current thread is willing to yield its CPU time. The scheduler may choose another thread of the same priority to run.&lt;/li>
&lt;li>&lt;code>Thread.sleep(long millis)&lt;/code>: Pauses the thread for a specified time, allowing other threads to execute. This indirectly affects scheduling by reducing contention.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Synchronization and Blocking&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="synchronization-and-blocking">&lt;/span>
&lt;a href="#synchronization-and-blocking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Synchronized blocks, locks (&lt;code>synchronized&lt;/code>, &lt;code>ReentrantLock&lt;/code>), and I/O operations (e.g., file/network I/O) can cause threads to block, triggering context switches managed by the OS.&lt;/li>
&lt;li>Contention for shared resources (e.g., locks) can lead to thread starvation or deadlocks, which the application must manage.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Thread States and Lifecycle&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="thread-states-and-lifecycle">&lt;/span>
&lt;a href="#thread-states-and-lifecycle" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Application code controls thread states (e.g., &lt;code>start()&lt;/code>, &lt;code>join()&lt;/code>, &lt;code>interrupt()&lt;/code>). For example:
&lt;ul>
&lt;li>&lt;code>start()&lt;/code>: start the thread&lt;/li>
&lt;li>&lt;code>join()&lt;/code>: Causes one thread to wait for another&amp;rsquo;s completion.&lt;/li>
&lt;li>&lt;code>interrupt()&lt;/code>: Signals a thread to stop, which the application must handle (e.g., via &lt;code>InterruptedException&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Executor Framework and Thread Pools&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="executor-framework-and-thread-pools">&lt;/span>
&lt;a href="#executor-framework-and-thread-pools" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>High-level concurrency utilities (&lt;code>java.util.concurrent&lt;/code>) abstract thread management.&lt;/li>
&lt;li>Applications can configure thread pools (e.g., &lt;code>ThreadPoolExecutor&lt;/code>) to control how tasks are scheduled, but the actual execution still depends on the OS scheduler.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>java 层面可以影响 os 调度器的参数总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="java-层面可以影响-os-调度器的参数总结">&lt;/span>
&lt;a href="#java-%e5%b1%82%e9%9d%a2%e5%8f%af%e4%bb%a5%e5%bd%b1%e5%93%8d-os-%e8%b0%83%e5%ba%a6%e5%99%a8%e7%9a%84%e5%8f%82%e6%95%b0%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Aspect&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Controlled By&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Influenced By java&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Scheduling Algorithm&lt;/td>
&lt;td>OS (e.g., Linux CFS, Windows UMS)&lt;/td>
&lt;td>❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thread Priority&lt;/td>
&lt;td>OS (mapped from Java priorities)&lt;/td>
&lt;td>✅ (&lt;code>setPriority()&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Yielding/Sleeping&lt;/td>
&lt;td>OS (honors hints)&lt;/td>
&lt;td>✅ (&lt;code>yield()&lt;/code>, &lt;code>sleep()&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blocking/Synchronization&lt;/td>
&lt;td>OS (context switches)&lt;/td>
&lt;td>✅ (&lt;code>synchronized&lt;/code>, I/O operations)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thread Creation/Lifecycle&lt;/td>
&lt;td>OS (via JVM)&lt;/td>
&lt;td>✅ (&lt;code>start()&lt;/code>, &lt;code>join()&lt;/code>, &lt;code>interrupt()&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>In short, &lt;strong>the OS scheduler ultimately controls thread execution&lt;/strong>, but application code can influence behavior through Java&amp;rsquo;s threading APIs, synchronization, and resource management. For fine-grained control, low-level OS tools or real-time systems are required.&lt;/p>
&lt;h3>&lt;strong>JVM and OS Interactions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="jvm-and-os-interactions">&lt;/span>
&lt;a href="#jvm-and-os-interactions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The JVM acts as an &lt;code>intermediary&lt;/code> between Java code and the OS. It maps Java thread operations to OS-specific primitives (e.g., POSIX threads on Unix-like systems).&lt;/li>
&lt;li>Some JVM implementations may optimize thread scheduling (e.g., biased locking for synchronization), but these are &lt;code>OS-agnostic&lt;/code> and still subject to OS-level scheduling. 说白了, jvm 再怎样优化终究是 userspace 代码, 内核不关心。&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Limitations of Application Control&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="limitations-of-application-control">&lt;/span>
&lt;a href="#limitations-of-application-control" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>No Direct Control&lt;/strong>: Java does not expose low-level OS scheduling policies (e.g., &lt;code>SCHED_FIFO&lt;/code> or &lt;code>SCHED_RR&lt;/code> in Linux). Applications cannot directly set real-time scheduling policies.&lt;/li>
&lt;li>&lt;strong>Platform Variability&lt;/strong>: Thread behavior may differ across OSes (e.g., Windows vs. Linux) or JVM implementations (e.g., HotSpot vs. OpenJ9).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Real-Time Java (RTSJ)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="real-time-java-rtsj">&lt;/span>
&lt;a href="#real-time-java-rtsj" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>For applications requiring deterministic scheduling (e.g., real-time systems), the &lt;strong>Real-Time Specification for Java (RTSJ)&lt;/strong> provides stricter control over threads, but this requires a real-time JVM and OS support.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>AQS 和 OS 关系&lt;span class="hx-absolute -hx-mt-20" id="aqs-和-os-关系">&lt;/span>
&lt;a href="#aqs-%e5%92%8c-os-%e5%85%b3%e7%b3%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;strong>AbstractQueuedSynchronizer (AQS)&lt;/strong> is a foundational class in Java&amp;rsquo;s &lt;code>java.util.concurrent&lt;/code> package that provides a framework for building &lt;strong>synchronizers&lt;/strong> like locks (&lt;code>ReentrantLock&lt;/code>), barriers (&lt;code>CyclicBarrier&lt;/code>), latches (&lt;code>CountDownLatch&lt;/code>), and semaphores (&lt;code>Semaphore&lt;/code>). While the &lt;strong>OS scheduler&lt;/strong> still governs thread execution, AQS introduces mechanisms to &lt;strong>manage thread blocking/waking&lt;/strong> and &lt;strong>fairness policies&lt;/strong>, which directly influence thread behavior and scheduling.&lt;/p>
&lt;h3>&lt;strong>How AQS Works&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-aqs-works">&lt;/span>
&lt;a href="#how-aqs-works" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>AQS manages synchronization by:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>State Management&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Uses a &lt;code>volatile int state&lt;/code> to represent the synchronization state (e.g., lock count for &lt;code>ReentrantLock&lt;/code>, remaining permits for &lt;code>Semaphore&lt;/code>, or count for &lt;code>CountDownLatch&lt;/code>).&lt;/li>
&lt;li>Threads attempt to modify this state atomically (via CAS operations like &lt;code>compareAndSetState&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Wait Queue&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Maintains a &lt;strong>FIFO queue&lt;/strong> of waiting threads (as &lt;code>Node&lt;/code> objects) when they fail to acquire the state.&lt;/li>
&lt;li>Threads in the queue are &lt;strong>parked&lt;/strong> (blocked) using &lt;code>LockSupport.park()&lt;/code> until signaled by another thread.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blocking and Waking&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>When a thread cannot acquire the state (e.g., a lock is held), AQS &lt;strong>parks&lt;/strong> it (via &lt;code>LockSupport.park()&lt;/code>), which transitions it to the &lt;code>WAITING&lt;/code> or &lt;code>TIMED_WAITING&lt;/code> state.&lt;/li>
&lt;li>When the state is released (e.g., a lock is unlocked), AQS &lt;strong>unparks&lt;/strong> waiting threads (via &lt;code>LockSupport.unpark()&lt;/code>) to retry acquiring the state.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>AQS 对 Thread Scheduling 的影响&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="aqs-对-thread-scheduling-的影响">&lt;/span>
&lt;a href="#aqs-%e5%af%b9-thread-scheduling-%e7%9a%84%e5%bd%b1%e5%93%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>AQS indirectly affects thread scheduling by:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Reducing Spurious Wakeups and Busy-Waiting&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Instead of spinning (busy-waiting), AQS parks threads, allowing the OS scheduler to skip them until unparked. This reduces CPU usage and contention.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fairness Control&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>AQS supports both &lt;strong>fair&lt;/strong> and &lt;strong>unfair&lt;/strong> modes:
&lt;ul>
&lt;li>&lt;strong>Fair mode&lt;/strong>: Threads are granted access in FIFO order (queued). This ensures fairness but may reduce throughput due to frequent context switches.&lt;/li>
&lt;li>&lt;strong>Unfair mode&lt;/strong>: Threads may &amp;ldquo;bypass&amp;rdquo; the queue if the state is available, improving throughput but risking starvation for waiting threads.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Thread Blocking/Waking Coordination&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>AQS ensures that threads are woken up only when the synchronization state changes (e.g., a lock is released). This avoids unnecessary wakeups (unlike &lt;code>Object.notify()&lt;/code> in intrinsic locks).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Interruptible and Timed Waits&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>AQS allows threads to respond to interrupts (&lt;code>InterruptedException&lt;/code>) or timeout during waits (e.g., &lt;code>tryLock(long timeout, TimeUnit)&lt;/code>), giving applications finer control over thread behavior.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Comparison to Intrinsic Locks (&lt;code>synchronized&lt;/code>)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="comparison-to-intrinsic-locks-">&lt;/span>
&lt;a href="#comparison-to-intrinsic-locks-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>AQS (e.g., &lt;code>ReentrantLock&lt;/code>)&lt;/th>
&lt;th>Intrinsic Lock (&lt;code>synchronized&lt;/code>)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Blocking Mechanism&lt;/td>
&lt;td>Uses &lt;code>LockSupport.park()&lt;/code>&lt;/td>
&lt;td>Uses &lt;code>Object.wait()&lt;/code>/&lt;code>notify()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fairness&lt;/td>
&lt;td>Configurable (fair/unfair)&lt;/td>
&lt;td>No fairness guarantees&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Interruptibility&lt;/td>
&lt;td>Supports &lt;code>InterruptedException&lt;/code>&lt;/td>
&lt;td>Cannot interrupt waiting threads&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Timed Waits&lt;/td>
&lt;td>Supports timeouts (e.g., &lt;code>tryLock&lt;/code>)&lt;/td>
&lt;td>No timeout support&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Performance&lt;/td>
&lt;td>Optimized for high contention&lt;/td>
&lt;td>Slower under high contention&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>AQS-based synchronizers (like &lt;code>ReentrantLock&lt;/code>) are generally more efficient and flexible than intrinsic locks, especially under high contention.&lt;/p>
&lt;h3>&lt;strong>Underlying OS Interaction&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="underlying-os-interaction">&lt;/span>
&lt;a href="#underlying-os-interaction" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Parking/Unparking&lt;/strong>:&lt;br>
&lt;code>LockSupport.park()&lt;/code> and &lt;code>unpark()&lt;/code> are implemented using OS-specific primitives:&lt;/p>
&lt;ul>
&lt;li>On Linux: Uses &lt;code>futex&lt;/code> (fast userspace mutex).&lt;/li>
&lt;li>On Windows: Uses &lt;code>WaitOnAddress&lt;/code> or &lt;code>Condition Variables&lt;/code>.&lt;/li>
&lt;li>These mechanisms allow threads to &lt;code>sleep/wakeup&lt;/code> efficiently, managed by the OS scheduler.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Context Switching&lt;/strong>:&lt;br>
When a thread is parked, the OS scheduler &lt;code>removes&lt;/code> it from the &lt;code>runnable queue&lt;/code>. When unparked, it is &lt;code>re-added&lt;/code> to the queue, triggering a context switch if necessary.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Example: &lt;code>ReentrantLock&lt;/code> and AQS&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example">&lt;/span>
&lt;a href="#example" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ReentrantLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReentrantLock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Acquires the lock (may block)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Critical section&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Releases the lock, unparks waiting threads&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>If the lock is unavailable, &lt;code>lock()&lt;/code> calls &lt;code>AQS.acquire()&lt;/code>, which:
&lt;ol>
&lt;li>Attempts to acquire the state (e.g., sets &lt;code>state = 1&lt;/code> for the first lock).&lt;/li>
&lt;li>Fails → Adds the thread to the AQS queue.&lt;/li>
&lt;li>Parks the thread (OS scheduler skips it).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>When &lt;code>unlock()&lt;/code> is called:
&lt;ol>
&lt;li>Releases the state (e.g., sets &lt;code>state = 0&lt;/code>).&lt;/li>
&lt;li>Unparks the next waiting thread in the queue.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>AQS 要点理解&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="aqs-要点理解">&lt;/span>
&lt;a href="#aqs-%e8%a6%81%e7%82%b9%e7%90%86%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>AQS does not replace the OS scheduler&lt;/strong> but works &lt;em>with&lt;/em> it to manage thread blocking/waking efficiently.&lt;/li>
&lt;li>Applications using AQS-based synchronizers can:
&lt;ul>
&lt;li>&lt;code>Reduce contention&lt;/code> by parking threads instead of spinning. 减少竞争, 让线程去 sleep&lt;/li>
&lt;li>Control fairness and timeouts. 控制获取锁的公平性和超时时间&lt;/li>
&lt;li>Avoid deadlocks via interruptible waits. 可中断等待避免死锁&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The OS still schedules threads when they are &lt;code>unparked&lt;/code>, but AQS minimizes unnecessary scheduling overhead by managing the &lt;code>wait queue&lt;/code>. 被唤醒后依旧由 os 负责调度&lt;/li>
&lt;/ul>
&lt;p>In essence, &lt;strong>AQS abstracts the complexity of thread coordination&lt;/strong>, while the OS scheduler handles the &lt;code>actual execution of threads&lt;/code> based on their state (runnable, parked, etc.).&lt;/p>
&lt;hr>
&lt;h2>synchronized 关键字和 OS 关系&lt;span class="hx-absolute -hx-mt-20" id="synchronized-关键字和-os-关系">&lt;/span>
&lt;a href="#synchronized-%e5%85%b3%e9%94%ae%e5%ad%97%e5%92%8c-os-%e5%85%b3%e7%b3%bb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Intrinsic locks&lt;/strong> (also known as &lt;strong>monitor locks&lt;/strong>) are Java&amp;rsquo;s built-in synchronization mechanism, implemented using the &lt;code>synchronized&lt;/code> keyword. They provide mutual exclusion and visibility guarantees but are &lt;strong>less flexible and lower-level&lt;/strong> compared to synchronizers like &lt;code>AbstractQueuedSynchronizer&lt;/code> (AQS).&lt;/p>
&lt;h3>&lt;strong>How Intrinsic Locks Work&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-intrinsic-locks-work">&lt;/span>
&lt;a href="#how-intrinsic-locks-work" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Implicit Locking&lt;/strong>:&lt;br>
&lt;code>Every Java object&lt;/code> has an intrinsic lock (monitor). When a thread enters a &lt;code>synchronized&lt;/code> method or block:&lt;/p>
&lt;ul>
&lt;li>It &lt;strong>acquires the intrinsic lock&lt;/strong> associated with the object (e.g., &lt;code>this&lt;/code> for instance methods, the &lt;code>class object&lt;/code> for static methods).&lt;/li>
&lt;li>It &lt;strong>releases the lock&lt;/strong> &lt;code>automatically&lt;/code> when exiting the method/block (even if an exception is thrown).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blocking Behavior&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>If a thread cannot acquire the lock (e.g., it&amp;rsquo;s held by another thread), it &lt;strong>blocks&lt;/strong> until the lock becomes available.&lt;/li>
&lt;li>The JVM uses OS-specific mechanisms (e.g., &lt;code>Object.wait()&lt;/code>/&lt;code>notify()&lt;/code> internally) to manage blocked threads.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reentrancy&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Threads can reacquire the same lock multiple times (e.g., nested &lt;code>synchronized&lt;/code> calls). The lock is released only when the thread exits the outermost &lt;code>synchronized&lt;/code> block/method.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>synchronized 对 Thread Scheduling 的影响&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="synchronized-对-thread-scheduling-的影响">&lt;/span>
&lt;a href="#synchronized-%e5%af%b9-thread-scheduling-%e7%9a%84%e5%bd%b1%e5%93%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Intrinsic locks interact with the OS scheduler similarly to AQS-based synchronizers, but with key differences:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Aspect&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Intrinsic Locks (&lt;code>synchronized&lt;/code>)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>AQS-Based Locks (e.g., &lt;code>ReentrantLock&lt;/code>)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Blocking Mechanism&lt;/strong>&lt;/td>
&lt;td>Uses &lt;code>Object.wait()&lt;/code>/&lt;code>notify()&lt;/code> internally&lt;/td>
&lt;td>Uses &lt;code>LockSupport.park()&lt;/code>/&lt;code>unpark()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Fairness&lt;/strong>&lt;/td>
&lt;td>No fairness guarantees&lt;/td>
&lt;td>Configurable (fair/unfair)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Interruptibility&lt;/strong>&lt;/td>
&lt;td>Cannot interrupt waiting threads&lt;/td>
&lt;td>Supports &lt;code>InterruptedException&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Timed Waits&lt;/strong>&lt;/td>
&lt;td>No timeout support&lt;/td>
&lt;td>Supports timeouts (e.g., &lt;code>tryLock()&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Performance&lt;/strong>&lt;/td>
&lt;td>Optimized in modern JVMs (biased locking)&lt;/td>
&lt;td>More efficient under high contention&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Limitations of Intrinsic Locks&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="limitations-of-intrinsic-locks">&lt;/span>
&lt;a href="#limitations-of-intrinsic-locks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>No Fairness Control&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Threads waiting for the lock may be chosen arbitrarily by the JVM/OS, leading to potential &lt;strong>starvation&lt;/strong> in high-contention scenarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>No Support for Try/Lock with Timeout&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Threads cannot attempt to acquire the lock without blocking (e.g., &lt;code>tryLock()&lt;/code>), nor can they specify a timeout.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>No Interruption Handling&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Threads blocked on a &lt;code>synchronized&lt;/code> lock &lt;strong>cannot be interrupted&lt;/strong> (unlike AQS-based locks). This can lead to &lt;strong>deadlocks&lt;/strong> if a thread holding the lock hangs or fails to release it.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Coarse-Grained Control&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Limited to mutual exclusion; no support for advanced synchronization patterns (e.g., read/write locks, condition variables with signal groups).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Example: Intrinsic Lock Usage&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-intrinsic-lock-usage">&lt;/span>
&lt;a href="#example-intrinsic-lock-usage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Acquires the intrinsic lock on &amp;#39;this&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">increment&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Acquires the intrinsic lock on &amp;#39;this&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getCount&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>If one thread is executing &lt;code>increment()&lt;/code>, others must wait until it exits.&lt;/li>
&lt;li>No way to interrupt or time out the wait.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>When to Use Intrinsic Locks&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="when-to-use-intrinsic-locks">&lt;/span>
&lt;a href="#when-to-use-intrinsic-locks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Simple Use Cases&lt;/strong>: For low-contention scenarios where simplicity and brevity are prioritized.&lt;/li>
&lt;li>&lt;strong>Legacy Code&lt;/strong>: Older Java codebases often use &lt;code>synchronized&lt;/code> due to historical reasons.&lt;/li>
&lt;li>&lt;strong>Performance&lt;/strong>: Modern JVMs optimize intrinsic locks heavily (e.g., &lt;strong>biased locking&lt;/strong>, &lt;strong>lock coarsening&lt;/strong>), making them competitive with AQS-based locks in many cases.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>OS Scheduler Interaction&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="os-scheduler-interaction">&lt;/span>
&lt;a href="#os-scheduler-interaction" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>When a thread blocks on an intrinsic lock, the JVM requests the OS to &lt;strong>park the thread&lt;/strong> (similar to AQS, but via different mechanisms like &lt;code>Object.wait()&lt;/code>).&lt;/li>
&lt;li>The OS scheduler &lt;code>removes the thread from the runnable queue&lt;/code> until the lock is released and &lt;code>notify()&lt;/code> is called.&lt;/li>
&lt;li>&lt;code>Context switches&lt;/code> occur when threads are woken up, just like with AQS. 涉及到了内核&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>synchronized 要点理解&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="synchronized-要点理解">&lt;/span>
&lt;a href="#synchronized-%e8%a6%81%e7%82%b9%e7%90%86%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Intrinsic locks are simpler but less flexible&lt;/strong> than AQS-based synchronizers.&lt;/li>
&lt;li>&lt;strong>AQS provides finer control&lt;/strong> over &lt;code>fairness&lt;/code>, &lt;code>timeouts&lt;/code>, and &lt;code>interruption handling&lt;/code>, making it better suited for complex concurrency scenarios.&lt;/li>
&lt;li>&lt;strong>Modern JVMs optimize intrinsic locks&lt;/strong>, so performance differences are often negligible unless dealing with high contention or requiring advanced features.&lt;/li>
&lt;/ul>
&lt;p>For most new applications, prefer &lt;strong>AQS-based utilities&lt;/strong> (&lt;code>ReentrantLock&lt;/code>, &lt;code>Semaphore&lt;/code>, etc.) unless simplicity is critical. For deeper control, use &lt;code>java.util.concurrent&lt;/code> abstractions built on AQS.&lt;/p>
&lt;hr>
&lt;h2>&lt;code>synchronized&lt;/code> 用户空间优化思路&lt;span class="hx-absolute -hx-mt-20" id="synchronized-用户空间优化思路">&lt;/span>
&lt;a href="#synchronized-%e7%94%a8%e6%88%b7%e7%a9%ba%e9%97%b4%e4%bc%98%e5%8c%96%e6%80%9d%e8%b7%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;strong>core ideas&lt;/strong> behind user-space optimizations for Java intrinsic locks (&lt;code>synchronized&lt;/code>) revolve around &lt;strong>minimizing the cost of synchronization&lt;/strong> by reducing reliance on expensive OS-level operations (like system calls or context switches). These optimizations exploit patterns in real-world code and runtime adaptability to make synchronization faster in common scenarios, while still falling back to kernel-level mechanisms only when necessary.&lt;/p>
&lt;h3>&lt;strong>User-Space Lock 优化原则&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="user-space-lock-优化原则">&lt;/span>
&lt;a href="#user-space-lock-%e4%bc%98%e5%8c%96%e5%8e%9f%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>1. &lt;strong>Avoid Kernel Transitions (Fast Paths)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-avoid-kernel-transitions-fast-paths">&lt;/span>
&lt;a href="#1-avoid-kernel-transitions-fast-paths" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Goal&lt;/strong>: Reduce or eliminate transitions to the OS kernel (e.g., &lt;code>futex&lt;/code> waits, mutex operations) for uncontended locks.&lt;/li>
&lt;li>&lt;strong>How&lt;/strong>:
&lt;ul>
&lt;li>Use &lt;strong>atomic instructions&lt;/strong> (e.g., Compare-and-Swap, or CAS) in user space for lock acquisition.&lt;/li>
&lt;li>Only escalate to OS-level blocking (e.g., &lt;code>park()&lt;/code>, &lt;code>wait()&lt;/code>) when contention is detected.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Example&lt;/strong>: Lightweight locking avoids syscalls for uncontended locks.&lt;/li>
&lt;/ul>
&lt;h4>2. &lt;strong>Leverage Runtime Profiling and Adaptivity&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-leverage-runtime-profiling-and-adaptivity">&lt;/span>
&lt;a href="#2-leverage-runtime-profiling-and-adaptivity" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Goal&lt;/strong>: Dynamically adapt lock behavior based on observed runtime patterns.&lt;/li>
&lt;li>&lt;strong>How&lt;/strong>:
&lt;ul>
&lt;li>The JVM&amp;rsquo;s &lt;code>Just-In-Time (JIT)&lt;/code> compiler and runtime monitor lock usage (e.g., frequency of contention, thread ownership).&lt;/li>
&lt;li>Apply optimizations like &lt;strong>biased locking&lt;/strong> or &lt;strong>adaptive spinning&lt;/strong> based on runtime data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Example&lt;/strong>: Biased locks are revoked only when contention occurs, saving overhead in single-threaded cases.&lt;/li>
&lt;/ul>
&lt;h4>3. &lt;strong>Reduce Lock Granularity Overhead&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-reduce-lock-granularity-overhead">&lt;/span>
&lt;a href="#3-reduce-lock-granularity-overhead" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Goal&lt;/strong>: Minimize the number of lock operations and their critical sections.&lt;/li>
&lt;li>&lt;strong>How&lt;/strong>:
&lt;ul>
&lt;li>Merge adjacent or closely spaced &lt;code>synchronized&lt;/code> blocks (&lt;strong>lock coarsening&lt;/strong>).&lt;/li>
&lt;li>Eliminate locks entirely for thread-local objects (&lt;strong>lock elision&lt;/strong> via escape analysis).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Trade-off&lt;/strong>: Balance between reducing overhead and avoiding overly large critical sections that increase contention.&lt;/li>
&lt;/ul>
&lt;h4>4. &lt;strong>Exploit Common Concurrency Patterns&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="4-exploit-common-concurrency-patterns">&lt;/span>
&lt;a href="#4-exploit-common-concurrency-patterns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Goal&lt;/strong>: Optimize for typical usage patterns in Java applications.&lt;/li>
&lt;li>&lt;strong>How&lt;/strong>:
&lt;ul>
&lt;li>Assume locks are often &lt;strong>uncontended&lt;/strong> (e.g., lightweight locking).&lt;/li>
&lt;li>Assume threads may &lt;strong>reacquire the same lock&lt;/strong> (e.g., biased locking for reentrant access).&lt;/li>
&lt;li>Assume waits are often &lt;strong>short-lived&lt;/strong> (e.g., adaptive spinning before parking).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>优化类型和细节&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="优化类型和细节">&lt;/span>
&lt;a href="#%e4%bc%98%e5%8c%96%e7%b1%bb%e5%9e%8b%e5%92%8c%e7%bb%86%e8%8a%82" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>1. &lt;strong>Lightweight Locking (Fast Path)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-lightweight-locking-fast-path">&lt;/span>
&lt;a href="#1-lightweight-locking-fast-path" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Uncontended Locks&lt;/strong>: Acquire a lock using a single CAS operation. If successful, no OS interaction is needed.&lt;/li>
&lt;li>&lt;strong>Contended Locks&lt;/strong>: If CAS fails (another thread holds the lock), escalate to OS-level blocking (e.g., &lt;code>futex&lt;/code> on Linux).&lt;/li>
&lt;li>&lt;strong>Why It Works&lt;/strong>: Most locks in practice are uncontended, so the fast path avoids costly syscalls.&lt;/li>
&lt;/ul>
&lt;h4>2. &lt;strong>Biased Locking (Deprecated in Java 15+)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-biased-locking-deprecated-in-java-15">&lt;/span>
&lt;a href="#2-biased-locking-deprecated-in-java-15" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Core Idea&lt;/strong>: Bias a lock toward a thread to eliminate atomic operations for &lt;code>reentrant&lt;/code> access.&lt;/li>
&lt;li>&lt;strong>Mechanism&lt;/strong>:
&lt;ul>
&lt;li>Mark the object header with the &lt;code>thread ID&lt;/code> of the first acquirer.&lt;/li>
&lt;li>Subsequent acquisitions by the &lt;code>same&lt;/code> thread require only a thread ID check (no CAS).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Trade-off&lt;/strong>: Fast for single-threaded access but adds overhead for revocation under contention.&lt;/li>
&lt;/ul>
&lt;h4>3. &lt;strong>Lock Coarsening&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-lock-coarsening">&lt;/span>
&lt;a href="#3-lock-coarsening" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Core Idea&lt;/strong>: Merge adjacent &lt;code>synchronized&lt;/code> blocks to reduce lock/unlock overhead.&lt;/li>
&lt;li>&lt;strong>Example&lt;/strong>:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">synchronized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">doA&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">doB&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
→ Merged into:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">synchronized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">doA&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">doB&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>&lt;strong>Why It Helps&lt;/strong>: Reduces the number of lock operations and avoids unnecessary context switches.&lt;/li>
&lt;/ul>
&lt;h4>4. &lt;strong>Lock Elision (Escape Analysis)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="4-lock-elision-escape-analysis">&lt;/span>
&lt;a href="#4-lock-elision-escape-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Core Idea&lt;/strong>: Remove locks entirely if the locked object is proven to be thread-local.&lt;/li>
&lt;li>&lt;strong>Mechanism&lt;/strong>:
&lt;ul>
&lt;li>The JIT compiler analyzes object scope to determine if it escapes the current thread.&lt;/li>
&lt;li>If not, synchronization is removed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Example&lt;/strong>:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">method&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">localLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">localLock&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/* Lock elided */&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h4>5. &lt;strong>Adaptive Spinning&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="5-adaptive-spinning">&lt;/span>
&lt;a href="#5-adaptive-spinning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Core Idea&lt;/strong>: Spin (busy-wait) briefly before parking a blocked thread, assuming the lock may become available soon.&lt;/li>
&lt;li>&lt;strong>How&lt;/strong>:
&lt;ul>
&lt;li>The spin count adapts dynamically based on historical contention (e.g., spin longer if the lock was recently contended).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Why It Helps&lt;/strong>: Avoids the cost of parking/unparking threads for short waits.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>为什么优化会有用?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="为什么优化会有用">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%98%e5%8c%96%e4%bc%9a%e6%9c%89%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Most Locks Are Uncontended&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Studies show &lt;code>~90% of locks are uncontended&lt;/code> in real-world applications. &lt;code>Lightweight locking&lt;/code> and &lt;code>biased locking&lt;/code> optimize this common case. 锁大多数时候没有竞争&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Thread Reentrancy&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Applications often &lt;code>reacquire the same lock&lt;/code> (e.g., recursive method calls). Biased locking reduces overhead for reentrant access. 获取锁后, 会再次获取同一个锁&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Short Critical Sections&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Critical sections are often small (e.g., incrementing a counter). Adaptive spinning avoids context switches for short waits. 临界区很短, 没有获取到的锁的线程可以先自旋一会, 很大可能可以成功获取锁&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Thread-Local Data&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Many objects are never shared across threads. Escape analysis eliminates synchronization overhead for such cases. 大多数对象在线程间不共享&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Trade-offs and Limitations&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="trade-offs-and-limitations">&lt;/span>
&lt;a href="#trade-offs-and-limitations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Optimization&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Pros&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Cons&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Lightweight Locking&lt;/td>
&lt;td>Fast uncontended case 不竞争快速获取锁&lt;/td>
&lt;td>Falls back to OS for contention 竞争 os 就要干预了&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Biased Locking&lt;/td>
&lt;td>Zero-cost &lt;code>reacquisition&lt;/code> 重新获取锁没有消耗&lt;/td>
&lt;td>Revocation overhead under contention&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lock Coarsening&lt;/td>
&lt;td>&lt;code>Reduces&lt;/code> lock operations 减少获取锁的操作&lt;/td>
&lt;td>May increase critical section size 临界区变长&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lock Elision&lt;/td>
&lt;td>Eliminates sync overhead&lt;/td>
&lt;td>Limited to thread-local objects&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Adaptive Spinning&lt;/td>
&lt;td>Avoids context switches 自旋一会, 也就是 busy-wait&lt;/td>
&lt;td>Wastes CPU cycles for long waits 浪费一些 CPU 时间&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>结论&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="结论">&lt;/span>
&lt;a href="#%e7%bb%93%e8%ae%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;strong>core idea&lt;/strong> is to &lt;strong>handle synchronization efficiently in user space&lt;/strong> whenever possible, using runtime adaptability and pattern recognition to minimize reliance on the kernel. 在用户空间高效处理同步, 尽量不要惊动 OS 内核, 一旦涉及内核代价较高 &lt;br/>&lt;/p>
&lt;h4>基于哪些事实在优化?&lt;span class="hx-absolute -hx-mt-20" id="基于哪些事实在优化">&lt;/span>
&lt;a href="#%e5%9f%ba%e4%ba%8e%e5%93%aa%e4%ba%9b%e4%ba%8b%e5%ae%9e%e5%9c%a8%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Most locks are uncontended.&lt;/li>
&lt;li>Threads often reacquire locks.&lt;/li>
&lt;li>Critical sections are small.&lt;/li>
&lt;/ul>
&lt;p>By focusing on these patterns, modern JVMs make intrinsic locks (&lt;code>synchronized&lt;/code>) competitive with AQS-based locks for many use cases, while still providing the safety and simplicity of built-in synchronization. For high-contention scenarios or advanced features (e.g., fairness, timeouts), AQS-based locks remain superior.&lt;/p></description></item><item><title>Syscall Futex</title><link>https://cloudedseal.github.io/blog/syscall-futex/</link><pubDate>Mon, 05 May 2025 17:45:55 +0800</pubDate><guid>https://cloudedseal.github.io/blog/syscall-futex/</guid><description>
&lt;p>&lt;strong>Futex (Fast Userspace Mutex)&lt;/strong>&lt;/p>
&lt;p>A &lt;strong>futex&lt;/strong> is a Linux kernel system call that provides a fast and efficient mechanism for implementing &lt;code>user-space synchronization&lt;/code> primitives, such as mutexes, semaphores, and condition variables. It &lt;code>minimizes&lt;/code> kernel involvement &lt;code>in uncontended cases&lt;/code>, reducing overhead by handling synchronization in userspace when possible.&lt;/p>
&lt;blockquote>
&lt;p>Futexes split synchronization into &lt;strong>user-space atomics&lt;/strong> (fast) and &lt;strong>kernel-assisted blocking&lt;/strong> (slow), optimizing for the common case. The boundary is enforced by hardware (CPU modes) and the need for kernel-managed resources (scheduling, interrupts).&lt;/p>
&lt;/blockquote>
&lt;h2>&lt;strong>How Futex Works?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-futex-works">&lt;/span>
&lt;a href="#how-futex-works" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>没有竞争，CAS 后直接获取锁，不涉及到 syscall&lt;/li>
&lt;li>有竞争, futex_wait 让线程 sleep, 等待其他线程 futex_wake 唤醒&lt;/li>
&lt;/ol>
&lt;p>大多数时候是没有竞争的，所以就减少了内核的干预。&lt;/p>
&lt;h3>&lt;strong>futex 设计原则&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="futex-设计原则">&lt;/span>
&lt;a href="#futex-%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Avoid Kernel Calls When Possible&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="avoid-kernel-calls-when-possible">&lt;/span>
&lt;a href="#avoid-kernel-calls-when-possible" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Use &lt;code>atomic operations&lt;/code> for &lt;code>uncontended cases&lt;/code> (fast path).&lt;/li>
&lt;li>Only call the kernel when blocking is required (slow path).&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Kernel as a Backstop&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-as-a-backstop">&lt;/span>
&lt;a href="#kernel-as-a-backstop" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The kernel handles complex tasks like:
&lt;ul>
&lt;li>Managing wait queues.&lt;/li>
&lt;li>Guaranteeing fairness/priority in thread wakeup.&lt;/li>
&lt;li>Handling signals/interrupts during blocking.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Spurious Wakeups&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="spurious-wakeups">&lt;/span>
&lt;a href="#spurious-wakeups" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The kernel may wake threads even if the futex value hasn’t changed (e.g., due to &lt;code>signals&lt;/code>).&lt;/li>
&lt;li>&lt;strong>User-space must &lt;code>recheck&lt;/code> the futex value&lt;/strong> after wakeup (e.g., loop in &lt;code>lock()&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>为啥需要减少内核的干预?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="为啥需要减少内核的干预">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81%e5%87%8f%e5%b0%91%e5%86%85%e6%a0%b8%e7%9a%84%e5%b9%b2%e9%a2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Kernel calls (system calls) are &lt;strong>expensive&lt;/strong> compared to user-space operations.&lt;/p>
&lt;h4>&lt;strong>Context Switch Overhead&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="context-switch-overhead">&lt;/span>
&lt;a href="#context-switch-overhead" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>When a thread enters the kernel (e.g., via &lt;code>syscall&lt;/code>), the CPU must:
&lt;ul>
&lt;li>Save user-space registers. 保存用户空间寄存器&lt;/li>
&lt;li>Switch to kernel mode (privileged CPU state). CPU 模式切换到特权模式&lt;/li>
&lt;li>Run kernel code (e.g., scheduler, wait queues). 执行内核代码，比如调度器&lt;/li>
&lt;li>Restore user-space state afterward. 恢复用户空间寄存器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This process takes &lt;strong>hundreds to thousands of CPU cycles&lt;/strong>, adding latency.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Scalability&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="scalability">&lt;/span>
&lt;a href="#scalability" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Frequent kernel calls create contention in the &lt;code>kernel’s internal data structures&lt;/code> (e.g., locks for process/thread management).&lt;/li>
&lt;li>Kernel resources are shared &lt;code>across all processes&lt;/code>, so overuse hurts overall system performance. 所有进程共享内核资源&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Fast-Path Optimization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="fast-path-optimization">&lt;/span>
&lt;a href="#fast-path-optimization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Most synchronization operations (e.g., locking a mutex) are &lt;strong>uncontended&lt;/strong> (no other thread holds the lock).&lt;/li>
&lt;li>Handling these cases purely in user-space avoids kernel interaction entirely.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>User Space and Kernel 边界&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="user-space-and-kernel-边界">&lt;/span>
&lt;a href="#user-space-and-kernel-%e8%be%b9%e7%95%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>The boundary is defined by &lt;strong>CPU privilege levels&lt;/strong> and the need for kernel-managed resources:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>User Space&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Kernel Space&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Runs in unprivileged CPU mode (ring 3).&lt;/td>
&lt;td>Runs in privileged CPU mode (ring 0).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Directly manipulates user memory.&lt;/td>
&lt;td>Manages hardware, interrupts, scheduling.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Uses atomic CPU instructions (e.g., &lt;code>cmpxchg&lt;/code>).&lt;/td>
&lt;td>Uses system calls (e.g., &lt;code>futex&lt;/code>, &lt;code>sched_yield&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Handles &amp;ldquo;fast path&amp;rdquo; (uncontended case).&lt;/td>
&lt;td>Manages &amp;ldquo;slow path&amp;rdquo; (blocking/waking threads).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>&lt;strong>Futex: Balancing User/Kernel Responsibilities&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="futex-balancing-userkernel-responsibilities">&lt;/span>
&lt;a href="#futex-balancing-userkernel-responsibilities" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>futex&lt;/code> 横跨 user/kernel 两个空间&lt;/p>
&lt;h3>&lt;strong>User-Space Fast Path (No Contention)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="user-space-fast-path-no-contention">&lt;/span>
&lt;a href="#user-space-fast-path-no-contention" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Atomic Compare-and-Swap (CAS):&lt;/strong>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">atomic_compare_exchange_strong&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Pure user-space
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>If the lock is free (&lt;code>futex == 0&lt;/code>), the thread acquires it &lt;strong>without involving the kernel&lt;/strong>.&lt;/li>
&lt;li>This is a single CPU instruction (e.g., &lt;code>lock cmpxchg&lt;/code> on x86), blazing fast.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Kernel Slow Path (Contention)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-slow-path-contention">&lt;/span>
&lt;a href="#kernel-slow-path-contention" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Blocking with &lt;code>FUTEX_WAIT&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="blocking-with">&lt;/span>
&lt;a href="#blocking-with" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">syscall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SYS_futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FUTEX_WAIT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>If the lock is held (&lt;code>futex == 1&lt;/code>), the thread asks the kernel to &lt;strong>block it&lt;/strong> until the lock is freed.&lt;/li>
&lt;li>The kernel adds the thread to a &lt;code>wait queue&lt;/code> and &lt;code>schedules other threads&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Waking with &lt;code>FUTEX_WAKE&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="waking-with">&lt;/span>
&lt;a href="#waking-with" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">syscall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SYS_futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FUTEX_WAKE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>On unlock&lt;/code>, the kernel &lt;code>wakes&lt;/code> one blocked thread.&lt;/li>
&lt;li>This involves &lt;code>scheduler&lt;/code> logic (kernel responsibility).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Futex 主要操作&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="futex-主要操作">&lt;/span>
&lt;a href="#futex-%e4%b8%bb%e8%a6%81%e6%93%8d%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;code>FUTEX_WAIT&lt;/code>&lt;/strong>: Puts the calling thread to &lt;code>sleep&lt;/code> if the futex word matches the expected value.&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> If *uaddr == val, the thread goes to sleep (blocks).
If *uaddr != val, the call returns immediately with EAGAIN.
If a timeout is set, the thread may also wake up due to timeout (ETIMEDOUT).&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>&lt;code>FUTEX_WAKE&lt;/code>&lt;/strong>: Wakes up a specified number of threads waiting on the futex.&lt;/li>
&lt;li>&lt;strong>&lt;code>FUTEX_WAIT_BITSET&lt;/code> / &lt;code>FUTEX_WAKE_BITSET&lt;/code>&lt;/strong>: Advanced operations for conditional waits using bitmasks (e.g., for condition variables).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>工作流程示例&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="工作流程示例">&lt;/span>
&lt;a href="#%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Thread A acquires the lock:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>CAS succeeds in user space (&lt;code>futex&lt;/code> becomes 1).&lt;/li>
&lt;li>No kernel interaction.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Thread B tries to acquire the lock:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>CAS fails (futex is 1).&lt;/li>
&lt;li>Calls &lt;code>FUTEX_WAIT&lt;/code> to block (kernel involvement).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Thread A releases the lock:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Sets &lt;code>futex&lt;/code> to 0 (user space).&lt;/li>
&lt;li>Calls &lt;code>FUTEX_WAKE&lt;/code> to unblock Thread B (kernel).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Why This Matters in Practice?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-this-matters-in-practice">&lt;/span>
&lt;a href="#why-this-matters-in-practice" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Performance:&lt;/strong> A futex-based mutex can be &lt;strong>10–100x faster&lt;/strong> than a traditional kernel-only mutex under low contention.&lt;/li>
&lt;li>&lt;strong>Scalability:&lt;/strong> Reduces kernel lock contention in highly parallel workloads (e.g., databases, game engines).&lt;/li>
&lt;li>&lt;strong>Flexibility:&lt;/strong> User-space can implement custom synchronization logic (e.g., adaptive mutexes, read/write locks).&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Core Concept&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>A &lt;strong>futex word&lt;/strong> (a 32-bit integer in shared memory) acts as the synchronization variable. 和平台无关, 都是 32bit&lt;/li>
&lt;li>Threads use atomic operations (e.g., compare-and-swap) to manipulate this word in userspace.&lt;/li>
&lt;li>Kernel intervention occurs &lt;strong>only during contention&lt;/strong> (e.g., when a thread must wait).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Acquiring a Lock (&lt;code>Uncontended Case&lt;/code>)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>A thread attempts to atomically set the futex word from &lt;code>0&lt;/code> (unlocked) to &lt;code>1&lt;/code> (locked).&lt;/li>
&lt;li>If successful, the lock is acquired without a system call.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Acquiring a Lock (&lt;code>Contended Case&lt;/code>)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>If the lock is already held (&lt;code>futex_word == 1&lt;/code>), the thread calls &lt;code>futex_wait(&amp;amp;futex_word, 1)&lt;/code> to block.&lt;/li>
&lt;li>The kernel checks if the futex word is still &lt;code>1&lt;/code> and puts the thread to sleep, avoiding race conditions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Releasing a Lock&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The thread sets the futex word back to &lt;code>0&lt;/code> atomically.&lt;/li>
&lt;li>It then calls &lt;code>futex_wake(&amp;amp;futex_word, 1)&lt;/code> to wake up one waiting thread.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Handling Spurious Wakeups&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>After waking, threads &lt;strong>re-check&lt;/strong> the futex word to ensure the lock is available before proceeding.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>例子理解&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="例子理解">&lt;/span>
&lt;a href="#%e4%be%8b%e5%ad%90%e7%90%86%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">futex_demo.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/futex.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/syscall.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;pthread.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Futex word (shared between threads)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">futex_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 0 = unlocked, 1 = locked
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Wrapper for futex_wait syscall
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">futex_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">uaddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">syscall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SYS_futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uaddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FUTEX_WAIT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Wrapper for futex_wake syscall
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">futex_wake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">uaddr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">syscall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SYS_futex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uaddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FUTEX_WAKE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Thread function with custom sleep time
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nf">thread_func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">sleep_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Cast void* to int*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Try to acquire lock (using GCC atomic compare-and-swap)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">expected&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">__sync_bool_compare_and_swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Contended case: wait for wakeups
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Thread %lu acquired the lock failed&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">pthread_self&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">futex_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Critical section (simulate work with custom sleep)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Thread %lu acquired the lock success, sleeping for %d seconds&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_self&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">sleep_time&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sleep_time&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Customizable sleep duration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Release lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">futex_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">futex_wake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Define sleep durations for each thread
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">sleep1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// First thread sleeps for 1 second
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">sleep2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Second thread sleeps for 3 seconds
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">sleep3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create threads
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">pthread_t&lt;/span> &lt;span class="n">t1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">t2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">t3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%p&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">thread_func&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">sleep1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">thread_func&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">sleep2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">t3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">thread_func&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">sleep3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Wait for threads to finish
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">pthread_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>gcc -g -pthread -std=gnu11 futex_demo.c -o futex_demo&lt;/p>
&lt;/blockquote>
&lt;h2>&lt;strong>什么是 Spurious Wakeup?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="什么是-spurious-wakeup">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-spurious-wakeup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>A &lt;strong>spurious wakeup&lt;/strong> occurs when a thread waiting on a synchronization primitive (e.g., a condition variable, futex, or semaphore) &lt;strong>wakes up without being explicitly signaled or broadcasted&lt;/strong>. This means the thread resumes execution even though no other thread modified the condition it was waiting for.&lt;/p>
&lt;p>Spurious wakeups are &lt;strong>not errors&lt;/strong> in the system.
they are a design trade-off in low-level synchronization mechanisms like futexes to &lt;strong>avoid unnecessary overhead&lt;/strong> in kernel-space implementations.&lt;/p>
&lt;h3>&lt;strong>为啥需要 spurious Wakeups?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="为啥需要-spurious-wakeups">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81-spurious-wakeups" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>spurious wakeups are allowed for &lt;strong>performance and implementation efficiency&lt;/strong>, particularly in systems like Linux futexes.&lt;/p>
&lt;p>为了性能和高效的实现需要 spurious wakeups&lt;/p>
&lt;h4>1. &lt;strong>Kernel Optimization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-kernel-optimization">&lt;/span>
&lt;a href="#1-kernel-optimization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The Linux kernel uses shared data structures (e.g., wait queues) for threads waiting on a futex. If multiple threads are waiting on the same futex word, the kernel may wake up &lt;strong>more than one thread&lt;/strong> (even if only one is needed) to reduce contention and latency.&lt;/li>
&lt;li>This avoids the overhead of tracking exactly which thread should wake up.&lt;/li>
&lt;/ul>
&lt;h4>2. &lt;strong>Signal Handling&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-signal-handling">&lt;/span>
&lt;a href="#2-signal-handling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>A thread waiting on a futex may be interrupted by a &lt;strong>signal&lt;/strong> (e.g., &lt;code>SIGINT&lt;/code>, &lt;code>SIGALRM&lt;/code>). The kernel wakes up the thread to handle the signal, even if the futex condition hasn’t changed.&lt;/li>
&lt;/ul>
&lt;h4>3. &lt;strong>Hardware/Architecture Constraints&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-hardwarearchitecture-constraints">&lt;/span>
&lt;a href="#3-hardwarearchitecture-constraints" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Some architectures or hardware may not guarantee atomicity between checking the condition and sleeping, leading to race conditions that require re-checking after waking.&lt;/li>
&lt;/ul>
&lt;h2>&lt;strong>什么情况会发生 Spurious Wakeups?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="什么情况会发生-spurious-wakeups">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%83%85%e5%86%b5%e4%bc%9a%e5%8f%91%e7%94%9f-spurious-wakeups" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Scenario&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Multiple Waiters&lt;/strong>&lt;/td>
&lt;td>When many threads wait on the same futex, the kernel may wake multiple threads (e.g., via &lt;code>FUTEX_WAKE&lt;/code>) even if only one is needed.&lt;br/> 多个等待同一个 futex 的线程, 被 os 一并唤醒, 但最终只有一个获取 futex&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Signal Interruption&lt;/strong>&lt;/td>
&lt;td>A thread is interrupted by a signal (e.g., Ctrl+C), causing it to wake up prematurely.&lt;br> 虽然进程 sleep 了, 但是仍可以被 os 唤醒处理信号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Timeout Expiration&lt;/strong>&lt;/td>
&lt;td>If a timeout is set (e.g., &lt;code>FUTEX_WAIT_BITSET&lt;/code> with a timeout), the thread may wake up due to the timeout, even if the condition hasn’t changed.&lt;br/> 设置了超时, 超时后可以被 os 唤醒&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Kernel Preemption&lt;/strong>&lt;/td>
&lt;td>In high-load scenarios, the kernel may preempt a waiting thread for scheduling reasons. &lt;br/> 被 os 抢占调度唤醒&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>如何处理 Spurious Wakeups?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="如何处理-spurious-wakeups">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%a4%84%e7%90%86-spurious-wakeups" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>To handle spurious wakeups correctly, &lt;strong>always re-check the condition&lt;/strong> after waking up. This is a fundamental rule in concurrent programming.&lt;/p>
&lt;h4>&lt;strong>例子1 重新检查条件&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="例子1-重新检查条件">&lt;/span>
&lt;a href="#%e4%be%8b%e5%ad%901-%e9%87%8d%e6%96%b0%e6%a3%80%e6%9f%a5%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Shared futex word (0 = unlocked, 1 = locked)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">futex_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Thread attempts to acquire the lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">__sync_bool_compare_and_swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Wait for wakeups if futex_var is still 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">futex_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">futex_var&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Here’s what happens:&lt;/p>
&lt;ol>
&lt;li>If &lt;code>futex_wait&lt;/code> returns due to a spurious wakeup, the thread &lt;strong>re-checks the condition&lt;/strong> (&lt;code>futex_var == 1&lt;/code>) in the loop.&lt;/li>
&lt;li>If the condition is still true, the thread calls &lt;code>futex_wait&lt;/code> again.&lt;/li>
&lt;li>If the condition is now false (e.g., another thread released the lock), the thread proceeds.&lt;/li>
&lt;/ol>
&lt;h4>&lt;strong>例子2 重新检查条件&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="例子2-重新检查条件">&lt;/span>
&lt;a href="#%e4%be%8b%e5%ad%902-%e9%87%8d%e6%96%b0%e6%a3%80%e6%9f%a5%e6%9d%a1%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">pthread_mutex_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">condition_met&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pthread_cond_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cond&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Releases mutex, waits for signal
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Re-check condition here (spurious wakeups handled by the loop)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">pthread_mutex_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The &lt;code>while&lt;/code> loop ensures that spurious wakeups are harmless.&lt;/p>
&lt;h3>&lt;strong>Why Not Prevent Spurious Wakeups?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-not-prevent-spurious-wakeups">&lt;/span>
&lt;a href="#why-not-prevent-spurious-wakeups" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Preventing spurious wakeups would require &lt;strong>strict guarantees&lt;/strong> from the kernel or library, which could introduce significant overhead. For example:&lt;/p>
&lt;ul>
&lt;li>Tracking exactly which thread should wake up (e.g., via a queue).&lt;/li>
&lt;li>Adding memory barriers or locks to ensure atomicity between checking and sleeping.&lt;/li>
&lt;/ul>
&lt;p>By allowing spurious wakeups, systems like futexes remain lightweight and scalable for high-performance applications.&lt;/p></description></item><item><title>Asm Dynamic Linker</title><link>https://cloudedseal.github.io/blog/asm-dynamic-linker/</link><pubDate>Sun, 04 May 2025 09:04:18 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-dynamic-linker/</guid><description>
&lt;h2>&lt;strong>dynamic linker&lt;/strong> 简介&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linker-简介">&lt;/span>
&lt;a href="#dynamic-linker-%e7%ae%80%e4%bb%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>dynamic linker&lt;/strong> (also called the &lt;strong>dynamic loader&lt;/strong>) &lt;strong>is a shared object&lt;/strong> (&lt;code>*.so&lt;/code> file) on Linux systems. It plays a critical role in the execution of dynamically linked programs.&lt;/p>
&lt;h2>&lt;strong>What Is the Dynamic Linker?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="what-is-the-dynamic-linker">&lt;/span>
&lt;a href="#what-is-the-dynamic-linker" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The dynamic linker is a special shared library responsible for:&lt;/p>
&lt;ul>
&lt;li>Loading the program&amp;rsquo;s dependencies (shared libraries like &lt;code>libc.so.6&lt;/code>).&lt;/li>
&lt;li>Resolving symbols (e.g., function addresses like &lt;code>printf&lt;/code>).&lt;/li>
&lt;li>Performing relocations (adjusting addresses for shared libraries).&lt;/li>
&lt;li>Invoking constructors/destructors (via &lt;code>.init_array&lt;/code> and &lt;code>.fini_array&lt;/code>).&lt;/li>
&lt;/ul>
&lt;p>On Linux, the dynamic linker is typically named:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>ld-linux.so.2&lt;/code>&lt;/strong> (for 32-bit x86).&lt;/li>
&lt;li>&lt;strong>&lt;code>ld-linux-x86-64.so.2&lt;/code>&lt;/strong> (for 64-bit x86_64).&lt;/li>
&lt;li>&lt;strong>&lt;code>ld-linux-aarch64.so.1&lt;/code>&lt;/strong> (for ARM64).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Why Is the Dynamic Linker a Shared Object?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-is-the-dynamic-linker-a-shared-object">&lt;/span>
&lt;a href="#why-is-the-dynamic-linker-a-shared-object" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Efficiency:&lt;/strong> It avoids duplicating the linker code in every executable.&lt;/li>
&lt;li>&lt;strong>Reusability:&lt;/strong> All dynamically linked programs share the same dynamic linker.&lt;/li>
&lt;li>&lt;strong>Maintainability:&lt;/strong> Updates to the dynamic linker (e.g., security fixes) apply to all programs.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>先有鸡先有蛋问题&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="先有鸡先有蛋问题">&lt;/span>
&lt;a href="#%e5%85%88%e6%9c%89%e9%b8%a1%e5%85%88%e6%9c%89%e8%9b%8b%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The dynamic linker itself must be a &lt;code>shared object&lt;/code>, but it is responsible for loading shared libraries. 动态链接器本身就是共享库&lt;/li>
&lt;li>To resolve this, the kernel &lt;code>directly loads&lt;/code> the dynamic linker (&lt;code>ld-linux-*.so&lt;/code>) into memory when starting a program. The dynamic linker then loads the rest of the dependencies (like &lt;code>libc.so.6&lt;/code>) 内核直接负责装载 dynamic linker 这个共享库, 再由 dynamic linker 装载其他依赖&lt;/li>
&lt;/ul>
&lt;h2>demo 二进制文件查看&lt;span class="hx-absolute -hx-mt-20" id="demo-二进制文件查看">&lt;/span>
&lt;a href="#demo-%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%96%87%e4%bb%b6%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;code>demo&lt;/code> 中动态链接器查看&lt;span class="hx-absolute -hx-mt-20" id="demo-中动态链接器查看">&lt;/span>
&lt;a href="#demo-%e4%b8%ad%e5%8a%a8%e6%80%81%e9%93%be%e6%8e%a5%e5%99%a8%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>readelf -l demo&lt;/code> (look for the &lt;code>INTERP&lt;/code> segment)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">readelf -l demo &lt;span class="p">|&lt;/span> grep -A &lt;span class="m">2&lt;/span> INTERP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> INTERP 0x0000000000000318 0x0000000000000318 0x0000000000000318
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x000000000000001c 0x000000000000001c R 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Requesting program interpreter: /lib64/ld-linux-x86-64.so.2&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>This path (&lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>) is stored in the &lt;strong>&lt;code>.interp&lt;/code> section&lt;/strong> of the ELF file. 其中还有一个字符串结束符号 0x00。可以看到 &lt;strong>&lt;code>.interp&lt;/code> section&lt;/strong> 长度为 0x1c 一共 28bytes。&lt;/p>
&lt;h3>file 查看 demo 信息&lt;span class="hx-absolute -hx-mt-20" id="file-查看-demo-信息">&lt;/span>
&lt;a href="#file-%e6%9f%a5%e7%9c%8b-demo-%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">file demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: ELF 64-bit LSB pie executable, x86-64, version &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>SYSV&lt;span class="o">)&lt;/span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID&lt;span class="o">[&lt;/span>sha1&lt;span class="o">]=&lt;/span>6fd65349be456b41544a47b67df68fa7968c3f4f, &lt;span class="k">for&lt;/span> GNU/Linux 3.2.0, with debug_info, not stripped&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Dynamic Linker VS Regular Shared Libraries&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linker-vs-regular-shared-libraries">&lt;/span>
&lt;a href="#dynamic-linker-vs-regular-shared-libraries" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>Dynamic Linker (&lt;code>ld-linux-*.so&lt;/code>)&lt;/th>
&lt;th>Regular Shared Library (e.g., &lt;code>libc.so.6&lt;/code>)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Loaded by&lt;/strong>&lt;/td>
&lt;td>Kernel (directly)&lt;/td>
&lt;td>Dynamic linker&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Purpose&lt;/strong>&lt;/td>
&lt;td>Load and link shared libraries&lt;/td>
&lt;td>Provide runtime functionality&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Dependencies&lt;/strong>&lt;/td>
&lt;td>None (self-contained)&lt;/td>
&lt;td>May depend on other shared libraries&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Entry Point&lt;/strong>&lt;/td>
&lt;td>Called by kernel&lt;/td>
&lt;td>Called by dynamic linker&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>&lt;strong>How Dynamic Linker Works?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-dynamic-linker-works">&lt;/span>
&lt;a href="#how-dynamic-linker-works" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;strong>Step 1: Kernel Loads the Executable&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-1-kernel-loads-the-executable">&lt;/span>
&lt;a href="#step-1-kernel-loads-the-executable" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The kernel reads the ELF header of &lt;code>demo&lt;/code> and sees the &lt;code>INTERP&lt;/code> segment pointing to &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>.&lt;/li>
&lt;li>The kernel &lt;strong>loads the dynamic linker itself&lt;/strong> into memory.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Step 2: Dynamic Linker Takes Over&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-2-dynamic-linker-takes-over">&lt;/span>
&lt;a href="#step-2-dynamic-linker-takes-over" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The kernel transfers control to the dynamic linker&amp;rsquo;s entry point.&lt;/li>
&lt;li>The dynamic linker:
&lt;ol>
&lt;li>Parses the executable&amp;rsquo;s &lt;code>.dynamic&lt;/code> section to find dependencies (e.g., &lt;code>libc.so.6&lt;/code>).&lt;/li>
&lt;li>Loads these shared libraries into memory.&lt;/li>
&lt;li>Resolves symbols (e.g., &lt;code>printf&lt;/code> in &lt;code>libc&lt;/code>).&lt;/li>
&lt;li>Applies relocations (fixes addresses in &lt;code>.got&lt;/code> and &lt;code>.plt&lt;/code>).&lt;/li>
&lt;li>Calls constructor functions (e.g., &lt;code>initialize()&lt;/code> in &lt;code>.init_array&lt;/code>).&lt;/li>
&lt;li>Transfers control to the program&amp;rsquo;s &lt;code>main()&lt;/code>.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;code>gdb&lt;/code> 运行 &lt;code>demo&lt;/code> 验证 &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code> 先装载&lt;span class="hx-absolute -hx-mt-20" id="gdb-运行-demo-验证-lib64ld-linux-x86-64so2-先装载">&lt;/span>
&lt;a href="#gdb-%e8%bf%90%e8%a1%8c-demo-%e9%aa%8c%e8%af%81-lib64ld-linux-x86-64so2-%e5%85%88%e8%a3%85%e8%bd%bd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gdb ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reading symbols from ./demo...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint &lt;span class="m">1&lt;/span> at 0x1080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info program
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The program being debugged is not being run.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The program is not being run.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Starting program: /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint 1.2, 0x00007ffff7fe4540 in _start &lt;span class="o">()&lt;/span> from /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info program
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Last stopped &lt;span class="k">for&lt;/span> thread &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>process 50955&lt;span class="o">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Using the running image of child process 50955.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Program stopped at 0x7ffff7fe4540.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">It stopped at breakpoint 1.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type &lt;span class="s2">&amp;#34;info stack&amp;#34;&lt;/span> or &lt;span class="s2">&amp;#34;info registers&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> more information.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info proc mappings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">process &lt;span class="m">50955&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Mapped address spaces:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start Addr End Addr Size Offset Perms objfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555554000 0x555555555000 0x1000 0x0 r--p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555555000 0x555555556000 0x1000 0x1000 r-xp /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555556000 0x555555557000 0x1000 0x2000 r--p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555557000 0x555555559000 0x2000 0x2000 rw-p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7fbf000 0x7ffff7fc3000 0x4000 0x0 r--p &lt;span class="o">[&lt;/span>vvar&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7fc3000 0x7ffff7fc5000 0x2000 0x0 r-xp &lt;span class="o">[&lt;/span>vdso&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7fc5000 0x7ffff7fc6000 0x1000 0x0 r--p /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7fc6000 0x7ffff7ff1000 0x2b000 0x1000 r-xp /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7ff1000 0x7ffff7ffb000 0xa000 0x2c000 r--p /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7ffb000 0x7ffff7fff000 0x4000 0x36000 rw-p /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffffffde000 0x7ffffffff000 0x21000 0x0 rw-p &lt;span class="o">[&lt;/span>stack&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0xffffffffff600000 0xffffffffff601000 0x1000 0x0 --xp &lt;span class="o">[&lt;/span>vsyscall&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;code>break _start&lt;/code> 打断点&lt;/li>
&lt;li>run 运行&lt;/li>
&lt;li>info proc mappings 查看内存映射
&lt;ul>
&lt;li>&lt;code>/home/yang/elf-demo/demo&lt;/code> 可执行文件&lt;/li>
&lt;li>&lt;code>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/code> 动态链接器在 main 运行之前已被加载&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls -l /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx &lt;span class="m">1&lt;/span> root root &lt;span class="m">44&lt;/span> Jan &lt;span class="m">29&lt;/span> 01:07 /lib64/ld-linux-x86-64.so.2 -&amp;gt; ../lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>&lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code> 装载其他依赖&lt;span class="hx-absolute -hx-mt-20" id="lib64ld-linux-x86-64so2-装载其他依赖">&lt;/span>
&lt;a href="#lib64ld-linux-x86-64so2-%e8%a3%85%e8%bd%bd%e5%85%b6%e4%bb%96%e4%be%9d%e8%b5%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>ldd 查看 demo 依赖&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ldd demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> linux-vdso.so.1 &lt;span class="o">(&lt;/span>0x00007fffac3dc000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> libc.so.6 &lt;span class="o">=&lt;/span>&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o">(&lt;/span>0x00007be167000000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /lib64/ld-linux-x86-64.so.2 &lt;span class="o">(&lt;/span>0x00007be1672c1000&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>gdb &lt;code>initialize&lt;/code> 处打断点&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> bt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#0 initialize () at demo.c:27&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#1 0x00007ffff7c2a304 in call_init (env=&amp;lt;optimized out&amp;gt;, argv=0x7fffffffdc48, argc=1) at ../csu/libc-start.c:145&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#2 __libc_start_main_impl (main=0x5555555551ed &amp;lt;main&amp;gt;, argc=1, argv=0x7fffffffdc48, init=&amp;lt;optimized out&amp;gt;, fini=&amp;lt;optimized out&amp;gt;, rtld_fini=&amp;lt;optimized out&amp;gt;, &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">stack_end&lt;/span>&lt;span class="o">=&lt;/span>0x7fffffffdc38&lt;span class="o">)&lt;/span> at ../csu/libc-start.c:347
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#3 0x00005555555550a5 in _start ()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info proc mappings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">process &lt;span class="m">50955&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Mapped address spaces:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start Addr End Addr Size Offset Perms objfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555554000 0x555555555000 0x1000 0x0 r--p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555555000 0x555555556000 0x1000 0x1000 r-xp /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555556000 0x555555557000 0x1000 0x2000 r--p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555557000 0x555555558000 0x1000 0x2000 r--p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x555555558000 0x555555559000 0x1000 0x3000 rw-p /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7c00000 0x7ffff7c28000 0x28000 0x0 r--p /usr/lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7c28000 0x7ffff7db0000 0x188000 0x28000 r-xp /usr/lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7db0000 0x7ffff7dff000 0x4f000 0x1b0000 r--p /usr/lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7dff000 0x7ffff7e03000 0x4000 0x1fe000 r--p /usr/lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x7ffff7e03000 0x7ffff7e05000 0x2000 0x202000 rw-p /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;code>/usr/lib/x86_64-linux-gnu/libc.so.6&lt;/code> 这就是由 &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code> 装载的依赖的动态库&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Step 3: Lazy Binding&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-3-lazy-binding">&lt;/span>
&lt;a href="#step-3-lazy-binding" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>Lazy binding means that the actual address of &lt;code>printf&lt;/code> isn&amp;rsquo;t resolved until the first time it&amp;rsquo;s called.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>function call → PLT → GOT → resolver → dynamic linker resolves symbol → GOT updated
→ future calls jump directly to the resolved address.
This is lazy binding.&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>When a function like &lt;code>printf&lt;/code> is called for the first time:&lt;/li>
&lt;li>The PLT entry jumps to the GOT.&lt;/li>
&lt;li>The GOT initially points to &lt;code>resolver code&lt;/code> in the dynamic linker.&lt;/li>
&lt;li>The resolver resolves the symbol (e.g., finds &lt;code>printf&lt;/code> in &lt;code>libc&lt;/code>) and updates the GOT.&lt;/li>
&lt;li>Subsequent calls jump directly to the resolved address.&lt;/li>
&lt;/ul>
&lt;h2>dynamic linker 启用环境变量观察过程&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linker-启用环境变量观察过程">&lt;/span>
&lt;a href="#dynamic-linker-%e5%90%af%e7%94%a8%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f%e8%a7%82%e5%af%9f%e8%bf%87%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>LD_DEBUG 环境变量&lt;span class="hx-absolute -hx-mt-20" id="ld_debug-环境变量">&lt;/span>
&lt;a href="#ld_debug-%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LD_DEBUG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">help&lt;/span> ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Valid options &lt;span class="k">for&lt;/span> the LD_DEBUG environment variable are:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> libs display library search paths
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reloc display relocation processing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> files display progress &lt;span class="k">for&lt;/span> input file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> symbols display symbol table processing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bindings display information about symbol binding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> versions display version dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> scopes display scope information
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> all all previous options combined
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> statistics display relocation statistics
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unused determined unused DSOs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">help&lt;/span> display this &lt;span class="nb">help&lt;/span> message and &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To direct the debugging output into a file instead of standard output
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a filename can be specified using the LD_DEBUG_OUTPUT environment variable.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>&lt;code>LD_DEBUG=libs ./demo 分析&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ld_debuglibs-demo-分析">&lt;/span>
&lt;a href="#ld_debuglibs-demo-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>LD_DEBUG=libs&lt;/code> output provides a detailed view of how the dynamic linker (&lt;code>ld.so&lt;/code>) loads and initializes shared libraries for your &lt;code>demo&lt;/code> executable.&lt;/p>
&lt;h3>&lt;strong>1. Library Search and Loading&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-library-search-and-loading">&lt;/span>
&lt;a href="#1-library-search-and-loading" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4039: find &lt;span class="nv">library&lt;/span>&lt;span class="o">=&lt;/span>libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> searching
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: search &lt;span class="nv">cache&lt;/span>&lt;span class="o">=&lt;/span>/etc/ld.so.cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: trying &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>/lib/x86_64-linux-gnu/libc.so.6&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: The dynamic linker searches for required shared libraries (&lt;code>libc.so.6&lt;/code> in this case).&lt;/li>
&lt;li>&lt;strong>Process&lt;/strong>:
&lt;ul>
&lt;li>It first checks the precomputed cache file &lt;code>/etc/ld.so.cache&lt;/code> for efficiency.&lt;/li>
&lt;li>Then it directly tries the filesystem path &lt;code>/lib/x86_64-linux-gnu/libc.so.6&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Result&lt;/strong>: &lt;code>libc.so.6&lt;/code> (the standard C library) is loaded into memory.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>2. Initialization of Libraries&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-initialization-of-libraries">&lt;/span>
&lt;a href="#2-initialization-of-libraries" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4039: calling init: /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: calling init: /lib/x86_64-linux-gnu/libc.so.6&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Run initialization code for shared libraries.&lt;/li>
&lt;li>&lt;strong>Order&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>Dynamic Linker (&lt;code>ld-linux-x86-64.so.2&lt;/code>)&lt;/strong>: Initializes internal structures (e.g., GOT/PLT setup).&lt;/li>
&lt;li>&lt;strong>&lt;code>libc.so.6&lt;/code>&lt;/strong>: Initializes the C library (e.g., stdio, threading, heap).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>3. Program Initialization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-program-initialization">&lt;/span>
&lt;a href="#3-program-initialization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4039: initialize program: ./demo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Execute constructor functions (marked with &lt;code>__attribute__((constructor))&lt;/code>) before &lt;code>main()&lt;/code>.&lt;/li>
&lt;li>&lt;strong>In Your Code&lt;/strong>:
&lt;ul>
&lt;li>The &lt;code>initialize()&lt;/code> function is called here, printing &lt;code>&amp;quot;Initializing...\n&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>4. Transfer Control to Program&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="4-transfer-control-to-program">&lt;/span>
&lt;a href="#4-transfer-control-to-program" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4039: transferring control: ./demo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Jump to the program’s &lt;code>main()&lt;/code> function.&lt;/li>
&lt;li>&lt;strong>Output&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>Global Data: 42&lt;/code> (from &lt;code>global_data&lt;/code> in &lt;code>.data&lt;/code>)&lt;/li>
&lt;li>&lt;code>Global BSS: 0&lt;/code> (from &lt;code>global_bss&lt;/code> in &lt;code>.bss&lt;/code>, zero-initialized)&lt;/li>
&lt;li>&lt;code>Local Static: 100&lt;/code> (from &lt;code>local_static&lt;/code> in &lt;code>.data&lt;/code>)&lt;/li>
&lt;li>&lt;code>Hello from .rodata!&lt;/code> (from &lt;code>message&lt;/code> in &lt;code>.rodata&lt;/code>)&lt;/li>
&lt;li>&lt;code>Counter: 1&lt;/code>, &lt;code>Counter: 2&lt;/code>, &lt;code>Counter: 3&lt;/code> (from &lt;code>counter()&lt;/code> with static &lt;code>count&lt;/code> in &lt;code>.bss&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>5. Finalization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="5-finalization">&lt;/span>
&lt;a href="#5-finalization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4039: calling fini: &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: Finalizing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: calling fini: /lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4039: calling fini: /lib64/ld-linux-x86-64.so.2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Run destructor functions (marked with &lt;code>__attribute__((destructor))&lt;/code>) after &lt;code>main()&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Order&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>Program Destructors&lt;/strong>:
&lt;ul>
&lt;li>The &lt;code>finalize()&lt;/code> function is called, printing &lt;code>&amp;quot;Finalizing...\n&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Library Destructors&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>libc.so.6&lt;/code>: Cleans up C library resources.&lt;/li>
&lt;li>&lt;code>ld-linux-x86-64.so.2&lt;/code>: Cleans up dynamic linking infrastructure.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Key Observations&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-observations">&lt;/span>
&lt;a href="#key-observations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Initialization Order&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Libraries are initialized &lt;strong>depth-first&lt;/strong>, starting from dependencies (e.g., &lt;code>libc&lt;/code>) and moving to the main executable.&lt;/li>
&lt;li>Constructors run &lt;strong>after&lt;/strong> all libraries are loaded but &lt;strong>before&lt;/strong> &lt;code>main()&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Finalization Order&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Destructors run &lt;strong>in reverse order&lt;/strong> of initialization:
&lt;ul>
&lt;li>Program destructors first (&lt;code>finalize()&lt;/code>), then library destructors (&lt;code>libc&lt;/code>, &lt;code>ld-linux&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dynamic Linker Role&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Manages the entire lifecycle:
&lt;ul>
&lt;li>&lt;strong>Loading&lt;/strong>: Resolves symbols and maps libraries into memory.&lt;/li>
&lt;li>&lt;strong>Relocation&lt;/strong>: Adjusts addresses for position-independent code (PIC).&lt;/li>
&lt;li>&lt;strong>Initialization/Finalization&lt;/strong>: Ensures proper setup/teardown of libraries and code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Symbol Resolution&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Symbols like &lt;code>printf&lt;/code> are resolved via &lt;code>.plt&lt;/code>/&lt;code>.got&lt;/code> (lazy binding unless &lt;code>BIND_NOW&lt;/code> is set).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Why This Matters&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-this-matters">&lt;/span>
&lt;a href="#why-this-matters" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Debugging&lt;/strong>: Helps identify missing libraries, symbol conflicts, or initialization issues.&lt;/li>
&lt;li>&lt;strong>Performance&lt;/strong>: Reveals overhead from lazy vs. eager binding (&lt;code>LD_BIND_NOW&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Security&lt;/strong>: Shows how libraries are loaded and validated (e.g., &lt;code>PIE&lt;/code>, &lt;code>RELRO&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h2>LD_DEBUG=files ./demo 分析&lt;span class="hx-absolute -hx-mt-20" id="ld_debugfiles-demo-分析">&lt;/span>
&lt;a href="#ld_debugfiles-demo-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LD_DEBUG&lt;/span>&lt;span class="o">=&lt;/span>files ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> needed by ./demo &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> generating link map
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: dynamic: 0x000073f09de02940 base: 0x000073f09dc00000 size: 0x0000000000211d90
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: entry: 0x000073f09dc2a390 phdr: 0x000073f09dc00040 phnum: &lt;span class="m">14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: calling init: /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: calling init: /lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: initialize program: ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: transferring control: ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from .rodata!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: calling fini: &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: calling fini: /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266: calling fini: /lib64/ld-linux-x86-64.so.2 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4266:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Library File Resolution&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="library-file-resolution">&lt;/span>
&lt;a href="#library-file-resolution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">4266: &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> needed by ./demo &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4266: &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>libc.so.6 &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> generating link map&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: The dynamic linker resolves dependencies listed in the &lt;code>.dynamic&lt;/code> section (e.g., &lt;code>NEEDED&lt;/code> entries like &lt;code>libc.so.6&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Link Map&lt;/strong>:
&lt;ul>
&lt;li>A &lt;code>link_map&lt;/code> structure is created to track metadata for each loaded library.&lt;/li>
&lt;li>&lt;strong>Fields&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>dynamic&lt;/code>: Pointer to the &lt;code>.dynamic&lt;/code> section of &lt;code>libc.so.6&lt;/code> (used for symbol resolution).&lt;/li>
&lt;li>&lt;code>base&lt;/code>: Load address in memory (&lt;code>0x000073f09dc00000&lt;/code>).&lt;/li>
&lt;li>&lt;code>size&lt;/code>: Size of the mapped library (&lt;code>0x211d90&lt;/code> bytes).&lt;/li>
&lt;li>&lt;code>entry&lt;/code>: Entry point (start address of &lt;code>libc.so.6&lt;/code>).&lt;/li>
&lt;li>&lt;code>phdr&lt;/code>: Pointer to program headers (used to load segments into memory).&lt;/li>
&lt;li>&lt;code>phnum&lt;/code>: Number of program headers (&lt;code>14&lt;/code> in this case).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2>&lt;strong>LD_DEBUG=reloc ./demo 分析&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="ld_">&lt;/span>
&lt;a href="#ld_" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>LD_DEBUG=reloc ./demo&lt;/code> output reveals how the &lt;strong>dynamic linker&lt;/strong> processes &lt;strong>relocations&lt;/strong> during program execution. Relocations are adjustments made to addresses in the binary and shared libraries when they&amp;rsquo;re loaded into memory (due to &lt;strong>Position-Independent Code (PIC)&lt;/strong> and &lt;strong>Address Space Layout Randomization (ASLR)&lt;/strong>). Let’s break down the key steps:&lt;/p>
&lt;h3>&lt;strong>1. Relocation Processing&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-relocation-processing">&lt;/span>
&lt;a href="#1-relocation-processing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">5881: relocation processing: /lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5881: relocation processing: ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5881: relocation processing: /lib64/ld-linux-x86-64.so.2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Purpose&lt;/strong>: The dynamic linker resolves &lt;strong>symbol addresses&lt;/strong> in the following order:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>libc.so.6&lt;/code>&lt;/strong>: Adjusts addresses for symbols like &lt;code>printf&lt;/code>, &lt;code>exit&lt;/code>, and global variables.&lt;/li>
&lt;li>&lt;strong>&lt;code>./demo&lt;/code>&lt;/strong>: Fixes up addresses for global/static variables (e.g., &lt;code>global_data&lt;/code>, &lt;code>global_bss&lt;/code>, &lt;code>local_static&lt;/code>) and PLT/GOT entries.&lt;/li>
&lt;li>&lt;strong>&lt;code>ld-linux-x86-64.so.2&lt;/code>&lt;/strong>: Adjusts internal addresses for the dynamic linker itself.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What Happens During Relocation?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The dynamic linker reads &lt;strong>relocation sections&lt;/strong> like &lt;code>.rela.dyn&lt;/code> (for global variables) and &lt;code>.rela.plt&lt;/code> (for function calls) to update addresses.&lt;/li>
&lt;li>For example:
&lt;ul>
&lt;li>A &lt;code>R_X86_64_GLOB_DAT&lt;/code> relocation updates the GOT entry for &lt;code>printf&lt;/code> to point to its address in &lt;code>libc.so.6&lt;/code>.&lt;/li>
&lt;li>A &lt;code>R_X86_64_RELATIVE&lt;/code> relocation adjusts addresses in &lt;code>./demo&lt;/code> based on its load address (ASLR).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>2. Initialization of Libraries&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-initialization-of-libraries-1">&lt;/span>
&lt;a href="#2-initialization-of-libraries-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">5881: calling init: /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5881: calling init: /lib/x86_64-linux-gnu/libc.so.6&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Run initialization code for shared libraries after relocations are applied.&lt;/li>
&lt;li>&lt;strong>Order&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>Dynamic Linker (&lt;code>ld-linux&lt;/code>)&lt;/strong>: Initializes internal structures (e.g., GOT/PLT setup).&lt;/li>
&lt;li>&lt;strong>&lt;code>libc.so.6&lt;/code>&lt;/strong>: Initializes the C library (e.g., stdio, heap).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>3. Program Initialization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-program-initialization-1">&lt;/span>
&lt;a href="#3-program-initialization-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">5881: initialize program: ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Execute constructor functions (marked with &lt;code>__attribute__((constructor))&lt;/code>) before &lt;code>main()&lt;/code>.&lt;/li>
&lt;li>&lt;strong>In Your Code&lt;/strong>:
&lt;ul>
&lt;li>The &lt;code>initialize()&lt;/code> function is called here, printing &lt;code>&amp;quot;Initializing...\n&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>4. Transfer Control to Program&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="4-transfer-control-to-program-1">&lt;/span>
&lt;a href="#4-transfer-control-to-program-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">5881: transferring control: ./demo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Purpose&lt;/strong>: Jump to the program’s &lt;code>main()&lt;/code> function.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Output&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Global Data: 42&lt;/code> (from &lt;code>global_data&lt;/code> in &lt;code>.data&lt;/code>)&lt;/li>
&lt;li>&lt;code>Global BSS: 0&lt;/code> (from &lt;code>global_bss&lt;/code> in &lt;code>.bss&lt;/code>, zero-initialized)&lt;/li>
&lt;li>&lt;code>Local Static: 100&lt;/code> (from &lt;code>local_static&lt;/code> in &lt;code>.data&lt;/code>)&lt;/li>
&lt;li>&lt;code>Hello from .rodata!&lt;/code> (from &lt;code>message&lt;/code> in &lt;code>.rodata&lt;/code>)&lt;/li>
&lt;li>&lt;code>Counter: 1&lt;/code>, &lt;code>Counter: 2&lt;/code>, &lt;code>Counter: 3&lt;/code> (from &lt;code>counter()&lt;/code> with static &lt;code>count&lt;/code> in &lt;code>.bss&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Relocation Details&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Static Variables&lt;/strong>: Addresses of &lt;code>global_data&lt;/code>, &lt;code>global_bss&lt;/code>, and &lt;code>local_static&lt;/code> are resolved via &lt;code>.rela.dyn&lt;/code> relocations.&lt;/li>
&lt;li>&lt;strong>Function Calls&lt;/strong>: &lt;code>printf&lt;/code> is resolved via &lt;code>.rela.plt&lt;/code> relocations using the &lt;strong>PLT/GOT mechanism&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>5. Finalization&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="5-finalization-1">&lt;/span>
&lt;a href="#5-finalization-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">5881: calling fini: &lt;span class="o">[&lt;/span>0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5881: calling fini: /lib/x86_64-linux-gnu/libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5881: calling fini: /lib64/ld-linux-x86-64.so.2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Purpose&lt;/strong>: Run destructor functions (marked with &lt;code>__attribute__((destructor))&lt;/code>) after &lt;code>main()&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Order&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>Program Destructors&lt;/strong>:
&lt;ul>
&lt;li>The &lt;code>finalize()&lt;/code> function is called, printing &lt;code>&amp;quot;Finalizing...\n&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Library Destructors&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>libc.so.6&lt;/code>: Cleans up C library resources.&lt;/li>
&lt;li>&lt;code>ld-linux-x86-64.so.2&lt;/code>: Cleans up dynamic linking infrastructure.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Key Concepts in Relocation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-concepts-in-relocation">&lt;/span>
&lt;a href="#key-concepts-in-relocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Why Relocation Is Needed&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Shared libraries are compiled as &lt;strong>position-independent code (PIC)&lt;/strong> to support ASLR.&lt;/li>
&lt;li>At runtime, the dynamic linker adjusts addresses to match the actual load address in memory.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Types of Relocations&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>R_X86_64_RELATIVE&lt;/code>&lt;/strong>: Adjusts addresses relative to the library’s base address (e.g., for &lt;code>./demo&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>R_X86_64_GLOB_DAT&lt;/code>&lt;/strong>: Updates GOT entries for global symbols (e.g., &lt;code>printf&lt;/code> in &lt;code>libc.so.6&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>R_X86_64_JUMP_SLOT&lt;/code>&lt;/strong>: Updates PLT entries for lazy binding (e.g., resolving &lt;code>printf&lt;/code> on first call).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Sections Involved&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>.rela.dyn&lt;/code>: Relocations for global variables and data.&lt;/li>
&lt;li>&lt;code>.rela.plt&lt;/code>: Relocations for function calls (lazy binding).&lt;/li>
&lt;li>&lt;code>.got&lt;/code>: Global Offset Table (stores resolved addresses for variables/functions).&lt;/li>
&lt;li>&lt;code>.plt&lt;/code>: Procedure Linkage Table (trampolines for lazy symbol resolution).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Example: Resolving &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-resolving">&lt;/span>
&lt;a href="#example-resolving" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Initial Call&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>printf&lt;/code> in &lt;code>main()&lt;/code> jumps to &lt;code>.plt&lt;/code>, which then jumps to &lt;code>.got&lt;/code>.&lt;/li>
&lt;li>If unresolved, &lt;code>.got&lt;/code> redirects to the dynamic linker.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dynamic Linker&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Uses &lt;code>.rela.plt&lt;/code> to find the symbol index for &lt;code>printf&lt;/code>.&lt;/li>
&lt;li>Looks up &lt;code>printf&lt;/code> in &lt;code>libc.so.6&lt;/code> using &lt;code>.gnu.hash&lt;/code> and &lt;code>.dynsym&lt;/code>.&lt;/li>
&lt;li>Updates the &lt;code>.got&lt;/code> entry with &lt;code>printf&lt;/code>’s runtime address.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Subsequent Calls&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Directly use the resolved address in &lt;code>.got&lt;/code> (no dynamic linker needed).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Summary&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="summary">&lt;/span>
&lt;a href="#summary" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Relocation ensures&lt;/strong> that addresses in the binary and shared libraries are adjusted at runtime to work with ASLR and PIC.&lt;/li>
&lt;li>&lt;strong>Dynamic linker processes&lt;/strong> relocations in &lt;code>.rela.dyn&lt;/code> (variables) and &lt;code>.rela.plt&lt;/code> (functions) to resolve symbols like &lt;code>printf&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Constructors/destructors&lt;/strong> (&lt;code>initialize&lt;/code>/&lt;code>finalize&lt;/code>) are handled via &lt;code>.init_array&lt;/code>/&lt;code>.fini_array&lt;/code> after relocations are applied.&lt;/li>
&lt;/ul>
&lt;h2>&lt;code>printf&lt;/code> 重定位分析&lt;span class="hx-absolute -hx-mt-20" id="printf-重定位分析">&lt;/span>
&lt;a href="#printf-%e9%87%8d%e5%ae%9a%e4%bd%8d%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>gcc -g -no-pie -o demo demo.c&lt;/li>
&lt;li>查看重定位信息&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> readelf -r demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Relocation section &lt;span class="s1">&amp;#39;.rela.dyn&amp;#39;&lt;/span> at offset 0x4d8 contains &lt;span class="m">2&lt;/span> entries:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Offset Info Type Sym. Value Sym. Name + Addend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000403fd8 &lt;span class="m">000100000006&lt;/span> R_X86_64_GLOB_DAT &lt;span class="m">0000000000000000&lt;/span> __libc_start_main@GLIBC_2.34 + &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000403fe0 &lt;span class="m">000400000006&lt;/span> R_X86_64_GLOB_DAT &lt;span class="m">0000000000000000&lt;/span> __gmon_start__ + &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Relocation section &lt;span class="s1">&amp;#39;.rela.plt&amp;#39;&lt;/span> at offset 0x508 contains &lt;span class="m">2&lt;/span> entries:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Offset Info Type Sym. Value Sym. Name + Addend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">000000404000&lt;/span> &lt;span class="m">000200000007&lt;/span> R_X86_64_JUMP_SLO &lt;span class="m">0000000000000000&lt;/span> puts@GLIBC_2.2.5 + &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">000000404008&lt;/span> &lt;span class="m">000300000007&lt;/span> R_X86_64_JUMP_SLO &lt;span class="m">0000000000000000&lt;/span> printf@GLIBC_2.2.5 + &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>0x000000404008 就是 &lt;code>printf&lt;/code> 在文件中偏移量&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>gdb ./demo 分析&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Reading symbols from ./demo...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint &lt;span class="m">1&lt;/span> at 0x401070
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">break&lt;/span> break-range
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Starting program: /home/yang/elf-demo/demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint 1.2, 0x00007ffff7fe4540 in _start &lt;span class="o">()&lt;/span> from /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> _dl_runtime_resolve_xsave
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_dl_runtime_resolve_xsave _dl_runtime_resolve_xsavec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> _dl_runtime_resolve_xsave
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint &lt;span class="m">2&lt;/span> at 0x7ffff7fda220: file ../sysdeps/x86_64/dl-trampoline.h, line 71.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info sharedlibrary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">From To Syms Read Shared Object Library
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x00007ffff7fc6000 0x00007ffff7ff0195 Yes /lib64/ld-linux-x86-64.so.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> dis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">disable disassemble disconnect display
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> disassemble &lt;span class="nb">printf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Dump of assembler code &lt;span class="k">for&lt;/span> &lt;span class="k">function&lt;/span> printf@plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000401060 &amp;lt;+0&amp;gt;: endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000401064 &amp;lt;+4&amp;gt;: jmp *0x2f9e&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span> &lt;span class="c1"># 0x404008 &amp;lt;printf@got.plt&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x000000000040106a &amp;lt;+10&amp;gt;: nopw 0x0&lt;span class="o">(&lt;/span>%rax,%rax,1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">End of assembler dump.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> x/xg 0x404008
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x404008 &amp;lt;printf@got.plt&amp;gt;: 0x0000000000401040 &lt;span class="c1"># 重定位前的地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#0 0x00007ffff7fe4540 in _start () from /lib64/ld-linux-x86-64.so.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#1 0x0000000000000001 in ?? ()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#2 0x00007fffffffe1a9 in ?? ()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#3 0x0000000000000000 in ?? ()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> print_message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint &lt;span class="m">3&lt;/span> at 0x4011c8: file demo.c, line 32.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Continuing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>Thread debugging using libthread_db enabled&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using host libthread_db library &lt;span class="s2">&amp;#34;/lib/x86_64-linux-gnu/libthread_db.so.1&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint 1.1, 0x0000000000401070 in _start &lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Continuing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint 3, print_message &lt;span class="o">()&lt;/span> at demo.c:32
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">32 printf&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;%s\n&amp;#34;&lt;/span>, message&lt;span class="o">)&lt;/span>&lt;span class="p">;&lt;/span> // Uses PLT/GOT &lt;span class="k">for&lt;/span> &lt;span class="nb">printf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> x/xg 0x404008
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x404008 &amp;lt;printf@got.plt&amp;gt;: 0x00007ffff7c600f0 &lt;span class="c1"># 重定位后的地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#0 print_message () at demo.c:32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#1 0x0000000000401244 in main () at demo.c:43&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint &lt;span class="m">4&lt;/span> at 0x40115e: file demo.c, line 16.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Continuing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from .rodata!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Breakpoint 4, counter &lt;span class="o">()&lt;/span> at demo.c:16
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">16 count++&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#0 counter () at demo.c:16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#1 0x0000000000401257 in main () at demo.c:46&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> x/xg 0x404008
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x404008 &amp;lt;printf@got.plt&amp;gt;: 0x00007ffff7c600f0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>&lt;strong>dynamic linker 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linker-总结">&lt;/span>
&lt;a href="#dynamic-linker-%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>The dynamic linker (&lt;code>ld-linux-*.so&lt;/code>) is a &lt;strong>shared object&lt;/strong> that the kernel loads directly.&lt;/li>
&lt;li>It bootstraps the loading of all other shared libraries and manages symbol resolution.&lt;/li>
&lt;li>Without it, dynamically linked programs (like most C programs using &lt;code>glibc&lt;/code>) would not work.&lt;/li>
&lt;/ul>
&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/ld.so.8.html" target="_blank" rel="noopener">dynamic-linker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/xfenglu/everycodershouldknow#%E5%85%AD%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E9%93%BE%E6%8E%A5%E5%99%A8%E7%B3%BB%E5%88%97" target="_blank" rel="noopener">彻底理解连接器系列&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Master Elf Sections Dynamic Link</title><link>https://cloudedseal.github.io/blog/master-elf-sections-dynamic-link/</link><pubDate>Fri, 02 May 2025 09:18:20 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-elf-sections-dynamic-link/</guid><description>
&lt;h2>&lt;strong>Dynamic Linking 涉及到的 section&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linking-涉及到的-section">&lt;/span>
&lt;a href="#dynamic-linking-%e6%b6%89%e5%8f%8a%e5%88%b0%e7%9a%84-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Section&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Purpose&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Example Command&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.dynamic&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>DYNAMIC&lt;/code>&lt;/td>
&lt;td>Contains metadata for the dynamic linker (e.g., needed libraries, symbol tables, relocations).&lt;/td>
&lt;td>&lt;code>readelf -d demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.plt&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>PROGBITS&lt;/code>&lt;/td>
&lt;td>&lt;strong>Procedure Linkage Table&lt;/strong>: Stubs for external function calls (e.g., &lt;code>printf&lt;/code>).&lt;/td>
&lt;td>&lt;code>objdump -d demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.got&lt;/code> / &lt;code>.got.plt&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>PROGBITS&lt;/code>&lt;/td>
&lt;td>&lt;strong>Global Offset Table&lt;/strong>: Stores resolved addresses for functions and variables.&lt;/td>
&lt;td>&lt;code>objdump -R demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.dynsym&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>DYNSYM&lt;/code>&lt;/td>
&lt;td>Dynamic symbol table (subset of &lt;code>.symtab&lt;/code>) for runtime symbol resolution.&lt;/td>
&lt;td>&lt;code>readelf -s demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.dynstr&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>STRTAB&lt;/code>&lt;/td>
&lt;td>String table for symbol names in &lt;code>.dynsym&lt;/code>.&lt;/td>
&lt;td>&lt;code>readelf -p .dynstr demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.gnu.hash&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>GNU_HASH&lt;/code>&lt;/td>
&lt;td>Optimized hash table for fast symbol lookup (replaces legacy &lt;code>.hash&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -p .gnu.hash demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.rela.dyn&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>RELA&lt;/code>&lt;/td>
&lt;td>Relocations for global variables (e.g., &lt;code>message&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -r demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.rela.plt&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>RELA&lt;/code>&lt;/td>
&lt;td>Relocations for function calls (e.g., &lt;code>printf&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -r demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.init_array&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>INIT_ARRAY&lt;/code>&lt;/td>
&lt;td>Array of constructor functions (marked with &lt;code>__attribute__((constructor))&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -s demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.fini_array&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>FINI_ARRAY&lt;/code>&lt;/td>
&lt;td>Array of destructor functions (marked with &lt;code>__attribute__((destructor))&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -s demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.interp&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;code>PROGBITS&lt;/code>&lt;/td>
&lt;td>Path to the dynamic linker (e.g., &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>).&lt;/td>
&lt;td>&lt;code>readelf -p .interp demo&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>symbol table 符号表分析&lt;span class="hx-absolute -hx-mt-20" id="symbol-table-符号表分析">&lt;/span>
&lt;a href="#symbol-table-%e7%ac%a6%e5%8f%b7%e8%a1%a8%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>objdump -t demo&lt;/code> command displays the &lt;strong>symbol table&lt;/strong> of the ELF executable &lt;code>demo&lt;/code>. This table lists &lt;code>all symbols&lt;/code> (functions, variables, sections, etc.) defined or referenced in the binary.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SYMBOL TABLE:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> l df *ABS* &lt;span class="m">0000000000000000&lt;/span> Scrt1.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000000000038c l O .note.ABI-tag &lt;span class="m">0000000000000020&lt;/span> __abi_tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> l df *ABS* &lt;span class="m">0000000000000000&lt;/span> crtstuff.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000010b0 l F .text &lt;span class="m">0000000000000000&lt;/span> deregister_tm_clones
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000010e0 l F .text &lt;span class="m">0000000000000000&lt;/span> register_tm_clones
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001120&lt;/span> l F .text &lt;span class="m">0000000000000000&lt;/span> __do_global_dtors_aux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004020&lt;/span> l O .bss &lt;span class="m">0000000000000001&lt;/span> completed.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000000000003db0 l O .fini_array &lt;span class="m">0000000000000000&lt;/span> __do_global_dtors_aux_fini_array_entry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001160&lt;/span> l F .text &lt;span class="m">0000000000000000&lt;/span> frame_dummy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000000000003da0 l O .init_array &lt;span class="m">0000000000000000&lt;/span> __frame_dummy_init_array_entry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> l df *ABS* &lt;span class="m">0000000000000000&lt;/span> demo.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004028&lt;/span> l O .bss &lt;span class="m">0000000000000004&lt;/span> count.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004014&lt;/span> l O .data &lt;span class="m">0000000000000004&lt;/span> local_static.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> l df *ABS* &lt;span class="m">0000000000000000&lt;/span> crtstuff.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000021f8 l O .eh_frame &lt;span class="m">0000000000000000&lt;/span> __FRAME_END__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> l df *ABS* &lt;span class="m">0000000000000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000000000003dc0 l O .dynamic &lt;span class="m">0000000000000000&lt;/span> _DYNAMIC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000002078&lt;/span> l .eh_frame_hdr &lt;span class="m">0000000000000000&lt;/span> __GNU_EH_FRAME_HDR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000000000003fb0 l O .got &lt;span class="m">0000000000000000&lt;/span> _GLOBAL_OFFSET_TABLE_
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004018&lt;/span> g O .data &lt;span class="m">0000000000000008&lt;/span> message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> F *UND* &lt;span class="m">0000000000000000&lt;/span> __libc_start_main@GLIBC_2.34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w *UND* &lt;span class="m">0000000000000000&lt;/span> _ITM_deregisterTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004000&lt;/span> w .data &lt;span class="m">0000000000000000&lt;/span> data_start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> F *UND* &lt;span class="m">0000000000000000&lt;/span> puts@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004020&lt;/span> g .data &lt;span class="m">0000000000000000&lt;/span> _edata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004010&lt;/span> g O .data &lt;span class="m">0000000000000004&lt;/span> global_data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000000000127c g F .fini &lt;span class="m">0000000000000000&lt;/span> .hidden _fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011d3 g F .text 000000000000001a print_message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004024&lt;/span> g O .bss &lt;span class="m">0000000000000004&lt;/span> global_bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> F *UND* &lt;span class="m">0000000000000000&lt;/span> printf@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000000000119f g F .text 000000000000001a finalize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011b9 g F .text 000000000000001a initialize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004000&lt;/span> g .data &lt;span class="m">0000000000000000&lt;/span> __data_start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w *UND* &lt;span class="m">0000000000000000&lt;/span> __gmon_start__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004008&lt;/span> g O .data &lt;span class="m">0000000000000000&lt;/span> .hidden __dso_handle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000002000&lt;/span> g O .rodata &lt;span class="m">0000000000000004&lt;/span> _IO_stdin_used
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004030&lt;/span> g .bss &lt;span class="m">0000000000000000&lt;/span> _end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001080&lt;/span> g F .text &lt;span class="m">0000000000000026&lt;/span> _start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001169&lt;/span> g F .text &lt;span class="m">0000000000000036&lt;/span> counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004020&lt;/span> g .bss &lt;span class="m">0000000000000000&lt;/span> __bss_start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011ed g F .text 000000000000008e main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004020&lt;/span> g O .data &lt;span class="m">0000000000000000&lt;/span> .hidden __TMC_END__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w *UND* &lt;span class="m">0000000000000000&lt;/span> _ITM_registerTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w F *UND* &lt;span class="m">0000000000000000&lt;/span> __cxa_finalize@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001000&lt;/span> g F .init &lt;span class="m">0000000000000000&lt;/span> .hidden _init&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>General Format of Each Line&lt;span class="hx-absolute -hx-mt-20" id="general-format-of-each-line">&lt;/span>
&lt;a href="#general-format-of-each-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Each line in the symbol table has the following format:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>ADDRESS Binding TYPE SECTION SIZE NAME&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Key Fields in the Output&lt;span class="hx-absolute -hx-mt-20" id="key-fields-in-the-output">&lt;/span>
&lt;a href="#key-fields-in-the-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Address (&lt;code>00000000000011d3&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The &lt;code>virtual memory address&lt;/code> of the symbol (hexadecimal)&lt;/li>
&lt;li>For &lt;code>external/undefined&lt;/code> symbols (&lt;code>*UND*&lt;/code>), this is &lt;code>0000000000000000&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Binding (&lt;code>l&lt;/code>, &lt;code>g&lt;/code>, &lt;code>!&lt;/code>, &lt;code>w&lt;/code>, &lt;code>u&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>global(默认的)、local、weak binding&lt;/li>
&lt;li>&lt;strong>&lt;code>l&lt;/code>&lt;/strong>: Local symbol (&lt;code>not visible outside the file&lt;/code>; e.g., static functions/variables).&lt;/li>
&lt;li>&lt;strong>&lt;code>g&lt;/code>&lt;/strong>: Global symbol (&lt;code>externally visible&lt;/code>; e.g., &lt;code>main&lt;/code>, &lt;code>printf&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>!&lt;/code>&lt;/strong>: Weak symbol (lower precedence during linking; not shown here).&lt;/li>
&lt;li>&lt;strong>&lt;code>w&lt;/code>&lt;/strong>: Weak symbol (unresolved). 还没有解析&lt;/li>
&lt;li>&lt;strong>&lt;code>u&lt;/code>&lt;/strong>: Unique global symbol (special case for symbol versioning).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Type (&lt;code>df&lt;/code>, &lt;code>O&lt;/code>, &lt;code>F&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>df&lt;/code>&lt;/strong>: &lt;code>Debug file&lt;/code> symbol (indicates source code filenames like &lt;code>demo.c&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>O&lt;/code>&lt;/strong>: &lt;code>Object&lt;/code> symbol (data variable, e.g., &lt;code>global_data&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>F&lt;/code>&lt;/strong>: &lt;code>Function&lt;/code> symbol (e.g., &lt;code>main&lt;/code>, &lt;code>print_message&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>UND&lt;/code>&lt;/strong>: &lt;code>Undefined&lt;/code> symbol (external reference, must be resolved at &lt;strong>link&lt;/strong> time).&lt;/li>
&lt;li>&lt;strong>&lt;code>ABS&lt;/code>&lt;/strong>: &lt;code>Absolute&lt;/code> symbol (not associated with any section; e.g., constants).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Section (&lt;code>*ABS*&lt;/code>, &lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>, &lt;code>.bss&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>*ABS*&lt;/code>&lt;/strong>: Absolute address (no section). 不属于任何 section&lt;/li>
&lt;li>&lt;strong>&lt;code>.text&lt;/code>&lt;/strong>: Executable code (functions). 指令&lt;/li>
&lt;li>&lt;strong>&lt;code>.data&lt;/code>&lt;/strong>: Initialized global/static variables. 初始化数据&lt;/li>
&lt;li>&lt;strong>&lt;code>.bss&lt;/code>&lt;/strong>: Uninitialized global/static variables. 未初始化数据&lt;/li>
&lt;li>&lt;strong>&lt;code>.rodata&lt;/code>&lt;/strong>: Read-only data (e.g., string literals). 只读数据&lt;/li>
&lt;li>&lt;strong>&lt;code>*UND*&lt;/code>&lt;/strong>: Undefined section (symbol requires external linkage). 需要外部链接&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Size (&lt;code>0000000000000004&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Size of the symbol&lt;/code> (in bytes, hexadecimal). For example, &lt;code>count.1&lt;/code> (a static variable) occupies 4 bytes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Name (&lt;code>main&lt;/code>, &lt;code>printf@GLIBC_2.2.5&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Symbol name&lt;/code>. For external symbols, versioning (e.g., &lt;code>@GLIBC_2.2.5&lt;/code>) indicates the required library version.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Key Symbols 总结&lt;span class="hx-absolute -hx-mt-20" id="key-symbols-总结">&lt;/span>
&lt;a href="#key-symbols-%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Symbol&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Section&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>_start&lt;/code>&lt;/td>
&lt;td>&lt;code>gF&lt;/code>&lt;/td>
&lt;td>&lt;code>.text&lt;/code>&lt;/td>
&lt;td>Entry point of the program (CRT startup code).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>main&lt;/code>&lt;/td>
&lt;td>&lt;code>gF&lt;/code>&lt;/td>
&lt;td>&lt;code>.text&lt;/code>&lt;/td>
&lt;td>Your main function.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>print_message&lt;/code>&lt;/td>
&lt;td>&lt;code>gF&lt;/code>&lt;/td>
&lt;td>&lt;code>.text&lt;/code>&lt;/td>
&lt;td>A custom function defined in &lt;code>demo.c&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>global_data&lt;/code>&lt;/td>
&lt;td>&lt;code>gO&lt;/code>&lt;/td>
&lt;td>&lt;code>.data&lt;/code>&lt;/td>
&lt;td>Initialized global variable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>global_bss&lt;/code>&lt;/td>
&lt;td>&lt;code>gO&lt;/code>&lt;/td>
&lt;td>&lt;code>.bss&lt;/code>&lt;/td>
&lt;td>Uninitialized global variable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>message&lt;/code>&lt;/td>
&lt;td>&lt;code>gO&lt;/code>&lt;/td>
&lt;td>&lt;code>.data&lt;/code>&lt;/td>
&lt;td>String literal (e.g., &lt;code>&amp;quot;Hello, World!&amp;quot;&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>puts@GLIBC_2.2.5&lt;/code>&lt;/td>
&lt;td>&lt;code>u UND &lt;/code>&lt;/td>
&lt;td>&lt;code>*UND*&lt;/code>&lt;/td>
&lt;td>External reference to &lt;code>puts&lt;/code> from glibc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>__libc_start_main&lt;/code>&lt;/td>
&lt;td>&lt;code>UND&lt;/code>&lt;/td>
&lt;td>&lt;code>*UND*&lt;/code>&lt;/td>
&lt;td>CRT function to initialize the program.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>_edata&lt;/code>, &lt;code>_end&lt;/code>&lt;/td>
&lt;td>&lt;code>g&lt;/code>&lt;/td>
&lt;td>&lt;code>.data&lt;/code>, &lt;code>.bss&lt;/code>&lt;/td>
&lt;td>Special symbols marking end of sections.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Special Sections and Symbols&lt;span class="hx-absolute -hx-mt-20" id="special-sections-and-symbols">&lt;/span>
&lt;a href="#special-sections-and-symbols" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/gcc-mirror/gcc/blob/master/libgcc/crtstuff.c" target="_blank" rel="noopener">&lt;code>crtstuff.c&lt;/code>&lt;/a> and &lt;code>Scrt1.o&lt;/code>&lt;/strong>: Compiler-generated CRT (C Runtime) code for initialization/finalization.&lt;/li>
&lt;li>&lt;a href="https://github.com/gcc-mirror/gcc/blob/master/libgcc/crtstuff.c#L194-L195" target="_blank" rel="noopener">&lt;strong>&lt;code>_ITM_*&lt;/code>&lt;/strong>&lt;/a>: Symbols for Intel Transactional Memory (unused unless compiling with &lt;code>-fgnu-tm&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>.init_array&lt;/code>/&lt;code>.fini_array&lt;/code>&lt;/strong>: Functions to run before/after &lt;code>main()&lt;/code> (e.g., constructors/destructors).&lt;/li>
&lt;li>&lt;strong>&lt;code>.eh_frame&lt;/code>&lt;/strong>: &lt;code>Exception handling metadata&lt;/code> (stack unwinding for exceptions or debugging).&lt;/li>
&lt;li>&lt;strong>&lt;code>.got&lt;/code>&lt;/strong>: Global Offset Table (for PIC/position-independent code).&lt;/li>
&lt;/ul>
&lt;h3>print_message 分析&lt;span class="hx-absolute -hx-mt-20" id="print_message-分析">&lt;/span>
&lt;a href="#print_message-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>00000000000011d3 g F .text 000000000000001a print_message&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Address&lt;/strong>: &lt;code>0x11d3&lt;/code> (location of &lt;code>print_message&lt;/code> in memory).&lt;/li>
&lt;li>&lt;strong>Binding&lt;/strong>: &lt;code>F&lt;/code> (function).&lt;/li>
&lt;li>&lt;strong>Type&lt;/strong>: &lt;code>g&lt;/code> (global),&lt;/li>
&lt;li>&lt;strong>Section&lt;/strong>: &lt;code>.text&lt;/code> (code section).&lt;/li>
&lt;li>&lt;strong>Size&lt;/strong>: &lt;code>0x1a&lt;/code> (26 bytes). print_message 代码共 26bytes&lt;/li>
&lt;li>&lt;strong>Name&lt;/strong>: &lt;code>print_message&lt;/code> (自定义的函数).&lt;/li>
&lt;/ul>
&lt;h3>printf@GLIBC_2.2.5 分析&lt;span class="hx-absolute -hx-mt-20" id="printfglibc_225-分析">&lt;/span>
&lt;a href="#printfglibc_225-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>0000000000000000 F *UND* 0000000000000000 printf@GLIBC_2.2.5&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Address&lt;/strong>&lt;/td>
&lt;td>&lt;code>0000000000000000&lt;/code>&lt;/td>
&lt;td>Undefined symbols have no valid address (resolved at runtime).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Binding&lt;/strong>&lt;/td>
&lt;td>&lt;strong>(implicit &lt;code>g&lt;/code>)&lt;/strong>&lt;/td>
&lt;td>Global binding (default for undefined symbols like &lt;code>printf&lt;/code>). Not explicitly shown here.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>F&lt;/code>&lt;/td>
&lt;td>Function (symbol is a function, not a variable).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Section&lt;/strong>&lt;/td>
&lt;td>&lt;code>*UND*&lt;/code>&lt;/td>
&lt;td>Undefined (external reference; resolved by the linker/loader).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0000000000000000&lt;/code>&lt;/td>
&lt;td>Size of the symbol (not applicable for undefined symbols).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Name&lt;/strong>&lt;/td>
&lt;td>&lt;code>printf@GLIBC_2.2.5&lt;/code>&lt;/td>
&lt;td>Symbol name with versioning (from &lt;code>glibc&lt;/code>).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>&lt;code>.dynstr section 分析&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="dynstr-section-分析">&lt;/span>
&lt;a href="#dynstr-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> [ 7] .dynstr STRTAB 0000000000000498 00000498
0000000000000094 0000000000000000 A 0 0 1&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.dynstr 二进制查看&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="dynstr-二进制查看">&lt;/span>
&lt;a href="#dynstr-%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd -s 0x498 -l 0x94 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000498: &lt;span class="m">0070&lt;/span> &lt;span class="m">7574&lt;/span> &lt;span class="m">7300&lt;/span> 5f5f 6c69 &lt;span class="m">6263&lt;/span> 5f73 &lt;span class="m">7461&lt;/span> .puts.__libc_sta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004a8: &lt;span class="m">7274&lt;/span> 5f6d &lt;span class="m">6169&lt;/span> 6e00 5f5f &lt;span class="m">6378&lt;/span> 615f &lt;span class="m">6669&lt;/span> rt_main.__cxa_fi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004b8: 6e61 6c69 7a65 &lt;span class="m">0070&lt;/span> &lt;span class="m">7269&lt;/span> 6e74 &lt;span class="m">6600&lt;/span> 6c69 nalize.printf.li
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004c8: &lt;span class="m">6263&lt;/span> 2e73 6f2e &lt;span class="m">3600&lt;/span> 474c &lt;span class="m">4942&lt;/span> 435f 322e bc.so.6.GLIBC_2.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004d8: 322e &lt;span class="m">3500&lt;/span> 474c &lt;span class="m">4942&lt;/span> 435f 322e &lt;span class="m">3334&lt;/span> 005f 2.5.GLIBC_2.34._
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004e8: &lt;span class="m">4954&lt;/span> 4d5f &lt;span class="m">6465&lt;/span> &lt;span class="m">7265&lt;/span> &lt;span class="m">6769&lt;/span> &lt;span class="m">7374&lt;/span> &lt;span class="m">6572&lt;/span> 544d ITM_deregisterTM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000004f8: 436c 6f6e &lt;span class="m">6554&lt;/span> &lt;span class="m">6162&lt;/span> 6c65 005f 5f67 6d6f CloneTable.__gmo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000508: 6e5f &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> 745f 5f00 5f49 544d 5f72 n_start__._ITM_r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000518: &lt;span class="m">6567&lt;/span> &lt;span class="m">6973&lt;/span> &lt;span class="m">7465&lt;/span> &lt;span class="m">7254&lt;/span> 4d43 6c6f 6e65 &lt;span class="m">5461&lt;/span> egisterTMCloneTa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000528: 626c &lt;span class="m">6500&lt;/span> ble.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.dynstr&lt;/code> 查看分析&lt;span class="hx-absolute -hx-mt-20" id="dynstr-查看分析">&lt;/span>
&lt;a href="#dynstr-%e6%9f%a5%e7%9c%8b%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>.dynstr base = 0x498&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">readelf -p .dynstr demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">String dump of section &lt;span class="s1">&amp;#39;.dynstr&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> puts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 6&lt;span class="o">]&lt;/span> __libc_start_main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 18&lt;span class="o">]&lt;/span> __cxa_finalize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 27&lt;span class="o">]&lt;/span> &lt;span class="nb">printf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 2e&lt;span class="o">]&lt;/span> libc.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 38&lt;span class="o">]&lt;/span> GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 44&lt;span class="o">]&lt;/span> GLIBC_2.34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 4f&lt;span class="o">]&lt;/span> _ITM_deregisterTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 6b&lt;span class="o">]&lt;/span> __gmon_start__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 7a&lt;span class="o">]&lt;/span> _ITM_registerTMCloneTable&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>[ 1] puts 距离 .dynstr 开始处偏移量为 1, 也就是 0x498 + 1 = 0x499。长度为 5。包含一个 NULL terminator&lt;/li>
&lt;/ul>
&lt;h2>&lt;code>.strtab section&lt;/code> 分析&lt;span class="hx-absolute -hx-mt-20" id="strtab-section-分析">&lt;/span>
&lt;a href="#strtab-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>.strtab&lt;/code> section in an ELF file is the &lt;strong>string table&lt;/strong> that stores &lt;strong>null-terminated strings&lt;/strong> referenced by other sections, such as the &lt;strong>symbol table&lt;/strong> (&lt;code>.symtab&lt;/code>) and &lt;strong>section names&lt;/strong>.
These strings include:&lt;/p>
&lt;ul>
&lt;li>Function names (e.g., &lt;code>main&lt;/code>, &lt;code>printf&lt;/code>)&lt;/li>
&lt;li>Variable names (e.g., &lt;code>global_data&lt;/code>)&lt;/li>
&lt;li>Section names (e.g., &lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>)&lt;/li>
&lt;li>Other identifiers used in the binary.&lt;/li>
&lt;/ul>
&lt;p>It acts as a centralized repository for strings, allowing sections like &lt;code>.symtab&lt;/code> to reference names via &lt;strong>offsets (indices)&lt;/strong> into &lt;code>.strtab&lt;/code> instead of embedding strings directly.&lt;/p>
&lt;h3>&lt;strong>&lt;code>.strtab section&lt;/code> 字段解释&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="strtab-section">&lt;/span>
&lt;a href="#strtab-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>From your &lt;code>readelf -S demo&lt;/code> output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[35] .strtab STRTAB 0000000000000000 00003978
0000000000000245 0000000000000000 0 0 1&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Name&lt;/strong>&lt;/td>
&lt;td>&lt;code>.strtab&lt;/code>&lt;/td>
&lt;td>String table for symbol/section names.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>STRTAB&lt;/code>&lt;/td>
&lt;td>Indicates a string table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Address&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Not loaded into memory (no runtime use).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x00003978&lt;/code>&lt;/td>
&lt;td>File offset to the start of the string table (14,712 bytes into the file).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000245&lt;/code> (581 bytes)&lt;/td>
&lt;td>Total size of the string table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Entry Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Not applicable (strings are variable-length).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>None&lt;/td>
&lt;td>No special flags (not allocated in memory).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Link&lt;/strong>&lt;/td>
&lt;td>&lt;code>0&lt;/code>&lt;/td>
&lt;td>Not linked to another section (standalone).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Info&lt;/strong>&lt;/td>
&lt;td>&lt;code>0&lt;/code>&lt;/td>
&lt;td>No additional metadata.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Alignment&lt;/strong>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>Byte-aligned (strings are stored contiguously).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Key Concepts&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-concepts">&lt;/span>
&lt;a href="#key-concepts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Purpose of &lt;code>.strtab&lt;/code>:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Stores &lt;code>human-readable names&lt;/code> for &lt;code>symbols&lt;/code> and &lt;code>sections&lt;/code>.&lt;/li>
&lt;li>Reduces redundancy by allowing multiple entries to reference the same string &lt;code>via offset&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>How Symbols Use &lt;code>.strtab&lt;/code>:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The symbol table (&lt;code>.symtab&lt;/code>) references &lt;code>.strtab&lt;/code> using the &lt;code>st_name&lt;/code> field.&lt;/li>
&lt;li>Example: A symbol like &lt;code>main&lt;/code> in &lt;code>.symtab&lt;/code> has an &lt;code>st_name&lt;/code> value (e.g., &lt;code>0x123&lt;/code>), which is an offset into &lt;code>.strtab&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>String Encoding:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Strings are null-terminated (&lt;code>\0&lt;/code>).&lt;/li>
&lt;li>The first byte (&lt;code>offset 0x0&lt;/code>) is always an empty string (&lt;code>&amp;quot;&amp;quot;&lt;/code>), used as a placeholder.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Not Loaded at Runtime:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The &lt;code>.strtab&lt;/code> section is &lt;strong>not marked as allocatable&lt;/strong> (&lt;code>A&lt;/code> flag), so it is not loaded into memory during program execution.&lt;/li>
&lt;li>It is primarily used during linking and debugging.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>&lt;code>.strtab&lt;/code> 探析&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="strtab">&lt;/span>
&lt;a href="#strtab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>&lt;code>readelf -p demo&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="readelf--p-demo">&lt;/span>
&lt;a href="#readelf--p-demo" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">readelf -p .strtab demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">String dump of section &lt;span class="s1">&amp;#39;.strtab&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> Scrt1.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 9&lt;span class="o">]&lt;/span> __abi_tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 13&lt;span class="o">]&lt;/span> crtstuff.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1e&lt;span class="o">]&lt;/span> deregister_tm_clones
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 33&lt;span class="o">]&lt;/span> __do_global_dtors_aux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 49&lt;span class="o">]&lt;/span> completed.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 55&lt;span class="o">]&lt;/span> __do_global_dtors_aux_fini_array_entry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 7c&lt;span class="o">]&lt;/span> frame_dummy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 88&lt;span class="o">]&lt;/span> __frame_dummy_init_array_entry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> a7&lt;span class="o">]&lt;/span> demo.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> ae&lt;span class="o">]&lt;/span> count.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> b6&lt;span class="o">]&lt;/span> local_static.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> c5&lt;span class="o">]&lt;/span> __FRAME_END__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> d3&lt;span class="o">]&lt;/span> _DYNAMIC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> dc&lt;span class="o">]&lt;/span> __GNU_EH_FRAME_HDR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> ef&lt;span class="o">]&lt;/span> _GLOBAL_OFFSET_TABLE_
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 105&lt;span class="o">]&lt;/span> __libc_start_main@GLIBC_2.34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 122&lt;span class="o">]&lt;/span> _ITM_deregisterTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 13e&lt;span class="o">]&lt;/span> puts@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 14f&lt;span class="o">]&lt;/span> _edata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 156&lt;span class="o">]&lt;/span> global_data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 162&lt;span class="o">]&lt;/span> _fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 168&lt;span class="o">]&lt;/span> print_message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 176&lt;span class="o">]&lt;/span> global_bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 181&lt;span class="o">]&lt;/span> printf@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 194&lt;span class="o">]&lt;/span> finalize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 19d&lt;span class="o">]&lt;/span> initialize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1a8&lt;span class="o">]&lt;/span> __data_start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1b5&lt;span class="o">]&lt;/span> __gmon_start__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1c4&lt;span class="o">]&lt;/span> __dso_handle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1d1&lt;span class="o">]&lt;/span> _IO_stdin_used
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1e0&lt;span class="o">]&lt;/span> _end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1e5&lt;span class="o">]&lt;/span> counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1ed&lt;span class="o">]&lt;/span> __bss_start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1f9&lt;span class="o">]&lt;/span> main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1fe&lt;span class="o">]&lt;/span> __TMC_END__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 20a&lt;span class="o">]&lt;/span> _ITM_registerTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 224&lt;span class="o">]&lt;/span> __cxa_finalize@GLIBC_2.2.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 23f&lt;span class="o">]&lt;/span> _init&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>&lt;strong>Differences Between &lt;code>.strtab&lt;/code> and &lt;code>.dynstr&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="differences-between">&lt;/span>
&lt;a href="#differences-between" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>&lt;code>.strtab&lt;/code>&lt;/th>
&lt;th>&lt;code>.dynstr&lt;/code>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Used by&lt;/strong>&lt;/td>
&lt;td>&lt;code>.symtab&lt;/code> (full symbol table)&lt;/td>
&lt;td>&lt;code>.dynsym&lt;/code> (dynamic symbol table)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Loaded at Runtime?&lt;/strong>&lt;/td>
&lt;td>No (not allocatable)&lt;/td>
&lt;td>Yes (used by dynamic linker)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Purpose&lt;/strong>&lt;/td>
&lt;td>Debugging, static linking&lt;/td>
&lt;td>Dynamic linking&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>Larger (includes all symbols)&lt;/td>
&lt;td>Smaller (subset for runtime)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Why &lt;code>.strtab&lt;/code> Matters&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why">&lt;/span>
&lt;a href="#why" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Symbol Resolution:&lt;/strong>&lt;br>
The symbol table (&lt;code>.symtab&lt;/code>) relies on &lt;code>.strtab&lt;/code> to associate names (e.g., &lt;code>printf&lt;/code>) with addresses.&lt;/li>
&lt;li>&lt;strong>Debugging:&lt;/strong>&lt;br>
Tools like &lt;code>gdb&lt;/code> and &lt;code>nm&lt;/code> use &lt;code>.strtab&lt;/code> to display human-readable names during debugging.&lt;/li>
&lt;li>&lt;strong>Stripped Binaries:&lt;/strong>&lt;br>
If &lt;code>.strtab&lt;/code> is removed (via &lt;code>strip&lt;/code>), symbols lose their names, making reverse engineering harder.&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>&lt;code>.strtab section&lt;/code> 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="strtab-section-1">&lt;/span>
&lt;a href="#strtab-section-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;code>.strtab&lt;/code>&lt;/strong> is a string table storing names for symbols and sections.&lt;/li>
&lt;li>It is referenced by &lt;code>.symtab&lt;/code> via offsets (e.g., &lt;code>st_name&lt;/code>).&lt;/li>
&lt;li>Use &lt;code>readelf -p .strtab demo&lt;/code> to view its contents.&lt;/li>
&lt;li>It is not loaded at runtime but is crucial for linking and debugging.&lt;/li>
&lt;/ul>
&lt;h2>&lt;code>.shstrtab section&lt;/code> 分析&lt;span class="hx-absolute -hx-mt-20" id="shstrtab-section-分析">&lt;/span>
&lt;a href="#shstrtab-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>.shstrtab&lt;/code> section in an ELF file is the &lt;strong>section header string table&lt;/strong>, which stores &lt;strong>null-terminated strings&lt;/strong> representing the &lt;strong>names of all sections&lt;/strong> in the binary. This section is critical for interpreting the &lt;strong>section headers&lt;/strong> in the ELF file, as it allows tools like &lt;code>readelf&lt;/code>, &lt;code>objdump&lt;/code>, and debuggers to map &lt;code>numeric section indices&lt;/code> to &lt;code>human-readable names&lt;/code> (e.g., &lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>, &lt;code>.bss&lt;/code>). link 时使用。运行时不使用。&lt;/p>
&lt;h3>&lt;strong>&lt;code>.shstrtab section&lt;/code> 字段解释&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="shstrtab-section">&lt;/span>
&lt;a href="#shstrtab-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[36] .shstrtab STRTAB 0000000000000000 00003bbd
000000000000016a 0000000000000000 0 0 1&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Name&lt;/strong>&lt;/td>
&lt;td>&lt;code>.shstrtab&lt;/code>&lt;/td>
&lt;td>Section header string table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>STRTAB&lt;/code>&lt;/td>
&lt;td>Indicates a &lt;code>string table&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Address&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Not loaded into memory (no runtime use).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x00003bbd&lt;/code>&lt;/td>
&lt;td>File offset to the start of the string table (15,277 bytes into the file).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x000000000000016a&lt;/code> (362 bytes)&lt;/td>
&lt;td>Total size of the string table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Entry Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Not applicable (strings are &lt;code>variable-length&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>None&lt;/td>
&lt;td>No special flags (not allocated in memory).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Link&lt;/strong>&lt;/td>
&lt;td>&lt;code>0&lt;/code>&lt;/td>
&lt;td>Not linked to another section (standalone).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Info&lt;/strong>&lt;/td>
&lt;td>&lt;code>0&lt;/code>&lt;/td>
&lt;td>No additional metadata.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Alignment&lt;/strong>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>Byte-aligned (strings are stored &lt;code>contiguously&lt;/code>).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Key Concepts&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-concepts-1">&lt;/span>
&lt;a href="#key-concepts-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Purpose of &lt;code>.shstrtab&lt;/code>:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Stores &lt;strong>section names&lt;/strong> as &lt;code>null-terminated&lt;/code> strings.&lt;/li>
&lt;li>Allows section headers to reference names via &lt;strong>offsets&lt;/strong> instead of embedding strings directly.&lt;/li>
&lt;li>Example: A section header for &lt;code>.text&lt;/code> has an &lt;code>sh_name&lt;/code> field pointing to the offset of &lt;code>.text&lt;/code> in &lt;code>.shstrtab&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Structure of Strings:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Strings are &lt;strong>null-terminated&lt;/strong> (&lt;code>\0&lt;/code>).&lt;/li>
&lt;li>The first byte (&lt;code>offset 0x0&lt;/code>) is always an empty string (&lt;code>&amp;quot;&amp;quot;&lt;/code>), used as a placeholder.&lt;/li>
&lt;li>Subsequent strings are concatenated, e.g.:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[0x00] &amp;#34;&amp;#34; \0
[0x01] &amp;#34;.text&amp;#34; \0
[0x06] &amp;#34;.data&amp;#34; \0
[0x0c] &amp;#34;.bss&amp;#34; \0
...&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>How Section Headers Use &lt;code>.shstrtab&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Each section header has an &lt;code>sh_name&lt;/code> field, which is an &lt;strong>offset&lt;/strong> into &lt;code>.shstrtab&lt;/code>.&lt;/li>
&lt;li>Example: A section header with &lt;code>sh_name = 0x01&lt;/code> points to the string &lt;code>.text&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Not Loaded at Runtime:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The &lt;code>.shstrtab&lt;/code> section is &lt;strong>not marked as allocatable&lt;/strong> (&lt;code>A&lt;/code> flag), so it is not loaded into memory during program execution.&lt;/li>
&lt;li>It is primarily used during &lt;code>linking&lt;/code> and analysis.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>&lt;code>.shstrtab&lt;/code> 探析&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="shstrtab">&lt;/span>
&lt;a href="#shstrtab" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>&lt;code>readelf -p&lt;/code>: Print String Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="readelf--p">&lt;/span>
&lt;a href="#readelf--p" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">readelf -p .shstrtab demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">String dump of section &lt;span class="s1">&amp;#39;.shstrtab&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> .symtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 9&lt;span class="o">]&lt;/span> .strtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 11&lt;span class="o">]&lt;/span> .shstrtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1b&lt;span class="o">]&lt;/span> .interp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 23&lt;span class="o">]&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 36&lt;span class="o">]&lt;/span> .note.gnu.build-id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 49&lt;span class="o">]&lt;/span> .note.ABI-tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 57&lt;span class="o">]&lt;/span> .gnu.hash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 61&lt;span class="o">]&lt;/span> .dynsym
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 69&lt;span class="o">]&lt;/span> .dynstr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 71&lt;span class="o">]&lt;/span> .gnu.version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 7e&lt;span class="o">]&lt;/span> .gnu.version_r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 8d&lt;span class="o">]&lt;/span> .rela.dyn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 97&lt;span class="o">]&lt;/span> .rela.plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> a1&lt;span class="o">]&lt;/span> .init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> a7&lt;span class="o">]&lt;/span> .plt.got
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> b0&lt;span class="o">]&lt;/span> .plt.sec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> b9&lt;span class="o">]&lt;/span> .text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> bf&lt;span class="o">]&lt;/span> .fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> c5&lt;span class="o">]&lt;/span> .rodata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> cd&lt;span class="o">]&lt;/span> .eh_frame_hdr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> db&lt;span class="o">]&lt;/span> .eh_frame
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> e5&lt;span class="o">]&lt;/span> .init_array
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> f1&lt;span class="o">]&lt;/span> .fini_array
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> fd&lt;span class="o">]&lt;/span> .dynamic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 106&lt;span class="o">]&lt;/span> .data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 10c&lt;span class="o">]&lt;/span> .bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 111&lt;span class="o">]&lt;/span> .comment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 11a&lt;span class="o">]&lt;/span> .debug_aranges
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 129&lt;span class="o">]&lt;/span> .debug_info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 135&lt;span class="o">]&lt;/span> .debug_abbrev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 143&lt;span class="o">]&lt;/span> .debug_line
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 14f&lt;span class="o">]&lt;/span> .debug_str
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 15a&lt;span class="o">]&lt;/span> .debug_line_str&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>This lists all section names stored in &lt;code>.shstrtab&lt;/code>, such as:
&lt;ul>
&lt;li>&lt;code>.interp&lt;/code> (dynamic linker path)&lt;/li>
&lt;li>&lt;code>.note.gnu.property&lt;/code> (security notes)&lt;/li>
&lt;li>&lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>, &lt;code>.bss&lt;/code>, &lt;code>.rodata&lt;/code>, &lt;code>.plt&lt;/code>, &lt;code>.got&lt;/code>, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;code>.shstrtab&lt;/code> 二进制查看&lt;span class="hx-absolute -hx-mt-20" id="shstrtab-二进制查看">&lt;/span>
&lt;a href="#shstrtab-%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd -s 0x3bbd -l 0x16a demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003bbd: 002e &lt;span class="m">7379&lt;/span> 6d74 &lt;span class="m">6162&lt;/span> 002e &lt;span class="m">7374&lt;/span> &lt;span class="m">7274&lt;/span> &lt;span class="m">6162&lt;/span> ..symtab..strtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003bcd: 002e &lt;span class="m">7368&lt;/span> &lt;span class="m">7374&lt;/span> &lt;span class="m">7274&lt;/span> &lt;span class="m">6162&lt;/span> 002e 696e &lt;span class="m">7465&lt;/span> ..shstrtab..inte
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003bdd: &lt;span class="m">7270&lt;/span> 002e 6e6f &lt;span class="m">7465&lt;/span> 2e67 6e75 2e70 726f rp..note.gnu.pro
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003bed: &lt;span class="m">7065&lt;/span> &lt;span class="m">7274&lt;/span> &lt;span class="m">7900&lt;/span> 2e6e 6f74 652e 676e 752e perty..note.gnu.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003bfd: &lt;span class="m">6275&lt;/span> 696c 642d &lt;span class="m">6964&lt;/span> 002e 6e6f &lt;span class="m">7465&lt;/span> 2e41 build-id..note.A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c0d: &lt;span class="m">4249&lt;/span> 2d74 &lt;span class="m">6167&lt;/span> 002e 676e 752e &lt;span class="m">6861&lt;/span> &lt;span class="m">7368&lt;/span> BI-tag..gnu.hash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c1d: 002e &lt;span class="m">6479&lt;/span> 6e73 796d 002e &lt;span class="m">6479&lt;/span> 6e73 &lt;span class="m">7472&lt;/span> ..dynsym..dynstr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c2d: 002e 676e 752e &lt;span class="m">7665&lt;/span> &lt;span class="m">7273&lt;/span> 696f 6e00 2e67 ..gnu.version..g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c3d: 6e75 2e76 &lt;span class="m">6572&lt;/span> &lt;span class="m">7369&lt;/span> 6f6e 5f72 002e &lt;span class="m">7265&lt;/span> nu.version_r..re
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c4d: 6c61 2e64 796e 002e &lt;span class="m">7265&lt;/span> 6c61 2e70 6c74 la.dyn..rela.plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c5d: 002e 696e &lt;span class="m">6974&lt;/span> 002e 706c 742e 676f &lt;span class="m">7400&lt;/span> ..init..plt.got.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c6d: 2e70 6c74 2e73 &lt;span class="m">6563&lt;/span> 002e &lt;span class="m">7465&lt;/span> &lt;span class="m">7874&lt;/span> 002e .plt.sec..text..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c7d: &lt;span class="m">6669&lt;/span> 6e69 002e 726f &lt;span class="m">6461&lt;/span> &lt;span class="m">7461&lt;/span> 002e &lt;span class="m">6568&lt;/span> fini..rodata..eh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c8d: 5f66 &lt;span class="m">7261&lt;/span> 6d65 5f68 &lt;span class="m">6472&lt;/span> 002e &lt;span class="m">6568&lt;/span> 5f66 _frame_hdr..eh_f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003c9d: &lt;span class="m">7261&lt;/span> 6d65 002e 696e &lt;span class="m">6974&lt;/span> 5f61 &lt;span class="m">7272&lt;/span> &lt;span class="m">6179&lt;/span> rame..init_array
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003cad: 002e &lt;span class="m">6669&lt;/span> 6e69 5f61 &lt;span class="m">7272&lt;/span> &lt;span class="m">6179&lt;/span> 002e &lt;span class="m">6479&lt;/span> ..fini_array..dy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003cbd: 6e61 6d69 &lt;span class="m">6300&lt;/span> 2e64 &lt;span class="m">6174&lt;/span> &lt;span class="m">6100&lt;/span> 2e62 &lt;span class="m">7373&lt;/span> namic..data..bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003ccd: 002e 636f 6d6d 656e &lt;span class="m">7400&lt;/span> 2e64 &lt;span class="m">6562&lt;/span> &lt;span class="m">7567&lt;/span> ..comment..debug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003cdd: 5f61 &lt;span class="m">7261&lt;/span> 6e67 &lt;span class="m">6573&lt;/span> 002e &lt;span class="m">6465&lt;/span> &lt;span class="m">6275&lt;/span> 675f _aranges..debug_
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003ced: 696e 666f 002e &lt;span class="m">6465&lt;/span> &lt;span class="m">6275&lt;/span> 675f &lt;span class="m">6162&lt;/span> &lt;span class="m">6272&lt;/span> info..debug_abbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003cfd: &lt;span class="m">6576&lt;/span> 002e &lt;span class="m">6465&lt;/span> &lt;span class="m">6275&lt;/span> 675f 6c69 6e65 002e ev..debug_line..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003d0d: &lt;span class="m">6465&lt;/span> &lt;span class="m">6275&lt;/span> 675f &lt;span class="m">7374&lt;/span> &lt;span class="m">7200&lt;/span> 2e64 &lt;span class="m">6562&lt;/span> &lt;span class="m">7567&lt;/span> debug_str..debug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003d1d: 5f6c 696e 655f &lt;span class="m">7374&lt;/span> &lt;span class="m">7200&lt;/span> _line_str.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Why &lt;code>.shstrtab&lt;/code> Matters&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-1">&lt;/span>
&lt;a href="#why-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Human-Readable Names:&lt;/strong>&lt;br>
Without &lt;code>.shstrtab&lt;/code>, section headers would be numeric, making analysis harder.&lt;/li>
&lt;li>&lt;strong>Efficient Storage:&lt;/strong>&lt;br>
Avoids duplicating strings across section headers.&lt;/li>
&lt;li>&lt;strong>Tool Compatibility:&lt;/strong>&lt;br>
Required by tools like &lt;code>readelf&lt;/code>, &lt;code>objdump&lt;/code>, and debuggers to interpret section headers.&lt;/li>
&lt;li>&lt;strong>Binary Inspection:&lt;/strong>&lt;br>
Essential for reverse engineering, debugging, and understanding ELF structure.&lt;/li>
&lt;/ol>
&lt;h2>&lt;code>.dynsym section&lt;/code> 分析&lt;span class="hx-absolute -hx-mt-20" id="dynsym-section-分析">&lt;/span>
&lt;a href="#dynsym-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;code>.dynsym&lt;/code> section in an ELF file is the &lt;strong>dynamic symbol table&lt;/strong>, which contains &lt;strong>symbols required for dynamic linking&lt;/strong> (e.g., external functions like &lt;code>printf&lt;/code> from &lt;code>libc&lt;/code>). This section is crucial for &lt;code>resolving symbols at runtime&lt;/code>. 运行时解析符号使用&lt;/p>
&lt;h3>&lt;strong>&lt;code>.dynsym section&lt;/code>字段解释&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynsym-section">&lt;/span>
&lt;a href="#dynsym-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>From your &lt;code>readelf -S demo&lt;/code> output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[ 6] .dynsym DYNSYM 00000000000003d8 000003d8
00000000000000c0 0000000000000018 A 7 1 8&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Name&lt;/strong>&lt;/td>
&lt;td>&lt;code>.dynsym&lt;/code>&lt;/td>
&lt;td>Dynamic symbol table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>DYNSYM&lt;/code>&lt;/td>
&lt;td>Indicates a dynamic symbol table.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Address&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x00000000000003d8&lt;/code>&lt;/td>
&lt;td>Virtual address in memory.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x000003d8&lt;/code>&lt;/td>
&lt;td>File offset to the start of the section.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x00000000000000c0&lt;/code> (192 bytes)&lt;/td>
&lt;td>Total size in bytes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Entry Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000018&lt;/code> (24 bytes)&lt;/td>
&lt;td>Size of each symbol entry.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>&lt;code>A&lt;/code> (Alloc)&lt;/td>
&lt;td>Section occupies memory during execution.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Link&lt;/strong>&lt;/td>
&lt;td>&lt;code>7&lt;/code>&lt;/td>
&lt;td>Index of the &lt;code>.dynstr&lt;/code> section (holds symbol names).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Info&lt;/strong>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>Number of local symbols (e.g., &lt;code>UND&lt;/code> symbols).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Alignment&lt;/strong>&lt;/td>
&lt;td>&lt;code>8&lt;/code>&lt;/td>
&lt;td>Alignment requirement for the section.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ol>
&lt;li>link=7 链接到 index = 【7】的 section&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Key Concepts&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-concepts-2">&lt;/span>
&lt;a href="#key-concepts-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Purpose of &lt;code>.dynsym&lt;/code>:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Stores &lt;strong>symbols needed for dynamic linking&lt;/strong>, such as:
&lt;ul>
&lt;li>External functions (e.g., &lt;code>printf&lt;/code>, &lt;code>puts&lt;/code>).&lt;/li>
&lt;li>Global variables from shared libraries.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Symbols are resolved by the dynamic linker (&lt;code>ld-linux.so&lt;/code>) at runtime.&lt;/li>
&lt;li>Unlike the full symbol table (&lt;code>.symtab&lt;/code>), &lt;code>.dynsym&lt;/code> is a &lt;strong>subset&lt;/strong> optimized for runtime use.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Structure of Entries:&lt;/strong>
Each entry in &lt;code>.dynsym&lt;/code> is 24 bytes (0x18) long, with fields like:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Name&lt;/strong>: Offset into &lt;code>.dynstr&lt;/code> for the symbol name (e.g., &lt;code>&amp;quot;printf&amp;quot;&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Value&lt;/strong>: Symbol address (0 for unresolved symbols).&lt;/li>
&lt;li>&lt;strong>Size&lt;/strong>: Size of the symbol (0 for functions).&lt;/li>
&lt;li>&lt;strong>Type &amp;amp; Binding&lt;/strong>: Metadata (e.g., &lt;code>FUNC GLOBAL DEFAULT UND&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Visibility&lt;/strong>: Symbol visibility (default, hidden, etc.).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>&lt;code>.dynsym&lt;/code> 查看&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynsym">&lt;/span>
&lt;a href="#dynsym" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>1. &lt;code>readelf --dyn-syms&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1">&lt;/span>
&lt;a href="#1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">readelf --dyn-syms demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Symbol table &lt;span class="s1">&amp;#39;.dynsym&amp;#39;&lt;/span> contains &lt;span class="m">8&lt;/span> entries:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Num: Value Size Type Bind Vis Ndx Name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> NOTYPE LOCAL DEFAULT UND
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> FUNC GLOBAL DEFAULT UND _&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>@GLIBC_2.34 &lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> NOTYPE WEAK DEFAULT UND _ITM_deregisterT&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> FUNC GLOBAL DEFAULT UND puts@GLIBC_2.2.5 &lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> FUNC GLOBAL DEFAULT UND &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>@GLIBC_2.2.5 &lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 5: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> NOTYPE WEAK DEFAULT UND __gmon_start__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 6: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> NOTYPE WEAK DEFAULT UND _ITM_registerTMC&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 7: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> FUNC WEAK DEFAULT UND &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>@GLIBC_2.2.5 &lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>&lt;strong>2. &lt;code>objdump -T&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2">&lt;/span>
&lt;a href="#2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump -T demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DYNAMIC SYMBOL TABLE:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> DF *UND* &lt;span class="m">0000000000000000&lt;/span> &lt;span class="o">(&lt;/span>GLIBC_2.34&lt;span class="o">)&lt;/span> __libc_start_main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w D *UND* &lt;span class="m">0000000000000000&lt;/span> Base _ITM_deregisterTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> DF *UND* &lt;span class="m">0000000000000000&lt;/span> &lt;span class="o">(&lt;/span>GLIBC_2.2.5&lt;span class="o">)&lt;/span> puts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> DF *UND* &lt;span class="m">0000000000000000&lt;/span> &lt;span class="o">(&lt;/span>GLIBC_2.2.5&lt;span class="o">)&lt;/span> &lt;span class="nb">printf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w D *UND* &lt;span class="m">0000000000000000&lt;/span> Base __gmon_start__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w D *UND* &lt;span class="m">0000000000000000&lt;/span> Base _ITM_registerTMCloneTable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000000000&lt;/span> w DF *UND* &lt;span class="m">0000000000000000&lt;/span> &lt;span class="o">(&lt;/span>GLIBC_2.2.5&lt;span class="o">)&lt;/span> __cxa_finalize&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>How &lt;code>.dynsym&lt;/code> Works in Dynamic Linking&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how">&lt;/span>
&lt;a href="#how" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Symbol Resolution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The dynamic linker uses &lt;code>.dynsym&lt;/code> entries to locate symbols in shared libraries (e.g., &lt;code>printf&lt;/code> in &lt;code>libc&lt;/code>).&lt;/li>
&lt;li>Each symbol has a name (from &lt;code>.dynstr&lt;/code>) and metadata (type, binding).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lazy Binding:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>When &lt;code>printf&lt;/code> is first called, the PLT stub jumps to the GOT entry (&lt;code>.got&lt;/code>).&lt;/li>
&lt;li>The GOT entry initially points to the resolver (in &lt;code>.plt&lt;/code>), which triggers the dynamic linker to resolve the symbol.&lt;/li>
&lt;li>The dynamic linker uses &lt;code>.dynsym&lt;/code> to look up &lt;code>printf&lt;/code> and updates the GOT entry with its address in &lt;code>libc&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Key Sections Involved:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>.dynsym&lt;/code>: Contains unresolved symbols (e.g., &lt;code>printf&lt;/code>).&lt;/li>
&lt;li>&lt;code>.dynstr&lt;/code>: String table for symbol names (linked via &lt;code>.dynsym&lt;/code>&amp;rsquo;s &lt;code>Link&lt;/code> field).&lt;/li>
&lt;li>&lt;code>.rela.plt&lt;/code>: Relocations for PLT entries (e.g., &lt;code>printf&lt;/code>&amp;rsquo;s GOT offset).&lt;/li>
&lt;li>&lt;code>.got&lt;/code>: Stores resolved addresses after dynamic linking.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>lazy binding 是怎样工作的?&lt;span class="hx-absolute -hx-mt-20" id="lazy-binding-是怎样工作的">&lt;/span>
&lt;a href="#lazy-binding-%e6%98%af%e6%80%8e%e6%a0%b7%e5%b7%a5%e4%bd%9c%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>demo 执行流程&lt;span class="hx-absolute -hx-mt-20" id="demo-执行流程">&lt;/span>
&lt;a href="#demo-%e6%89%a7%e8%a1%8c%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>The kernel loads &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code> (the dynamic linker).&lt;/li>
&lt;li>The dynamic linker loads &lt;code>libc.so.6&lt;/code> (used by &lt;code>printf&lt;/code>).&lt;/li>
&lt;li>It resolves &lt;code>printf&lt;/code> in &lt;code>libc&lt;/code> and updates the GOT.&lt;/li>
&lt;li>Constructor &lt;code>initialize()&lt;/code> runs before &lt;code>main()&lt;/code>.&lt;/li>
&lt;li>Destructor &lt;code>finalize()&lt;/code> runs after &lt;code>main()&lt;/code> exits.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>lazy binding&lt;/strong> for the &lt;code>printf&lt;/code> function in your code, using the &lt;code>readelf&lt;/code> output and ELF mechanics. This process involves the &lt;strong>Procedure Linkage Table (PLT)&lt;/strong>, &lt;strong>Global Offset Table (GOT)&lt;/strong>, and the &lt;strong>dynamic linker&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h3>&lt;strong>1. Key Sections Involved&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="1-key-sections-involved">&lt;/span>
&lt;a href="#1-key-sections-involved" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Section&lt;/th>
&lt;th>Address&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>.plt&lt;/code>&lt;/td>
&lt;td>&lt;code>0x1020&lt;/code>&lt;/td>
&lt;td>Stubs for external function calls (e.g., &lt;code>printf&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>.got&lt;/code>&lt;/td>
&lt;td>&lt;code>0x3fb0&lt;/code>&lt;/td>
&lt;td>Stores resolved addresses of external symbols.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>.rela.plt&lt;/code>&lt;/td>
&lt;td>&lt;code>0x678&lt;/code>&lt;/td>
&lt;td>Relocations for PLT entries (e.g., &lt;code>printf&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>.dynsym&lt;/code>&lt;/td>
&lt;td>&lt;code>0x3d8&lt;/code>&lt;/td>
&lt;td>Dynamic symbol table (includes unresolved symbols like &lt;code>printf&lt;/code>).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>&lt;strong>2. Lazy Binding Workflow&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="2-lazy-binding-workflow">&lt;/span>
&lt;a href="#2-lazy-binding-workflow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Lazy binding defers symbol resolution until the first call. Here&amp;rsquo;s how &lt;code>printf&lt;/code> is resolved:&lt;/p>
&lt;h4>&lt;strong>Step 1: Initial Call to &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-1-initial-call-to">&lt;/span>
&lt;a href="#step-1-initial-call-to" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>When &lt;code>print_message()&lt;/code> calls &lt;code>printf&lt;/code>, it jumps to the &lt;strong>PLT entry&lt;/strong> for &lt;code>printf&lt;/code>:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">print_message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Jumps to PLT entry for printf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Step 2: PLT Entry for &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-2-plt-entry-for">&lt;/span>
&lt;a href="#step-2-plt-entry-for" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>
&lt;p>The &lt;code>.plt&lt;/code> section contains a stub for &lt;code>printf&lt;/code>.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>0x1020: jmp *0x2f90(%rip) # Jump to GOT entry for printf
0x1026: pushq $0x0 # Argument for resolver
0x102b: jmp 0x1000 # Jump to dynamic linker resolver&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>The GOT entry (&lt;code>0x3fb0 + offset&lt;/code>) initially points to the resolver code in &lt;code>.plt&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Step 3: Dynamic Linker Resolves &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-3-dynamic-linker-resolves">&lt;/span>
&lt;a href="#step-3-dynamic-linker-resolves" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The resolver (in &lt;code>.plt&lt;/code>) calls the dynamic linker (&lt;code>ld-linux-x86-64.so.2&lt;/code>) to:
&lt;ol>
&lt;li>Look up &lt;code>printf&lt;/code> in the &lt;strong>symbol table&lt;/strong> (&lt;code>.symtab&lt;/code>, &lt;code>.dynsym&lt;/code>).&lt;/li>
&lt;li>Find the address of &lt;code>printf&lt;/code> in &lt;code>libc.so.6&lt;/code>.&lt;/li>
&lt;li>Update the GOT entry to point directly to &lt;code>libc&lt;/code>&amp;rsquo;s &lt;code>printf&lt;/code>.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Step 4: Subsequent Calls to &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-4-subsequent-calls-to">&lt;/span>
&lt;a href="#step-4-subsequent-calls-to" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>After resolution, the GOT entry points directly to &lt;code>libc&lt;/code>&amp;rsquo;s &lt;code>printf&lt;/code>, bypassing the resolver:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>0x1020: jmp *0x2f90(%rip) # Now jumps directly to libc&amp;#39;s printf&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>3. Observing Lazy Binding in Your Code&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="3-observing-lazy-binding-in-your-code">&lt;/span>
&lt;a href="#3-observing-lazy-binding-in-your-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Step 1: Find the PLT/GOT Entry for &lt;code>printf&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-1-find-the-pltgot-entry-for">&lt;/span>
&lt;a href="#step-1-find-the-pltgot-entry-for" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>From &lt;code>readelf -s demo&lt;/code>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Symbol table &lt;span class="s1">&amp;#39;.symtab&amp;#39;&lt;/span> contains &lt;span class="m">46&lt;/span> entries:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">30: &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> FUNC GLOBAL DEFAULT UND printf@GLIBC_2.2.5&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>printf&lt;/code> is an &lt;strong>undefined symbol&lt;/strong> (UND), meaning it will be resolved dynamically.&lt;/li>
&lt;/ul>
&lt;p>From &lt;code>readelf -r demo&lt;/code> (relocations):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Relocation section &lt;span class="s1">&amp;#39;.rela.plt&amp;#39;&lt;/span> at offset 0x678 contains &lt;span class="m">2&lt;/span> entries:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Offset Info Type Sym. Value Sym. Name + Addend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x3fb8 0x0000000000020007 R_X86_64_JUMP_SLOT &lt;span class="m">0&lt;/span> &lt;span class="nb">printf&lt;/span> + &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The GOT entry at &lt;code>0x3fb8&lt;/code> will hold the resolved address of &lt;code>printf&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Step 2: Use &lt;code>gdb&lt;/code> to Trace Lazy Binding&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-2-use">&lt;/span>
&lt;a href="#step-2-use" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>Run the program in GDB:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gdb ./demo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>Set a breakpoint at the PLT entry for &lt;code>printf&lt;/code>:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>(gdb) break *0x1020 # First PLT entry (for printf)
(gdb) run&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>First call to &lt;code>printf&lt;/code>:
&lt;ul>
&lt;li>The program stops at &lt;code>0x1020&lt;/code> (PLT stub).&lt;/li>
&lt;li>Step into the resolver:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>(gdb) stepi
=&amp;gt; 0x1026: pushq $0x0 # Push relocation index
(gdb) stepi
=&amp;gt; 0x102b: jmp 0x1000 # Jump to resolver (dynamic linker)&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After resolution:
&lt;ul>
&lt;li>The GOT entry at &lt;code>0x3fb8&lt;/code> is updated to &lt;code>libc&lt;/code>&amp;rsquo;s &lt;code>printf&lt;/code> address:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>(gdb) x/gx 0x3fb8
0x3fb8: 0x7ffff7e12345 # Address of printf in libc&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>&lt;strong>Step 3: Verify with &lt;code>objdump&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="step-3-verify-with">&lt;/span>
&lt;a href="#step-3-verify-with" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Disassemble the &lt;code>.plt&lt;/code> section:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump -d demo &lt;span class="p">|&lt;/span> grep -A &lt;span class="m">10&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;printf@plt&amp;gt;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>0000000000001020 &amp;lt;printf@plt&amp;gt;:
1020: ff 25 90 2f 00 00 jmpq *0x2f90(%rip) # 0x3fb8 &amp;lt;printf@got&amp;gt;
1026: 68 00 00 00 00 pushq $0x0
102b: e9 d0 ff ff ff jmpq 1000 &amp;lt;.plt&amp;gt;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The first &lt;code>jmpq&lt;/code> jumps to the GOT entry at &lt;code>0x3fb8&lt;/code>.&lt;/li>
&lt;li>The second instruction pushes the relocation index for &lt;code>printf&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>4. Summary of Lazy Binding Steps&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="4-summary-of-lazy-binding-steps">&lt;/span>
&lt;a href="#4-summary-of-lazy-binding-steps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Initial Call:&lt;/strong>&lt;br>
&lt;code>printf&lt;/code> → &lt;code>.plt&lt;/code> stub → &lt;code>.got&lt;/code> entry (points to resolver).&lt;/li>
&lt;li>&lt;strong>Resolver Invoked:&lt;/strong>&lt;br>
Resolver calls dynamic linker to resolve &lt;code>printf&lt;/code> in &lt;code>libc&lt;/code>.&lt;/li>
&lt;li>&lt;strong>GOT Updated:&lt;/strong>&lt;br>
Dynamic linker writes &lt;code>libc&lt;/code>&amp;rsquo;s &lt;code>printf&lt;/code> address to &lt;code>.got&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Subsequent Calls:&lt;/strong>&lt;br>
&lt;code>.plt&lt;/code> → &lt;code>.got&lt;/code> → &lt;code>libc&lt;/code>&amp;rsquo;s &lt;code>printf&lt;/code> directly.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3>&lt;strong>5. Why Lazy Binding Matters&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="5-why-lazy-binding-matters">&lt;/span>
&lt;a href="#5-why-lazy-binding-matters" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Performance:&lt;/strong> Avoids resolving all symbols upfront.&lt;/li>
&lt;li>&lt;strong>Memory Efficiency:&lt;/strong> Only resolves symbols that are actually used.&lt;/li>
&lt;li>&lt;strong>Security:&lt;/strong> Reduces attack surface by deferring resolution.&lt;/li>
&lt;/ul></description></item><item><title>Master Elf Sections</title><link>https://cloudedseal.github.io/blog/master-elf-sections/</link><pubDate>Wed, 30 Apr 2025 10:48:42 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-elf-sections/</guid><description>
&lt;blockquote>
&lt;p>分析环境 mint21&lt;/p>
&lt;/blockquote>
&lt;h2>ELF (linking view) 分析&lt;span class="hx-absolute -hx-mt-20" id="elf-linking-view-分析">&lt;/span>
&lt;a href="#elf-linking-view-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>一个 ELF 文件有多种 view。&lt;/li>
&lt;li>从 linking 视角来理解 sections 到底是如何工作的。&lt;/li>
&lt;li>源代码的各个不同的部分编译后都被放到了哪个 section。&lt;/li>
&lt;li>本文主要分析 rodata text data bss 这 4 个 section。&lt;/li>
&lt;/ol>
&lt;h2>示例代码&lt;span class="hx-absolute -hx-mt-20" id="示例代码">&lt;/span>
&lt;a href="#%e7%a4%ba%e4%be%8b%e4%bb%a3%e7%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>gcc -g -o demo demo.c&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://github.com/cloudedseal/elf-demo/" target="_blank" rel="noopener">编译后的各个文件&lt;/a>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">demo.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Global variable (initialized) → .data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">global_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Global variable (uninitialized) → .bss
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">global_bss&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Constant string → .rodata
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello from .rodata!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Static local variable → gcc stored in .bss (not .bss, = 0 it&amp;#39;s uninitialized)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">counter&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Counter: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Destructor function → .fini_array
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">__attribute__&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">destructor&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">finalize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Finalizing...&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Constructor function → .init_array
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">__attribute__&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">constructor&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Initializing...&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Function in .text
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Uses PLT/GOT for printf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Local static variable → stored in .data (initialized)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">local_static&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Global Data: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">global_data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Global BSS: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">global_bss&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Local Static: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">local_static&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_message&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">counter&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// Modifies static variable in .data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>readelf -h 查看基本信息&lt;span class="hx-absolute -hx-mt-20" id="readelf--h-查看基本信息">&lt;/span>
&lt;a href="#readelf--h-%e6%9f%a5%e7%9c%8b%e5%9f%ba%e6%9c%ac%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ELF Header:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Magic: 7f &lt;span class="m">45&lt;/span> 4c &lt;span class="m">46&lt;/span> &lt;span class="m">02&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Class: ELF64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data: 2&lt;span class="err">&amp;#39;&lt;/span>s complement, little endian
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>current&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OS/ABI: UNIX - System V
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ABI Version: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type: DYN &lt;span class="o">(&lt;/span>Position-Independent Executable file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Machine: Advanced Micro Devices X86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry point address: 0x1080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of program headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of section headers: &lt;span class="m">15656&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Flags: 0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of this header: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of program headers: &lt;span class="m">56&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of program headers: &lt;span class="m">13&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of section headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of section headers: &lt;span class="m">37&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Section header string table index: &lt;span class="m">36&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>header 信息&lt;/th>
&lt;th>注意&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Data: 2&amp;rsquo;s complement, &lt;code>little endian&lt;/code>&lt;/td>
&lt;td>注意: 使用的是小端。数据高位在高地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Number of section headers: 37&lt;/td>
&lt;td>一共 37 个 section&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>readelf -t (Display the section details)&lt;span class="hx-absolute -hx-mt-20" id="readelf--t-display-the-section-details">&lt;/span>
&lt;a href="#readelf--t-display-the-section-details" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">There are &lt;span class="m">37&lt;/span> section headers, starting at offset 0x3d28:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Nr&lt;span class="o">]&lt;/span> Name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type Address Offset Link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size EntSize Info Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Flags
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NULL &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> .interp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000318&lt;/span> &lt;span class="m">0000000000000318&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000001c &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 2&lt;span class="o">]&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE &lt;span class="m">0000000000000338&lt;/span> &lt;span class="m">0000000000000338&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 3&lt;span class="o">]&lt;/span> .note.gnu.build-id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE &lt;span class="m">0000000000000368&lt;/span> &lt;span class="m">0000000000000368&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000024&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 4&lt;span class="o">]&lt;/span> .note.ABI-tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE 000000000000038c 000000000000038c &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 5&lt;span class="o">]&lt;/span> .gnu.hash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_HASH 00000000000003b0 00000000000003b0 &lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000024&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 6&lt;span class="o">]&lt;/span> .dynsym
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DYNSYM 00000000000003d8 00000000000003d8 &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000c0 &lt;span class="m">0000000000000018&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 7&lt;span class="o">]&lt;/span> .dynstr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> STRTAB &lt;span class="m">0000000000000498&lt;/span> &lt;span class="m">0000000000000498&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000094&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 8&lt;span class="o">]&lt;/span> .gnu.version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VERSYM 000000000000052c 000000000000052c &lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000002&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 9&lt;span class="o">]&lt;/span> .gnu.version_r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VERNEED &lt;span class="m">0000000000000540&lt;/span> &lt;span class="m">0000000000000540&lt;/span> &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>10&lt;span class="o">]&lt;/span> .rela.dyn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RELA &lt;span class="m">0000000000000570&lt;/span> &lt;span class="m">0000000000000570&lt;/span> &lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000108&lt;/span> &lt;span class="m">0000000000000018&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>11&lt;span class="o">]&lt;/span> .rela.plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RELA &lt;span class="m">0000000000000678&lt;/span> &lt;span class="m">0000000000000678&lt;/span> &lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000018&lt;/span> &lt;span class="m">24&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000042&lt;span class="o">]&lt;/span>: ALLOC, INFO LINK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>12&lt;span class="o">]&lt;/span> .init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000001000&lt;/span> &lt;span class="m">0000000000001000&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000001b &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>13&lt;span class="o">]&lt;/span> .plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000001020&lt;/span> &lt;span class="m">0000000000001020&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>14&lt;span class="o">]&lt;/span> .plt.got
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000001050&lt;/span> &lt;span class="m">0000000000001050&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>15&lt;span class="o">]&lt;/span> .plt.sec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000001060&lt;/span> &lt;span class="m">0000000000001060&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>16&lt;span class="o">]&lt;/span> .text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000001080&lt;/span> &lt;span class="m">0000000000001080&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001fb &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>17&lt;span class="o">]&lt;/span> .fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS 000000000000127c 000000000000127c &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000000d &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000006&lt;span class="o">]&lt;/span>: ALLOC, EXEC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>18&lt;span class="o">]&lt;/span> .rodata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000002000&lt;/span> &lt;span class="m">0000000000002000&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000076&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>19&lt;span class="o">]&lt;/span> .eh_frame_hdr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000002078&lt;/span> &lt;span class="m">0000000000002078&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000054&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>20&lt;span class="o">]&lt;/span> .eh_frame
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS 00000000000020d0 00000000000020d0 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000012c &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000002&lt;span class="o">]&lt;/span>: ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>21&lt;span class="o">]&lt;/span> .init_array
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> INIT_ARRAY 0000000000003da0 0000000000002da0 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000008&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>22&lt;span class="o">]&lt;/span> .fini_array
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FINI_ARRAY 0000000000003db0 0000000000002db0 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000008&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>23&lt;span class="o">]&lt;/span> .dynamic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DYNAMIC 0000000000003dc0 0000000000002dc0 &lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001f0 &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>24&lt;span class="o">]&lt;/span> .got
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS 0000000000003fb0 0000000000002fb0 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000050&lt;/span> &lt;span class="m">0000000000000008&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>25&lt;span class="o">]&lt;/span> .data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000004000&lt;/span> &lt;span class="m">0000000000003000&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>26&lt;span class="o">]&lt;/span> .bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOBITS &lt;span class="m">0000000000004020&lt;/span> &lt;span class="m">0000000000003020&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000003&lt;span class="o">]&lt;/span>: WRITE, ALLOC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>27&lt;span class="o">]&lt;/span> .comment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000003020&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000002b &lt;span class="m">0000000000000001&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000030&lt;span class="o">]&lt;/span>: MERGE, STRINGS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>28&lt;span class="o">]&lt;/span> .debug_aranges
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> 000000000000304b &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>29&lt;span class="o">]&lt;/span> .debug_info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> 000000000000307b &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001ae &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>30&lt;span class="o">]&lt;/span> .debug_abbrev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000003229&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000e8 &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>31&lt;span class="o">]&lt;/span> .debug_line
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000003311&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000a2 &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>32&lt;span class="o">]&lt;/span> .debug_str
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> 00000000000033b3 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000013e &lt;span class="m">0000000000000001&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000030&lt;span class="o">]&lt;/span>: MERGE, STRINGS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>33&lt;span class="o">]&lt;/span> .debug_line_str
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PROGBITS &lt;span class="m">0000000000000000&lt;/span> 00000000000034f1 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000001&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000030&lt;span class="o">]&lt;/span>: MERGE, STRINGS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>34&lt;span class="o">]&lt;/span> .symtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SYMTAB &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000003528&lt;/span> &lt;span class="m">35&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000450&lt;/span> &lt;span class="m">0000000000000018&lt;/span> &lt;span class="m">20&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>35&lt;span class="o">]&lt;/span> .strtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> STRTAB &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000003978&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000245&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>36&lt;span class="o">]&lt;/span> .shstrtab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> STRTAB &lt;span class="m">0000000000000000&lt;/span> 0000000000003bbd &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000016a &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>0000000000000000&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>readelf -S (section headers)&lt;span class="hx-absolute -hx-mt-20" id="readelf--s-section-headers">&lt;/span>
&lt;a href="#readelf--s-section-headers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">There are &lt;span class="m">37&lt;/span> section headers, starting at offset 0x3d28:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Nr&lt;span class="o">]&lt;/span> Name Type Address Offset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size EntSize Flags Link Info Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 0&lt;span class="o">]&lt;/span> NULL &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> .interp PROGBITS &lt;span class="m">0000000000000318&lt;/span> &lt;span class="m">00000318&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000001c &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 2&lt;span class="o">]&lt;/span> .note.gnu.pr&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span> NOTE &lt;span class="m">0000000000000338&lt;/span> &lt;span class="m">00000338&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 3&lt;span class="o">]&lt;/span> .note.gnu.bu&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span> NOTE &lt;span class="m">0000000000000368&lt;/span> &lt;span class="m">00000368&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000024&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 4&lt;span class="o">]&lt;/span> .note.ABI-tag NOTE 000000000000038c 0000038c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 5&lt;span class="o">]&lt;/span> .gnu.hash GNU_HASH 00000000000003b0 000003b0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000024&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">6&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 6&lt;span class="o">]&lt;/span> .dynsym DYNSYM 00000000000003d8 000003d8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000c0 &lt;span class="m">0000000000000018&lt;/span> A &lt;span class="m">7&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 7&lt;span class="o">]&lt;/span> .dynstr STRTAB &lt;span class="m">0000000000000498&lt;/span> &lt;span class="m">00000498&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000094&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 8&lt;span class="o">]&lt;/span> .gnu.version VERSYM 000000000000052c 0000052c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000002&lt;/span> A &lt;span class="m">6&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 9&lt;span class="o">]&lt;/span> .gnu.version_r VERNEED &lt;span class="m">0000000000000540&lt;/span> &lt;span class="m">00000540&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">7&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>10&lt;span class="o">]&lt;/span> .rela.dyn RELA &lt;span class="m">0000000000000570&lt;/span> &lt;span class="m">00000570&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000108&lt;/span> &lt;span class="m">0000000000000018&lt;/span> A &lt;span class="m">6&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>11&lt;span class="o">]&lt;/span> .rela.plt RELA &lt;span class="m">0000000000000678&lt;/span> &lt;span class="m">00000678&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000018&lt;/span> AI &lt;span class="m">6&lt;/span> &lt;span class="m">24&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>12&lt;span class="o">]&lt;/span> .init PROGBITS &lt;span class="m">0000000000001000&lt;/span> &lt;span class="m">00001000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000001b &lt;span class="m">0000000000000000&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>13&lt;span class="o">]&lt;/span> .plt PROGBITS &lt;span class="m">0000000000001020&lt;/span> &lt;span class="m">00001020&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000010&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>14&lt;span class="o">]&lt;/span> .plt.got PROGBITS &lt;span class="m">0000000000001050&lt;/span> &lt;span class="m">00001050&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000010&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>15&lt;span class="o">]&lt;/span> .plt.sec PROGBITS &lt;span class="m">0000000000001060&lt;/span> &lt;span class="m">00001060&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000010&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>16&lt;span class="o">]&lt;/span> .text PROGBITS &lt;span class="m">0000000000001080&lt;/span> &lt;span class="m">00001080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001fb &lt;span class="m">0000000000000000&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>17&lt;span class="o">]&lt;/span> .fini PROGBITS 000000000000127c 0000127c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000000d &lt;span class="m">0000000000000000&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>18&lt;span class="o">]&lt;/span> .rodata PROGBITS &lt;span class="m">0000000000002000&lt;/span> &lt;span class="m">00002000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000076&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>19&lt;span class="o">]&lt;/span> .eh_frame_hdr PROGBITS &lt;span class="m">0000000000002078&lt;/span> &lt;span class="m">00002078&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000054&lt;/span> &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>20&lt;span class="o">]&lt;/span> .eh_frame PROGBITS 00000000000020d0 000020d0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000012c &lt;span class="m">0000000000000000&lt;/span> A &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>21&lt;span class="o">]&lt;/span> .init_array INIT_ARRAY 0000000000003da0 00002da0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000008&lt;/span> WA &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>22&lt;span class="o">]&lt;/span> .fini_array FINI_ARRAY 0000000000003db0 00002db0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000008&lt;/span> WA &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>23&lt;span class="o">]&lt;/span> .dynamic DYNAMIC 0000000000003dc0 00002dc0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001f0 &lt;span class="m">0000000000000010&lt;/span> WA &lt;span class="m">7&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>24&lt;span class="o">]&lt;/span> .got PROGBITS 0000000000003fb0 00002fb0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000050&lt;/span> &lt;span class="m">0000000000000008&lt;/span> WA &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>25&lt;span class="o">]&lt;/span> .data PROGBITS &lt;span class="m">0000000000004000&lt;/span> &lt;span class="m">00003000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000020&lt;/span> &lt;span class="m">0000000000000000&lt;/span> WA &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>26&lt;span class="o">]&lt;/span> .bss NOBITS &lt;span class="m">0000000000004020&lt;/span> &lt;span class="m">00003020&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000010&lt;/span> &lt;span class="m">0000000000000000&lt;/span> WA &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>27&lt;span class="o">]&lt;/span> .comment PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00003020&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000002b &lt;span class="m">0000000000000001&lt;/span> MS &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>28&lt;span class="o">]&lt;/span> .debug_aranges PROGBITS &lt;span class="m">0000000000000000&lt;/span> 0000304b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>29&lt;span class="o">]&lt;/span> .debug_info PROGBITS &lt;span class="m">0000000000000000&lt;/span> 0000307b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001ae &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>30&lt;span class="o">]&lt;/span> .debug_abbrev PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00003229&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000e8 &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>31&lt;span class="o">]&lt;/span> .debug_line PROGBITS &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00003311&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000000a2 &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>32&lt;span class="o">]&lt;/span> .debug_str PROGBITS &lt;span class="m">0000000000000000&lt;/span> 000033b3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000013e &lt;span class="m">0000000000000001&lt;/span> MS &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>33&lt;span class="o">]&lt;/span> .debug_line_str PROGBITS &lt;span class="m">0000000000000000&lt;/span> 000034f1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000030&lt;/span> &lt;span class="m">0000000000000001&lt;/span> MS &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>34&lt;span class="o">]&lt;/span> .symtab SYMTAB &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00003528&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000450&lt;/span> &lt;span class="m">0000000000000018&lt;/span> &lt;span class="m">35&lt;/span> &lt;span class="m">20&lt;/span> &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>35&lt;span class="o">]&lt;/span> .strtab STRTAB &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00003978&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0000000000000245&lt;/span> &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>36&lt;span class="o">]&lt;/span> .shstrtab STRTAB &lt;span class="m">0000000000000000&lt;/span> 00003bbd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 000000000000016a &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Key to Flags:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> W &lt;span class="o">(&lt;/span>write&lt;span class="o">)&lt;/span>, A &lt;span class="o">(&lt;/span>alloc&lt;span class="o">)&lt;/span>, X &lt;span class="o">(&lt;/span>execute&lt;span class="o">)&lt;/span>, M &lt;span class="o">(&lt;/span>merge&lt;span class="o">)&lt;/span>, S &lt;span class="o">(&lt;/span>strings&lt;span class="o">)&lt;/span>, I &lt;span class="o">(&lt;/span>info&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> L &lt;span class="o">(&lt;/span>link order&lt;span class="o">)&lt;/span>, O &lt;span class="o">(&lt;/span>extra OS processing required&lt;span class="o">)&lt;/span>, G &lt;span class="o">(&lt;/span>group&lt;span class="o">)&lt;/span>, T &lt;span class="o">(&lt;/span>TLS&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C &lt;span class="o">(&lt;/span>compressed&lt;span class="o">)&lt;/span>, x &lt;span class="o">(&lt;/span>unknown&lt;span class="o">)&lt;/span>, o &lt;span class="o">(&lt;/span>OS specific&lt;span class="o">)&lt;/span>, E &lt;span class="o">(&lt;/span>exclude&lt;span class="o">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> D &lt;span class="o">(&lt;/span>mbind&lt;span class="o">)&lt;/span>, l &lt;span class="o">(&lt;/span>large&lt;span class="o">)&lt;/span>, p &lt;span class="o">(&lt;/span>processor specific&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>&lt;code>.data&lt;/code> section 分析&lt;span class="hx-absolute -hx-mt-20" id="data-section-分析">&lt;/span>
&lt;a href="#data-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[25] .data PROGBITS 0000000000004000 00003000
0000000000000020 0000000000000000 WA 0 0 8&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>.data section 字段解释&lt;span class="hx-absolute -hx-mt-20" id="data-section-字段解释">&lt;/span>
&lt;a href="#data-section-%e5%ad%97%e6%ae%b5%e8%a7%a3%e9%87%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>[25]&lt;/strong>&lt;/td>
&lt;td>Section Index&lt;/td>
&lt;td>The &lt;code>25th section&lt;/code> in the ELF file. Used internally by tools like &lt;code>readelf&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>.data&lt;/strong>&lt;/td>
&lt;td>Section Name&lt;/td>
&lt;td>Holds &lt;strong>initialized global/static variables&lt;/strong> (e.g., &lt;code>global_data&lt;/code>, &lt;code>local_static&lt;/code>, &lt;code>message&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PROGBITS&lt;/strong>&lt;/td>
&lt;td>Section Type&lt;/td>
&lt;td>Contains raw data (code, initialized data) stored in the file. Not dynamically generated at runtime.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000004000&lt;/strong>&lt;/td>
&lt;td>&lt;code>Virtual Address (VA)&lt;/code>&lt;/td>
&lt;td>At &lt;code>runtime&lt;/code>, this section will be mapped to virtual address &lt;code>0x4000&lt;/code> in memory.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>00003000&lt;/strong>&lt;/td>
&lt;td>File Offset&lt;/td>
&lt;td>In the file (&lt;code>demo&lt;/code>), this section starts at byte offset &lt;code>0x3000&lt;/code> (12288 in decimal).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000000020&lt;/strong>&lt;/td>
&lt;td>Size&lt;/td>
&lt;td>Size of the section in bytes: &lt;code>0x20&lt;/code> (32 bytes). Spans from &lt;code>0x3000&lt;/code> to &lt;code>0x3020&lt;/code> in the file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000000000&lt;/strong>&lt;/td>
&lt;td>Entry Size (EntSize)&lt;/td>
&lt;td>If the section contains fixed-size entries (e.g., symbol tables), this specifies their size. Here it’s &lt;code>0&lt;/code> → no fixed-size entries.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>WA&lt;/strong>&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>Section attributes: &lt;br/>&lt;code>W&lt;/code> = &lt;strong>Writable&lt;/strong> (memory can be modified at runtime).&lt;br> A = &lt;strong>Allocated&lt;/strong> (&lt;code>loaded&lt;/code> into memory during execution). &lt;br/> No &lt;code>X&lt;/code> → this section is not executable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0&lt;/strong>&lt;/td>
&lt;td>Link&lt;/td>
&lt;td>Relates to other sections; used for symbol tables or relocation (value &lt;code>0&lt;/code> here = unused).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0&lt;/strong>&lt;/td>
&lt;td>Info&lt;/td>
&lt;td>Extra information (e.g., section index of related section); unused here.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>8&lt;/strong>&lt;/td>
&lt;td>Alignment&lt;/td>
&lt;td>Memory alignment requirement: must start at an address divisible by &lt;code>8&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways">&lt;/span>
&lt;a href="#key-takeaways" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Virtual Address (VA): &lt;code>0x4000&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>At &lt;code>runtime&lt;/code>, the &lt;code>.data&lt;/code> section is mapped to virtual address &lt;code>0x4000&lt;/code>.&lt;/li>
&lt;li>This is a &lt;strong>runtime memory address&lt;/strong>, not a file offset.&lt;/li>
&lt;li>Example: Your &lt;code>message&lt;/code> variable is located at &lt;code>0x4000 + 0x18 = 0x4018&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>File Offset: &lt;code>0x3000&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>In the file (&lt;code>demo&lt;/code>), the &lt;code>.data&lt;/code> section starts at byte &lt;code>12288&lt;/code> (hex &lt;code>0x3000&lt;/code>).&lt;/li>
&lt;li>Since the file size is &lt;strong>16320 bytes (~0x4000)&lt;/strong>, this offset is valid.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Size: &lt;code>0x20&lt;/code> (32 bytes)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The section spans 32 bytes on disk (&lt;code>0x3000&lt;/code> to &lt;code>0x3020&lt;/code>) and in memory (&lt;code>0x4000&lt;/code> to &lt;code>0x4020&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Flags: &lt;code>WA&lt;/code> (Writable + Allocated)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The OS loads this section into memory with &lt;strong>write permissions&lt;/strong>.&lt;/li>
&lt;li>You can modify variables like &lt;code>global_data&lt;/code> at runtime.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Alignment: &lt;code>8&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Ensures efficient memory access by aligning the section to 8-byte boundaries.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>查看 demo 中 0x3000(.data) 后 &lt;code>0x20&lt;/code>(32) 字节的内容&lt;span class="hx-absolute -hx-mt-20" id="查看-demo-中-0x3000data-后-0x2032-字节的内容">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b-demo-%e4%b8%ad-0x3000data-%e5%90%8e-0x2032-%e5%ad%97%e8%8a%82%e7%9a%84%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd -l &lt;span class="m">32&lt;/span> -s 0x3000 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003000: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0840&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> .........@......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003010: 2a00 &lt;span class="m">0000&lt;/span> &lt;span class="m">6400&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0420&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> *...d.... ......&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>global variable 之 message 分析&lt;span class="hx-absolute -hx-mt-20" id="global-variable-之-message-分析">&lt;/span>
&lt;a href="#global-variable-%e4%b9%8b-message-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello from .rodata!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>&lt;code>message&lt;/code> 符号信息&lt;span class="hx-absolute -hx-mt-20" id="message-符号信息">&lt;/span>
&lt;a href="#message-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004018&lt;/span> D message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011d3 T print_message&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>message&lt;/code> is a pointer variable stored in .data.&lt;/li>
&lt;li>&lt;code>message&lt;/code> virtual address = 0x4018&lt;/li>
&lt;li>&lt;code>data section&lt;/code> 中的 virtual address,&lt;/li>
&lt;li>&lt;code>message&lt;/code> offset = VA(message) - VA(start of .data) = 0x4018 - 0x4000 = 0x18&lt;/li>
&lt;li>&lt;code>message&lt;/code> 这个 global variable 的指针在 &lt;code>demo&lt;/code> 的 offset 是 0x000003000 + 0x18 = 0x3018&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>可知 0x3018 处 8 字节的内容为 &lt;code>0420 0000 0000 0000&lt;/code>&lt;/li>
&lt;li>ELF 小端存储, 所以值为 &lt;code>0x2004&lt;/code>, 这就是 &lt;code>message&lt;/code> 变量的值&lt;/li>
&lt;/ol>
&lt;h4>查找 &lt;code>message&lt;/code> 字符串内容&lt;span class="hx-absolute -hx-mt-20" id="查找-message-字符串内容">&lt;/span>
&lt;a href="#%e6%9f%a5%e6%89%be-message-%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd demo &lt;span class="p">|&lt;/span> grep -A &lt;span class="m">1&lt;/span> &lt;span class="s2">&amp;#34;Hello from&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002000: &lt;span class="m">0100&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">4865&lt;/span> 6c6c 6f20 &lt;span class="m">6672&lt;/span> 6f6d 202e ....Hello from .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002010: 726f &lt;span class="m">6461&lt;/span> &lt;span class="m">7461&lt;/span> &lt;span class="m">2100&lt;/span> 436f 756e &lt;span class="m">7465&lt;/span> 723a rodata!.Counter:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>可知 &lt;code>Hello from .rodata!&lt;/code> 这一串字符所在文件 offset = &lt;code>0x00002004&lt;/code>&lt;/li>
&lt;li>这就是 data section 中 global variable &lt;code>message&lt;/code> 所指向的字符串&lt;/li>
&lt;/ol>
&lt;h4>查找 &lt;code>message&lt;/code> 字符串内容在何处?&lt;span class="hx-absolute -hx-mt-20" id="查找-message-字符串内容在何处">&lt;/span>
&lt;a href="#%e6%9f%a5%e6%89%be-message-%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%86%85%e5%ae%b9%e5%9c%a8%e4%bd%95%e5%a4%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>在 .rodata 只读数据 section 中&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> [18] .rodata PROGBITS 0000000000002000 00002000
0000000000000076 0000000000000000 A 0 0 4&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>initialized global variable&lt;/code> 之 global_data&lt;span class="hx-absolute -hx-mt-20" id="initialized-global-variable-之-global_data">&lt;/span>
&lt;a href="#initialized-global-variable-%e4%b9%8b-global_data" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>global_data 符号信息&lt;span class="hx-absolute -hx-mt-20" id="global_data-符号信息">&lt;/span>
&lt;a href="#global_data-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep global_data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004010&lt;/span> D global_data&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">00003000: 0000 0000 0000 0000 0840 0000 0000 0000 .........@......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00003010: 2a00 0000 6400 0000 0420 0000 0000 0000 *...d.... ......&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>global_data&lt;/code> offset = VA(message) - VA(start of .data) = 0x4010 - 0x4000 = 0x10&lt;/li>
&lt;li>&lt;code>global_data&lt;/code> 这个 global variable 的指针在 &lt;code>demo&lt;/code> 的 offset 是 0x000003000 + 0x10 = 0x3010&lt;/li>
&lt;li>int global_data 为 4bytes。&lt;code>2a00 0000&lt;/code> 转为小端 0x0000002a, 就是 42&lt;/li>
&lt;/ul>
&lt;h4>替换 global_data 的值&lt;span class="hx-absolute -hx-mt-20" id="替换-global_data-的值">&lt;/span>
&lt;a href="#%e6%9b%bf%e6%8d%a2-global_data-%e7%9a%84%e5%80%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>使用脚本&lt;a href="https://github.com/cloudedseal/elf-demo/blob/main/update.sh" target="_blank" rel="noopener">update.sh&lt;/a>&lt;/p>
&lt;h5>操纵 demo 文件中 offset = 0x3010 这 1 个 byte。🤣&lt;span class="hx-absolute -hx-mt-20" id="操纵-demo-文件中-offset--0x3010-这-1-个-byte">&lt;/span>
&lt;a href="#%e6%93%8d%e7%ba%b5-demo-%e6%96%87%e4%bb%b6%e4%b8%ad-offset--0x3010-%e8%bf%99-1-%e4%b8%aa-byte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>global_data 重新设置为 0xff&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from .rodata!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./update.sh demo 0x3010 0xff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">12304&lt;/span> &lt;span class="o">(&lt;/span>0x3010&lt;span class="o">)&lt;/span> to 0xff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">255&lt;/span> &lt;span class="c1">#🤣🤣🤣，这就是逆向。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from .rodata!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>操纵 demo 文件中 offset = (0x3010,0x3013) 这 4 个 byte。🤣&lt;span class="hx-absolute -hx-mt-20" id="操纵-demo-文件中-offset--0x30100x3013-这-4-个-byte">&lt;/span>
&lt;a href="#%e6%93%8d%e7%ba%b5-demo-%e6%96%87%e4%bb%b6%e4%b8%ad-offset--0x30100x3013-%e8%bf%99-4-%e4%b8%aa-byte" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>global_data 重新设置为 0x12345678, 注意是小端。高位高地址&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./update.sh demo 0x3010 0x78
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">12304&lt;/span> &lt;span class="o">(&lt;/span>0x3010&lt;span class="o">)&lt;/span> to 0x78
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./update.sh demo 0x3011 0x56
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">12305&lt;/span> &lt;span class="o">(&lt;/span>0x3011&lt;span class="o">)&lt;/span> to 0x56
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./update.sh demo 0x3012 0x34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">12306&lt;/span> &lt;span class="o">(&lt;/span>0x3012&lt;span class="o">)&lt;/span> to 0x34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./update.sh demo 0x3013 0x12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">12307&lt;/span> &lt;span class="o">(&lt;/span>0x3013&lt;span class="o">)&lt;/span> to 0x12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">305419896&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from .rodata!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>.data section 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="data-section-总结">&lt;/span>
&lt;a href="#data-section-%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Section&lt;/th>
&lt;th>File Offset&lt;/th>
&lt;th>Size (Bytes)&lt;/th>
&lt;th>Virtual Address&lt;/th>
&lt;th>Runtime Permissions&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>.data&lt;/code>&lt;/td>
&lt;td>&lt;code>0x3000&lt;/code>&lt;/td>
&lt;td>&lt;code>0x20&lt;/code> (32)&lt;/td>
&lt;td>&lt;code>0x4000&lt;/code>&lt;/td>
&lt;td>Writable + Allocated (&lt;code>WA&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>&lt;code>.bss&lt;/code> section 分析&lt;span class="hx-absolute -hx-mt-20" id="bss-section-分析">&lt;/span>
&lt;a href="#bss-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[26] .bss NOBITS 0000000000004020 00003020
0000000000000010 0000000000000000 WA 0 0 4&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>.bss section 字段解释&lt;span class="hx-absolute -hx-mt-20" id="bss-section-字段解释">&lt;/span>
&lt;a href="#bss-section-%e5%ad%97%e6%ae%b5%e8%a7%a3%e9%87%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>[26]&lt;/strong>&lt;/td>
&lt;td>Section Index&lt;/td>
&lt;td>The 26th section in the ELF file. Tools use this internally.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>.bss&lt;/strong>&lt;/td>
&lt;td>Section Name&lt;/td>
&lt;td>Stands for &lt;strong>Block Started by Symbol&lt;/strong>. Holds &lt;strong>uninitialized global/static variables&lt;/strong> (e.g., &lt;code>global_bss&lt;/code>, &lt;code>count.1&lt;/code> in your code).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>NOBITS&lt;/strong>&lt;/td>
&lt;td>Section Type&lt;/td>
&lt;td>Indicates this section does &lt;strong>not occupy space in the file&lt;/strong> (&lt;code>NOBITS&lt;/code> = no bytes on disk). Memory is allocated at runtime and initialized to zero.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000004020&lt;/strong>&lt;/td>
&lt;td>Virtual Address (VA)&lt;/td>
&lt;td>At runtime, this section will be mapped to virtual address &lt;code>0x4020&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>00003020&lt;/strong>&lt;/td>
&lt;td>File Offset&lt;/td>
&lt;td>In the file (&lt;code>demo&lt;/code>), this section starts at byte &lt;code>0x3020&lt;/code>. Since it’s &lt;code>NOBITS&lt;/code>, this value is &lt;strong>unused&lt;/strong> (placeholder for alignment/padding).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000000010&lt;/strong>&lt;/td>
&lt;td>Size&lt;/td>
&lt;td>Size of the section &lt;strong>in memory&lt;/strong>: &lt;code>0x10&lt;/code> (16 bytes). The OS allocates this much zeroed memory &lt;code>at runtime&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0000000000000000&lt;/strong>&lt;/td>
&lt;td>Entry Size (EntSize)&lt;/td>
&lt;td>Not applicable here; set to &lt;code>0&lt;/code> because &lt;code>.bss&lt;/code> contains no fixed-size entries.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>WA&lt;/strong>&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>Section attributes: &lt;br/>&lt;code>W&lt;/code> = &lt;strong>Writable&lt;/strong> (variables can be modified at runtime).&lt;br/> &lt;code>A&lt;/code> = &lt;strong>Allocated&lt;/strong> (memory is reserved at runtime). &lt;br/> No &lt;code>X&lt;/code> → not executable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0&lt;/strong>&lt;/td>
&lt;td>Link&lt;/td>
&lt;td>Relates to other sections; unused here.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>0&lt;/strong>&lt;/td>
&lt;td>Info&lt;/td>
&lt;td>Extra metadata; unused here.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>4&lt;/strong>&lt;/td>
&lt;td>Alignment&lt;/td>
&lt;td>Must start at an address divisible by &lt;code>4&lt;/code> in memory.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways-1">&lt;/span>
&lt;a href="#key-takeaways-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Purpose of &lt;code>.bss&lt;/code>&lt;/strong>&lt;br>
Stores &lt;strong>uninitialized global/static variables&lt;/strong>, such as:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">global_bss&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Uninitialized global variable
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="mf">.1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Static local variable in `counter()`
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>These are zeroed out at runtime.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>No Space in File (&lt;code>NOBITS&lt;/code>)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Unlike &lt;code>.data&lt;/code>, &lt;code>.bss&lt;/code> does &lt;strong>not store values in the file&lt;/strong>. 🤔 不占用存储空间&lt;/li>
&lt;li>The OS allocates and initializes this section to zero during program startup.&lt;/li>
&lt;li>Saves disk space: zero-filled regions don’t need explicit storage.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Runtime Allocation&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Virtual Address: &lt;code>0x4020&lt;/code> (where &lt;code>.bss&lt;/code> lives in memory).&lt;/li>
&lt;li>Size: &lt;code>0x10&lt;/code> (16 bytes) → covers all uninitialized variables.&lt;/li>
&lt;li>Example: &lt;code>global_bss&lt;/code> is 4 bytes and &lt;code>count.1&lt;/code> is 4 bytes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Flags: &lt;code>WA&lt;/code> (Writable + Allocated)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Writable: Variables like &lt;code>global_bss&lt;/code> can be modified at runtime.&lt;/li>
&lt;li>Allocated: Reserved in memory, but not stored in the file.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>File Offset: &lt;code>0x3020&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Exists only for padding/alignment in the file.&lt;/li>
&lt;li>Ignored by the OS because &lt;code>.bss&lt;/code> is &lt;code>NOBITS&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Alignment: &lt;code>4&lt;/code>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Ensures efficient memory access by aligning the section to 4-byte boundaries.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>Why &lt;code>.bss&lt;/code> Is Efficient&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why">&lt;/span>
&lt;a href="#why" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Disk Space&lt;/strong>: Does not duplicate zeros in the file (saves space).&lt;/li>
&lt;li>&lt;strong>Memory&lt;/strong>: Zeroed at runtime by the OS using &lt;code>calloc&lt;/code>-like behavior.&lt;/li>
&lt;li>&lt;strong>Security&lt;/strong>: Prevents leaking old memory contents (ensures clean state).&lt;/li>
&lt;/ul>
&lt;h3>&lt;code>uninitialized global variable&lt;/code> 之 global_bss&lt;span class="hx-absolute -hx-mt-20" id="uninitialized-global-variable-之-global_bss">&lt;/span>
&lt;a href="#uninitialized-global-variable-%e4%b9%8b-global_bss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>global_bss 符号信息&lt;span class="hx-absolute -hx-mt-20" id="global_bss-符号信息">&lt;/span>
&lt;a href="#global_bss-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep global_bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004024&lt;/span> B global_bss&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>uninitialized static local variable&lt;/code> 之 count&lt;span class="hx-absolute -hx-mt-20" id="uninitialized-static-local-variable-之-count">&lt;/span>
&lt;a href="#uninitialized-static-local-variable-%e4%b9%8b-count" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>count 符号信息&lt;span class="hx-absolute -hx-mt-20" id="count-符号信息">&lt;/span>
&lt;a href="#count-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep count.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000004028&lt;/span> b count.1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>不占用存储空间的 bss&lt;span class="hx-absolute -hx-mt-20" id="不占用存储空间的-bss">&lt;/span>
&lt;a href="#%e4%b8%8d%e5%8d%a0%e7%94%a8%e5%ad%98%e5%82%a8%e7%a9%ba%e9%97%b4%e7%9a%84-bss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> [25] .data PROGBITS 0000000000004000 00003000
0000000000000020 0000000000000000 WA 0 0 8
[26] .bss NOBITS 0000000000004020 00003020
0000000000000010 0000000000000000 WA 0 0 4
[27] .comment PROGBITS 0000000000000000 00003020
000000000000002b 0000000000000001 MS 0 0 1&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>demo 中 25、26、27 三个 section 布局&lt;span class="hx-absolute -hx-mt-20" id="demo-中-252627-三个-section-布局">&lt;/span>
&lt;a href="#demo-%e4%b8%ad-252627-%e4%b8%89%e4%b8%aa-section-%e5%b8%83%e5%b1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="cl">+---------------------+ 0x3000 (start of .data)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 0x20(32 bytes)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------+ 0x3020 (end of .bss, start of .bss, end of .bss, start of .comment)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 0x2b(42 bytes)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---------------------+ 0x304b (end of .comment)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>.bss section 在 demo 中不占实际的存储空间&lt;/p>
&lt;/blockquote>
&lt;h3>&lt;strong>.bss section 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="bss-section-总结">&lt;/span>
&lt;a href="#bss-section-%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Section&lt;/th>
&lt;th>File Offset&lt;/th>
&lt;th>Size (Bytes)&lt;/th>
&lt;th>Virtual Address&lt;/th>
&lt;th>Runtime Permissions&lt;/th>
&lt;th>Content Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>.bss&lt;/code>&lt;/td>
&lt;td>&lt;code>0x3020&lt;/code>&lt;/td>
&lt;td>&lt;code>0x0&lt;/code> (no bits stored)&lt;/td>
&lt;td>&lt;code>0x4020&lt;/code>&lt;/td>
&lt;td>Writable + Allocated (&lt;code>WA&lt;/code>)&lt;/td>
&lt;td>Uninitialized variables (&lt;code>zeroed at runtime&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>&lt;code>.text&lt;/code> section 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-分析">&lt;/span>
&lt;a href="#text-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;strong>.text 字段解释&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="text-字段解释">&lt;/span>
&lt;a href="#text-%e5%ad%97%e6%ae%b5%e8%a7%a3%e9%87%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>[16]&lt;/strong>&lt;/td>
&lt;td>Section index&lt;/td>
&lt;td>&lt;code>.text&lt;/code> is the 16th section in the ELF file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.text&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Section name&lt;/td>
&lt;td>Contains &lt;strong>machine code&lt;/strong> (compiled functions).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>PROGBITS&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Section type&lt;/td>
&lt;td>Data is stored in the file (not &lt;code>NOBITS&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0000000000001080&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Virtual Address (VA)&lt;/strong>&lt;/td>
&lt;td>This section is mapped to virtual address &lt;code>0x1080&lt;/code> (relative to the randomized PIE base address).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>00001080&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>File Offset&lt;/strong>&lt;/td>
&lt;td>Start of the &lt;code>.text&lt;/code> section in the file: byte &lt;code>0x1080&lt;/code> (4224 in decimal).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>00000000000001fb&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>Size of the &lt;code>.text&lt;/code> section: &lt;code>0x1fb&lt;/code> bytes (507 bytes).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0000000000000000&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Entry Size (&lt;code>EntSize&lt;/code>)&lt;/strong>&lt;/td>
&lt;td>Not used for &lt;code>.text&lt;/code> (applies to sections with fixed-size entries, like &lt;code>.symtab&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>AX&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>Section attributes: &lt;br/> &lt;code>A&lt;/code> = &lt;strong>Allocated&lt;/strong> (loaded into memory). &lt;br/> &lt;code>X&lt;/code> = &lt;strong>Executable&lt;/strong> (code can run as machine instructions).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Link&lt;/td>
&lt;td>Unused for &lt;code>.text&lt;/code> (used for symbol tables).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Info&lt;/td>
&lt;td>Unused for &lt;code>.text&lt;/code> (used for &lt;code>.text&lt;/code> with extra metadata).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>16&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Alignment&lt;/td>
&lt;td>Must be aligned to a &lt;strong>16-byte boundary&lt;/strong> in memory.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Virtual Address = &lt;code>0000000000001080&lt;/code> 和 readelf -h 查看的 entry point address 一致&lt;/p>
&lt;h3>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways-2">&lt;/span>
&lt;a href="#key-takeaways-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Purpose of &lt;code>.text&lt;/code>&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Contains &lt;strong>compiled machine code&lt;/strong> (e.g., &lt;code>main()&lt;/code>, &lt;code>counter()&lt;/code>, &lt;code>print_message()&lt;/code>).&lt;/li>
&lt;li>Stored in the file and loaded into memory as executable code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Virtual Address (VA)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>At runtime, the &lt;code>.text&lt;/code> section starts at virtual address &lt;code>0x1080&lt;/code> (relative to the base address chosen by ASLR).&lt;/li>
&lt;li>Example: If the base address is &lt;code>0x555555554000&lt;/code>, &lt;code>.text&lt;/code> starts at &lt;code>0x555555555080&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>File Offset&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>In the file (&lt;code>demo&lt;/code>), &lt;code>.text&lt;/code> starts at byte &lt;code>0x1080&lt;/code> (4224 in decimal).&lt;/li>
&lt;li>This is where the compiler stores the &lt;strong>raw machine code&lt;/strong> for your functions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Size: &lt;code>0x1fb&lt;/code> (507 bytes)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Total size of the &lt;code>.text&lt;/code> section in both the file and memory.&lt;/li>
&lt;li>Spans from &lt;code>0x1080&lt;/code> to &lt;code>0x1080 + 0x1fb = 0x127b&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Flags: &lt;code>AX&lt;/code> (Allocated + eXecutable)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Memory is marked &lt;strong>executable&lt;/strong> (&lt;code>X&lt;/code>), allowing CPU to run the code.&lt;/li>
&lt;li>Memory is &lt;strong>allocated&lt;/strong> (&lt;code>A&lt;/code>), but not &lt;strong>writable&lt;/strong> (&lt;code>W&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Alignment: &lt;code>16&lt;/code>&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Ensures the &lt;code>.text&lt;/code> section starts at a 16-byte aligned address in memory.&lt;/li>
&lt;li>Optimizes instruction cache and CPU performance.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;code>.text section&lt;/code> 之 counter function 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-之-counter-function-分析">&lt;/span>
&lt;a href="#text-section-%e4%b9%8b-counter-function-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">counter&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Counter: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>counter 符号信息&lt;span class="hx-absolute -hx-mt-20" id="counter-符号信息">&lt;/span>
&lt;a href="#counter-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001169&lt;/span> T counter&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>objdump 查看 counter&lt;span class="hx-absolute -hx-mt-20" id="objdump-查看-counter">&lt;/span>
&lt;a href="#objdump-%e6%9f%a5%e7%9c%8b-counter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump demo --disassemble&lt;span class="o">=&lt;/span>counter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .init:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.got:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.sec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0000000000001169&lt;/span> &amp;lt;counter&amp;gt;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1169: f3 0f 1e fa endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 116d: &lt;span class="m">55&lt;/span> push %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 116e: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> e5 mov %rsp,%rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1171: 8b &lt;span class="m">05&lt;/span> b1 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2eb1&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%eax &lt;span class="c1"># 4028 &amp;lt;count.1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1177: &lt;span class="m">83&lt;/span> c0 &lt;span class="m">01&lt;/span> add &lt;span class="nv">$0&lt;/span>x1,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 117a: &lt;span class="m">89&lt;/span> &lt;span class="m">05&lt;/span> a8 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov %eax,0x2ea8&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span> &lt;span class="c1"># 4028 &amp;lt;count.1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1180: 8b &lt;span class="m">05&lt;/span> a2 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2ea2&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%eax &lt;span class="c1"># 4028 &amp;lt;count.1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1186: &lt;span class="m">89&lt;/span> c6 mov %eax,%esi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1188: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> &lt;span class="m">89&lt;/span> 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe89&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2018 &amp;lt;_IO_stdin_used+0x18&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 118f: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1192: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1197: e8 d4 fe ff ff call &lt;span class="m">1070&lt;/span> &amp;lt;printf@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 119c: &lt;span class="m">90&lt;/span> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 119d: 5d pop %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 119e: c3 ret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .fini:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.text section&lt;/code> 之 print_message function 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-之-print_message-function-分析">&lt;/span>
&lt;a href="#text-section-%e4%b9%8b-print_message-function-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>print_message 符号信息&lt;span class="hx-absolute -hx-mt-20" id="print_message-符号信息">&lt;/span>
&lt;a href="#print_message-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nm demo &lt;span class="p">|&lt;/span> grep print_message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011d3 T print_message&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>objdump 查看 print_message&lt;span class="hx-absolute -hx-mt-20" id="objdump-查看-print_message">&lt;/span>
&lt;a href="#objdump-%e6%9f%a5%e7%9c%8b-print_message" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump demo --disassemble&lt;span class="o">=&lt;/span>print_message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .init:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.got:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.sec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011d3 &amp;lt;print_message&amp;gt;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d3: f3 0f 1e fa endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d7: &lt;span class="m">55&lt;/span> push %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d8: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> e5 mov %rsp,%rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11db: &lt;span class="m">48&lt;/span> 8b &lt;span class="m">05&lt;/span> &lt;span class="m">36&lt;/span> 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2e36&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 4018 &amp;lt;message&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11e2: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11e5: e8 &lt;span class="m">76&lt;/span> fe ff ff call &lt;span class="m">1060&lt;/span> &amp;lt;puts@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11ea: &lt;span class="m">90&lt;/span> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11eb: 5d pop %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11ec: c3 ret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .fini:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.text section&lt;/code> 之 main function 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-之-main-function-分析">&lt;/span>
&lt;a href="#text-section-%e4%b9%8b-main-function-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>main 符号信息&lt;span class="hx-absolute -hx-mt-20" id="main-符号信息">&lt;/span>
&lt;a href="#main-%e7%ac%a6%e5%8f%b7%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>nm demo | grep main
U __libc_start_main@GLIBC_2.34
00000000000011ed T main&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>objdump 查看 main&lt;span class="hx-absolute -hx-mt-20" id="objdump-查看-main">&lt;/span>
&lt;a href="#objdump-%e6%9f%a5%e7%9c%8b-main" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> objdump demo --disassemble&lt;span class="o">=&lt;/span>main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .init:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.got:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.sec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011ed &amp;lt;main&amp;gt;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11ed: f3 0f 1e fa endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11f1: &lt;span class="m">55&lt;/span> push %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11f2: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> e5 mov %rsp,%rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11f5: &lt;span class="m">48&lt;/span> &lt;span class="m">83&lt;/span> ec &lt;span class="m">10&lt;/span> sub &lt;span class="nv">$0&lt;/span>x10,%rsp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11f9: 8b &lt;span class="m">05&lt;/span> &lt;span class="m">11&lt;/span> 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2e11&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%eax &lt;span class="c1"># 4010 &amp;lt;global_data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11ff: &lt;span class="m">89&lt;/span> c6 mov %eax,%esi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1201: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> 3b 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe3b&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2043 &amp;lt;_IO_stdin_used+0x43&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1208: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 120b: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1210: e8 5b fe ff ff call &lt;span class="m">1070&lt;/span> &amp;lt;printf@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1215: 8b &lt;span class="m">05&lt;/span> &lt;span class="m">09&lt;/span> 2e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2e09&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%eax &lt;span class="c1"># 4024 &amp;lt;global_bss&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 121b: &lt;span class="m">89&lt;/span> c6 mov %eax,%esi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 121d: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> &lt;span class="m">30&lt;/span> 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe30&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2054 &amp;lt;_IO_stdin_used+0x54&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1224: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1227: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 122c: e8 3f fe ff ff call &lt;span class="m">1070&lt;/span> &amp;lt;printf@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1231: 8b &lt;span class="m">05&lt;/span> dd 2d &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov 0x2ddd&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%eax &lt;span class="c1"># 4014 &amp;lt;local_static.0&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1237: &lt;span class="m">89&lt;/span> c6 mov %eax,%esi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1239: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> &lt;span class="m">24&lt;/span> 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe24&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2064 &amp;lt;_IO_stdin_used+0x64&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1240: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1243: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1248: e8 &lt;span class="m">23&lt;/span> fe ff ff call &lt;span class="m">1070&lt;/span> &amp;lt;printf@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 124d: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1252: e8 7c ff ff ff call 11d3 &amp;lt;print_message&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1257: c7 &lt;span class="m">45&lt;/span> &lt;span class="nb">fc&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> movl &lt;span class="nv">$0&lt;/span>x0,-0x4&lt;span class="o">(&lt;/span>%rbp&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 125e: eb 0e jmp 126e &amp;lt;main+0x81&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1260: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1265: e8 ff fe ff ff call &lt;span class="m">1169&lt;/span> &amp;lt;counter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 126a: &lt;span class="m">83&lt;/span> &lt;span class="m">45&lt;/span> &lt;span class="nb">fc&lt;/span> &lt;span class="m">01&lt;/span> addl &lt;span class="nv">$0&lt;/span>x1,-0x4&lt;span class="o">(&lt;/span>%rbp&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 126e: &lt;span class="m">83&lt;/span> 7d &lt;span class="nb">fc&lt;/span> &lt;span class="m">02&lt;/span> cmpl &lt;span class="nv">$0&lt;/span>x2,-0x4&lt;span class="o">(&lt;/span>%rbp&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1272: 7e ec jle &lt;span class="m">1260&lt;/span> &amp;lt;main+0x73&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1274: b8 &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> mov &lt;span class="nv">$0&lt;/span>x0,%eax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1279: c9 leave
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 127a: c3 ret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .fini:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.text section&lt;/code> 之 initialize function 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-之-initialize-function-分析">&lt;/span>
&lt;a href="#text-section-%e4%b9%8b-initialize-function-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>objdump 查看 initialize&lt;span class="hx-absolute -hx-mt-20" id="objdump-查看-initialize">&lt;/span>
&lt;a href="#objdump-%e6%9f%a5%e7%9c%8b-initialize" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump demo --disassemble&lt;span class="o">=&lt;/span>initialize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .init:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.got:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.sec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000000011b9 &amp;lt;initialize&amp;gt;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11b9: f3 0f 1e fa endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11bd: &lt;span class="m">55&lt;/span> push %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11be: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> e5 mov %rsp,%rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11c1: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> 6b 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe6b&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2033 &amp;lt;_IO_stdin_used+0x33&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11c8: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11cb: e8 &lt;span class="m">90&lt;/span> fe ff ff call &lt;span class="m">1060&lt;/span> &amp;lt;puts@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d0: &lt;span class="m">90&lt;/span> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d1: 5d pop %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11d2: c3 ret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .fini:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;code>.text section&lt;/code> 之 finalize function 分析&lt;span class="hx-absolute -hx-mt-20" id="text-section-之-finalize-function-分析">&lt;/span>
&lt;a href="#text-section-%e4%b9%8b-finalize-function-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>objdump 查看 finalize&lt;span class="hx-absolute -hx-mt-20" id="objdump-查看-finalize">&lt;/span>
&lt;a href="#objdump-%e6%9f%a5%e7%9c%8b-finalize" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">objdump demo --disassemble&lt;span class="o">=&lt;/span>finalize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">demo: file format elf64-x86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .init:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.got:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .plt.sec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .text:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000000000119f &amp;lt;finalize&amp;gt;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 119f: f3 0f 1e fa endbr64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11a3: &lt;span class="m">55&lt;/span> push %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11a4: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> e5 mov %rsp,%rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11a7: &lt;span class="m">48&lt;/span> 8d &lt;span class="m">05&lt;/span> &lt;span class="m">77&lt;/span> 0e &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> lea 0xe77&lt;span class="o">(&lt;/span>%rip&lt;span class="o">)&lt;/span>,%rax &lt;span class="c1"># 2025 &amp;lt;_IO_stdin_used+0x25&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11ae: &lt;span class="m">48&lt;/span> &lt;span class="m">89&lt;/span> c7 mov %rax,%rdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11b1: e8 aa fe ff ff call &lt;span class="m">1060&lt;/span> &amp;lt;puts@plt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11b6: &lt;span class="m">90&lt;/span> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11b7: 5d pop %rbp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 11b8: c3 ret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disassembly of section .fini:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Security Implications&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security-implications">&lt;/span>
&lt;a href="#security-implications" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>NX Bit (No-eXecute)&lt;/strong>:&lt;br>
The &lt;code>.text&lt;/code> section is executable (&lt;code>X&lt;/code>), but &lt;strong>not writable&lt;/strong> (&lt;code>W&lt;/code>), preventing code injection.&lt;/li>
&lt;li>&lt;strong>ASLR (Address Space Layout Randomization)&lt;/strong>:&lt;br>
Virtual addresses like &lt;code>0x1080&lt;/code> are &lt;strong>offsets from a randomized base address&lt;/strong>:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>Runtime Address of _init = `Base` &amp;#43; 0x1000
Runtime Address of main = `Base` &amp;#43; 0x11ed&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Memory Mapping at Runtime&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="memory-mapping-at-runtime">&lt;/span>
&lt;a href="#memory-mapping-at-runtime" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>When you run &lt;code>./demo&lt;/code>, the OS maps the &lt;code>.text&lt;/code> section into memory with execute permissions:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /proc/self/maps&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Output (example):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>555555555000-555555556000 r-xp 0x1000 ./demo&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>r-xp&lt;/code>: Read + eXecute, not Writable.&lt;/li>
&lt;li>&lt;code>0x1000&lt;/code>: File offset for &lt;code>.text&lt;/code>.&lt;/li>
&lt;li>&lt;code>0x1fb&lt;/code>: Size of &lt;code>.text&lt;/code> (507 bytes).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>.text 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="text-总结">&lt;/span>
&lt;a href="#text-%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Section&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;th>Virtual Address&lt;/th>
&lt;th>File Offset&lt;/th>
&lt;th>Size (Bytes)&lt;/th>
&lt;th>Permissions&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>.text&lt;/code>&lt;/td>
&lt;td>Executable code&lt;/td>
&lt;td>&lt;code>0x1080&lt;/code>&lt;/td>
&lt;td>&lt;code>0x1080&lt;/code>&lt;/td>
&lt;td>&lt;code>0x1fb&lt;/code> (507)&lt;/td>
&lt;td>&lt;code>r-x&lt;/code>&lt;/td>
&lt;td>Not writable (security)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>This section is critical for program execution, containing all your compiled functions and runtime initialization code.&lt;/p>
&lt;h2>&lt;code>.rodata&lt;/code> section 分析&lt;span class="hx-absolute -hx-mt-20" id="rodata-section-分析">&lt;/span>
&lt;a href="#rodata-section-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[18] .rodata PROGBITS 0000000000002000 00002000
0000000000000076 0000000000000000 A 0 0 4&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>&lt;code>.rodata&lt;/code> section 字段解释&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="rodata">&lt;/span>
&lt;a href="#rodata" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>[18]&lt;/strong>&lt;/td>
&lt;td>Section index&lt;/td>
&lt;td>&lt;code>.rodata&lt;/code> is the 18th section in the ELF file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>.rodata&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Section name&lt;/td>
&lt;td>Holds &lt;strong>read-only data&lt;/strong> (constants, string literals, etc.).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>PROGBITS&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Section type&lt;/td>
&lt;td>Data is stored in the file (not dynamically generated).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0000000000002000&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Virtual Address (VA)&lt;/strong>&lt;/td>
&lt;td>At runtime, this section is mapped to memory address &lt;code>0x2000&lt;/code> (relative to the randomized PIE base address).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>00002000&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>File Offset&lt;/strong>&lt;/td>
&lt;td>In the file (&lt;code>demo&lt;/code>), &lt;code>.rodata&lt;/code> starts at byte &lt;code>0x2000&lt;/code> (8192 in decimal).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0000000000000076&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>Size of &lt;code>.rodata&lt;/code> section: &lt;code>0x76&lt;/code> (118 bytes).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0000000000000000&lt;/code>&lt;/strong>&lt;/td>
&lt;td>&lt;strong>Entry Size (&lt;code>EntSize&lt;/code>)&lt;/strong>&lt;/td>
&lt;td>Not applicable (no fixed-size entries).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>A&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>Section is &lt;strong>Allocated&lt;/strong> (loaded into memory). No &lt;code>W&lt;/code> or &lt;code>X&lt;/code> → &lt;strong>read-only&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Link&lt;/td>
&lt;td>Unused for &lt;code>.rodata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>0&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Info&lt;/td>
&lt;td>Unused for &lt;code>.rodata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>&lt;code>4&lt;/code>&lt;/strong>&lt;/td>
&lt;td>Alignment&lt;/td>
&lt;td>Must be aligned to &lt;strong>4-byte boundaries&lt;/strong> in memory.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Purpose of &lt;code>.rodata&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="purpose-of">&lt;/span>
&lt;a href="#purpose-of" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;code>.rodata&lt;/code> section stores &lt;strong>read-only data&lt;/strong> that doesn’t change during execution:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>String literals&lt;/strong>: e.g., &lt;code>&amp;quot;Hello from .rodata!&amp;quot;&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Constant variables&lt;/strong>: e.g., &lt;code>const int x = 42;&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Jump tables&lt;/strong>: Used for &lt;code>switch()&lt;/code> statements.&lt;/li>
&lt;li>&lt;strong>Build metadata&lt;/strong>: e.g., &lt;code>__abi_tag&lt;/code>, &lt;code>BuildID&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Why Is &lt;code>.rodata&lt;/code> Read-Only?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-is">&lt;/span>
&lt;a href="#why-is" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Security&lt;/strong>: Prevents runtime modification of constants (e.g., format strings, lookup tables).&lt;/li>
&lt;li>&lt;strong>Optimization&lt;/strong>: Shared across processes (e.g., &lt;code>libc&lt;/code>&amp;rsquo;s string constants).&lt;/li>
&lt;li>&lt;strong>Memory Protection&lt;/strong>: Violations (e.g., writing to &lt;code>.rodata&lt;/code>) cause &lt;strong>segmentation faults&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Memory Mapping at Runtime&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="memory-mapping-at-runtime-1">&lt;/span>
&lt;a href="#memory-mapping-at-runtime-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>When the program runs:&lt;/p>
&lt;ul>
&lt;li>The OS maps &lt;code>.rodata&lt;/code> to virtual address &lt;code>0x2000&lt;/code> (relative to the randomized base address).&lt;/li>
&lt;li>&lt;code>.rodata&lt;/code> is marked &lt;strong>read-only&lt;/strong> in memory (no write permissions).&lt;/li>
&lt;/ul>
&lt;p>Example &lt;code>/proc/self/maps&lt;/code> output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>555555556000-555555557000 r--p 0x2000 ./demo&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>r--p&lt;/code>: Read-only, not writable or executable.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Security Implications&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security-implications-1">&lt;/span>
&lt;a href="#security-implications-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>NX Bit (No-eXecute)&lt;/strong>:&lt;br>
&lt;code>.rodata&lt;/code> is &lt;strong>not executable&lt;/strong>, preventing code injection.&lt;/li>
&lt;li>&lt;strong>Writable Protection&lt;/strong>:&lt;br>
Attempting to modify &lt;code>.rodata&lt;/code> at runtime (e.g., via a casted pointer) will crash the program:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">&amp;#34;Hello from .rodata!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;h&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Will cause a segmentation fault
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>&lt;strong>ASLR Compatibility&lt;/strong>:&lt;br>
&lt;code>.rodata&lt;/code> is part of the randomized memory layout in PIE binaries.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways-3">&lt;/span>
&lt;a href="#key-takeaways-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Concept&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Section Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>PROGBITS&lt;/code>&lt;/td>
&lt;td>Contains actual data in the file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Virtual Address&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x2000&lt;/code>&lt;/td>
&lt;td>Runtime address (relative to PIE base).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>File Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x2000&lt;/code>&lt;/td>
&lt;td>String &lt;code>&amp;quot;Hello from .rodata!&amp;quot;&lt;/code> is stored here on disk.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Size&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x76&lt;/code> (118 bytes)&lt;/td>
&lt;td>Total space used by &lt;code>.rodata&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>&lt;code>A&lt;/code> (Allocated)&lt;/td>
&lt;td>Loaded into memory as read-only.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Alignment&lt;/strong>&lt;/td>
&lt;td>&lt;code>4&lt;/code>&lt;/td>
&lt;td>Must start at a 4-byte aligned address.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>查看 demo 中 0x2000(.rodata) 后 &lt;code>0x76&lt;/code>(118) 字节的内容&lt;span class="hx-absolute -hx-mt-20" id="查看-demo-中-0x2000rodata-后-0x76118-字节的内容">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b-demo-%e4%b8%ad-0x2000rodata-%e5%90%8e-0x76118-%e5%ad%97%e8%8a%82%e7%9a%84%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd -l 0x76 -s 0x2000 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002000: &lt;span class="m">0100&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">4865&lt;/span> 6c6c 6f20 &lt;span class="m">6672&lt;/span> 6f6d 202e ....Hello from .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002010: 726f &lt;span class="m">6461&lt;/span> &lt;span class="m">7461&lt;/span> &lt;span class="m">2100&lt;/span> 436f 756e &lt;span class="m">7465&lt;/span> 723a rodata!.Counter:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002020: &lt;span class="m">2025&lt;/span> 640a &lt;span class="m">0046&lt;/span> 696e 616c 697a 696e 672e %d..Finalizing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002030: 2e2e &lt;span class="m">0049&lt;/span> 6e69 &lt;span class="m">7469&lt;/span> 616c 697a 696e 672e ...Initializing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002040: 2e2e &lt;span class="m">0047&lt;/span> 6c6f &lt;span class="m">6261&lt;/span> 6c20 &lt;span class="m">4461&lt;/span> &lt;span class="m">7461&lt;/span> 3a20 ...Global Data:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002050: &lt;span class="m">2564&lt;/span> 0a00 476c 6f62 616c &lt;span class="m">2042&lt;/span> &lt;span class="m">5353&lt;/span> 3a20 %d..Global BSS:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002060: &lt;span class="m">2564&lt;/span> 0a00 4c6f &lt;span class="m">6361&lt;/span> 6c20 &lt;span class="m">5374&lt;/span> &lt;span class="m">6174&lt;/span> &lt;span class="m">6963&lt;/span> %d..Local Static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002070: 3a20 &lt;span class="m">2564&lt;/span> 0a00 : %d..&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>demo 中 0x2000(.rodata) 后 &lt;code>0x76&lt;/code>(118) 字节的内容分析&lt;span class="hx-absolute -hx-mt-20" id="demo-中-0x2000rodata-后-0x76118-字节的内容分析">&lt;/span>
&lt;a href="#demo-%e4%b8%ad-0x2000rodata-%e5%90%8e-0x76118-%e5%ad%97%e8%8a%82%e7%9a%84%e5%86%85%e5%ae%b9%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>0x20 space 展示用 &lt;code>@&lt;/code> 代替&lt;/li>
&lt;li>0x0a line feed 展示用 &lt;code>#&lt;/code> 代替&lt;/li>
&lt;li>0x00 null 作为字符串结束标志，展示用 &lt;code>😂&lt;/code> 代替&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">00002000: &lt;span class="m">0100&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">4865&lt;/span> 6c6c 6f20 &lt;span class="m">6672&lt;/span> 6f6d 202e ....Hello@from@.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002010: 726f &lt;span class="m">6461&lt;/span> &lt;span class="m">7461&lt;/span> &lt;span class="m">2100&lt;/span> 436f 756e &lt;span class="m">7465&lt;/span> 723a rodata!😂Counter:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002020: &lt;span class="m">2025&lt;/span> 640a &lt;span class="m">0046&lt;/span> 696e 616c 697a 696e 672e @%d#😂Finalizing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002030: 2e2e &lt;span class="m">0049&lt;/span> 6e69 &lt;span class="m">7469&lt;/span> 616c 697a 696e 672e ..😂Initializing.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002040: 2e2e &lt;span class="m">0047&lt;/span> 6c6f &lt;span class="m">6261&lt;/span> 6c20 &lt;span class="m">4461&lt;/span> &lt;span class="m">7461&lt;/span> 3a20 ..😂Global@Data:@
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002050: &lt;span class="m">2564&lt;/span> 0a00 476c 6f62 616c &lt;span class="m">2042&lt;/span> &lt;span class="m">5353&lt;/span> 3a20 %d#😂Global@BSS:@
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002060: &lt;span class="m">2564&lt;/span> 0a00 4c6f &lt;span class="m">6361&lt;/span> 6c20 &lt;span class="m">5374&lt;/span> &lt;span class="m">6174&lt;/span> &lt;span class="m">6963&lt;/span> %d#😂Local@Static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00002070: 3a20 &lt;span class="m">2564&lt;/span> 0a00 :@%d#😂&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The &lt;code>.rodata&lt;/code> section&amp;rsquo;s &lt;strong>4-byte alignment&lt;/strong> ensures that the &lt;strong>section itself&lt;/strong> starts at a 4-byte aligned address in both the file and memory, but &lt;strong>individual strings inside it do not need to be 4byte aligned&lt;/strong>.&lt;/p>
&lt;h3>&lt;strong>Section Alignment vs. Internal Data Alignment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="section-alignment-vs-internal-data-alignment">&lt;/span>
&lt;a href="#section-alignment-vs-internal-data-alignment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Section Alignment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="section-alignment">&lt;/span>
&lt;a href="#section-alignment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>&lt;code>Align: 4&lt;/code>&lt;/strong> in &lt;code>readelf -S&lt;/code> means the &lt;code>.rodata&lt;/code> section must start at an address divisible by 4 in memory and in the file.&lt;/li>
&lt;li>In your file:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>File Offset: 0x2000 (8192) → divisible by 4 (0x2000 % 4 = 0).&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>In memory:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>Virtual Address: 0x2000 → also divisible by 4 (0x2000 % 4 = 0).&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>This alignment is enforced for &lt;strong>efficient memory access&lt;/strong>, not for internal strings.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Internal Strings Are Packed&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="internal-strings-are-packed">&lt;/span>
&lt;a href="#internal-strings-are-packed" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The compiler places strings &lt;strong>sequentially&lt;/strong> in &lt;code>.rodata&lt;/code> without padding between them.&lt;/li>
&lt;li>Example from your hex dump:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>00002000: 0100 0200 4865 6c6c 6f20 6672 6f6d 202e
^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
__abi_tag &amp;#34;Hello from .rodata!\0&amp;#34;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>&amp;quot;Hello from .rodata!\0&amp;quot;&lt;/code> starts at &lt;code>0x2004&lt;/code> (after the 4-byte header).&lt;/li>
&lt;li>Next string &lt;code>&amp;quot;Global Data: %d\n\0&amp;quot;&lt;/code> starts at &lt;code>0x2018&lt;/code> (no padding between &lt;code>0x2014&lt;/code> and &lt;code>0x2018&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>How Alignment Affects Storage&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-alignment-affects-storage">&lt;/span>
&lt;a href="#how-alignment-affects-storage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Even though the section is aligned to 4 bytes, the compiler &lt;strong>packs strings tightly&lt;/strong> to save space. Alignment only matters for:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Section Start&lt;/strong>: Ensures the entire &lt;code>.rodata&lt;/code> section begins at a 4byte boundary.&lt;/li>
&lt;li>&lt;strong>Data Access&lt;/strong>: If code accesses parts of &lt;code>.rodata&lt;/code> as &lt;strong>4byte aligned values&lt;/strong> (e.g., via pointer arithmetic), the compiler ensures those values are aligned.&lt;/li>
&lt;/ol>
&lt;h3>修改 &lt;code>message&lt;/code> 信息&lt;span class="hx-absolute -hx-mt-20" id="修改-message-信息">&lt;/span>
&lt;a href="#%e4%bf%ae%e6%94%b9-message-%e4%bf%a1%e6%81%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>Hello from .rodata!&lt;/code> 修改为
&lt;code>ABCDE from .rodata!&lt;/code>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./update.sh demo 0x2004 0x41
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">8196&lt;/span> &lt;span class="o">(&lt;/span>0x2004&lt;span class="o">)&lt;/span> to 0x41
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/elf-demo$ ./update.sh demo 0x2005 0x42
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">8197&lt;/span> &lt;span class="o">(&lt;/span>0x2005&lt;span class="o">)&lt;/span> to 0x42
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/elf-demo$ ./update.sh demo 0x2006 0x43
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">8198&lt;/span> &lt;span class="o">(&lt;/span>0x2006&lt;span class="o">)&lt;/span> to 0x43
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/elf-demo$ ./update.sh demo 0x2007 0x44
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">8199&lt;/span> &lt;span class="o">(&lt;/span>0x2007&lt;span class="o">)&lt;/span> to 0x44
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/elf-demo$ ./update.sh demo 0x2008 0x45
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updated byte at offset &lt;span class="m">8200&lt;/span> &lt;span class="o">(&lt;/span>0x2008&lt;span class="o">)&lt;/span> to 0x45
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/elf-demo$ ./demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global Data: &lt;span class="m">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Global BSS: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Local Static: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ABCDE from .rodata! &lt;span class="c1"># 修改成功🤣&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counter: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Finalizing...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>.rodata section 总结&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="rodata-section--总结">&lt;/span>
&lt;a href="#rodata-section--%e6%80%bb%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>4byte alignment&lt;/strong> applies to the &lt;strong>section itself&lt;/strong>, not individual strings.&lt;/li>
&lt;li>&lt;strong>&lt;code>__abi_tag&lt;/code>&lt;/strong> adds 4 bytes to &lt;code>.rodata&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Null terminators&lt;/strong> add 7 bytes (1 per string).&lt;/li>
&lt;/ul>
&lt;h2>data、bss、rodata、text&lt;span class="hx-absolute -hx-mt-20" id="databssrodatatext">&lt;/span>
&lt;a href="#databssrodatatext" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>data、rodata、text 在 demo 中位置关系&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/cloudedseal/pictures/main/img/demo-elf-sections-part1.drawio.svg" alt="data、rodata、text" loading="lazy" />&lt;/p></description></item><item><title>Gcc Compile C Prog</title><link>https://cloudedseal.github.io/blog/gcc-compile-c-prog/</link><pubDate>Tue, 29 Apr 2025 17:25:37 +0800</pubDate><guid>https://cloudedseal.github.io/blog/gcc-compile-c-prog/</guid><description>
&lt;h3>分析代码&lt;span class="hx-absolute -hx-mt-20" id="分析代码">&lt;/span>
&lt;a href="#%e5%88%86%e6%9e%90%e4%bb%a3%e7%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>os: Linux Mint 22.1&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">hello.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>strace 追踪编译流程&lt;span class="hx-absolute -hx-mt-20" id="strace-追踪编译流程">&lt;/span>
&lt;a href="#strace-%e8%bf%bd%e8%b8%aa%e7%bc%96%e8%af%91%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">strace -t -f -o hello.log -e &lt;span class="nv">trace&lt;/span>&lt;span class="o">=&lt;/span>execve -s &lt;span class="m">2000&lt;/span> gcc -o hello hello.c&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>All &lt;code>execve()&lt;/code> system calls during compilation, showing how GCC orchestrates the build process.&lt;/p>
&lt;h4>hello.log 内容&lt;span class="hx-absolute -hx-mt-20" id="hellolog-内容">&lt;/span>
&lt;a href="#hellolog-%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>20029 13:48:52 execve(&amp;#34;/usr/bin/gcc&amp;#34;, [&amp;#34;gcc&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;hello.c&amp;#34;], 0x7ffd60d08358 /* 65 vars */) = 0
20034 13:48:52 execve(&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;, [&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;, &amp;#34;-quiet&amp;#34;, &amp;#34;-imultiarch&amp;#34;, &amp;#34;x86_64-linux-gnu&amp;#34;, &amp;#34;hello.c&amp;#34;, &amp;#34;-quiet&amp;#34;, &amp;#34;-dumpbase&amp;#34;, &amp;#34;hello.c&amp;#34;, &amp;#34;-dumpbase-ext&amp;#34;, &amp;#34;.c&amp;#34;, &amp;#34;-mtune=generic&amp;#34;, &amp;#34;-march=x86-64&amp;#34;, &amp;#34;-fasynchronous-unwind-tables&amp;#34;, &amp;#34;-fstack-protector-strong&amp;#34;, &amp;#34;-Wformat&amp;#34;, &amp;#34;-Wformat-security&amp;#34;, &amp;#34;-fstack-clash-protection&amp;#34;, &amp;#34;-fcf-protection&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = 0
20034 13:48:53 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:53 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20034, si_uid=1000, si_status=0, si_utime=3 /* 0.03 s */, si_stime=17 /* 0.17 s */} ---
20036 13:48:53 execve(&amp;#34;/usr/local/sbin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/local/bin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/sbin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/bin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = 0
20036 13:48:53 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:53 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20036, si_uid=1000, si_status=0, si_utime=0, si_stime=1 /* 0.01 s */} ---
20037 13:48:53 execve(&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;, [&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;, &amp;#34;-plugin&amp;#34;, &amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so&amp;#34;, &amp;#34;-plugin-opt=/usr/libexec/gcc/x86_64-linux-gnu/13/lto-wrapper&amp;#34;, &amp;#34;-plugin-opt=-fresolution=/tmp/ccKbYYb2.res&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;--build-id&amp;#34;, &amp;#34;--eh-frame-hdr&amp;#34;, &amp;#34;-m&amp;#34;, &amp;#34;elf_x86_64&amp;#34;, &amp;#34;--hash-style=gnu&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-dynamic-linker&amp;#34;, &amp;#34;/lib64/ld-linux-x86-64.so.2&amp;#34;, &amp;#34;-pie&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;now&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;relro&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/Scrt1.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crti.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtbeginS.o&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../../lib&amp;#34;, &amp;#34;-L/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../..&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;-lc&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtendS.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crtn.o&amp;#34;], 0x7d15df0 /* 72 vars */) = 0
20038 13:48:53 execve(&amp;#34;/usr/bin/ld&amp;#34;, [&amp;#34;/usr/bin/ld&amp;#34;, &amp;#34;-plugin&amp;#34;, &amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so&amp;#34;, &amp;#34;-plugin-opt=/usr/libexec/gcc/x86_64-linux-gnu/13/lto-wrapper&amp;#34;, &amp;#34;-plugin-opt=-fresolution=/tmp/ccKbYYb2.res&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;--build-id&amp;#34;, &amp;#34;--eh-frame-hdr&amp;#34;, &amp;#34;-m&amp;#34;, &amp;#34;elf_x86_64&amp;#34;, &amp;#34;--hash-style=gnu&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-dynamic-linker&amp;#34;, &amp;#34;/lib64/ld-linux-x86-64.so.2&amp;#34;, &amp;#34;-pie&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;now&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;relro&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/Scrt1.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crti.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtbeginS.o&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../../lib&amp;#34;, &amp;#34;-L/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../..&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;-lc&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtendS.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crtn.o&amp;#34;], 0x7ffd0bf6c850 /* 72 vars */) = 0
20038 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20037 13:48:54 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20038, si_uid=1000, si_status=0, si_utime=4 /* 0.04 s */, si_stime=23 /* 0.23 s */} ---
20037 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:54 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20037, si_uid=1000, si_status=0, si_utime=0, si_stime=3 /* 0.03 s */} ---
20029 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h3>&lt;strong>编译流程分析&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="编译流程分析">&lt;/span>
&lt;a href="#%e7%bc%96%e8%af%91%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Initial GCC Invocation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="initial-gcc-invocation">&lt;/span>
&lt;a href="#initial-gcc-invocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/gcc&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;gcc&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-o&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;hello.c&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20029&lt;/code>&lt;/li>
&lt;li>&lt;strong>Action&lt;/strong>: Invokes the GCC driver (&lt;code>/usr/bin/gcc&lt;/code>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Compilation Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="compilation-phase">&lt;/span>
&lt;a href="#compilation-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;&lt;/span>, ...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20034&lt;/code>&lt;/li>
&lt;li>&lt;strong>Role&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>cc1&lt;/code> is the &lt;strong>GCC C compiler frontend&lt;/strong>.&lt;/li>
&lt;li>Converts &lt;code>hello.c&lt;/code> to &lt;strong>assembly code&lt;/strong> (&lt;code>/tmp/ccLfEVyN.s&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Flags Passed&lt;/strong>:&lt;br>
Includes optimization settings (e.g., &lt;code>-mtune=generic&lt;/code>, &lt;code>-march=x86-64&lt;/code>), security features (&lt;code>-fstack-protector-strong&lt;/code>, &lt;code>-Wformat-security&lt;/code>), and others.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Result&lt;/strong>:&lt;br>
Assembly file generated at &lt;code>/tmp/ccLfEVyN.s&lt;/code>.&lt;/p>
&lt;hr>
&lt;h4>&lt;strong>Assembly Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="assembly-phase">&lt;/span>
&lt;a href="#assembly-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Attempts to locate the &lt;strong>assembler (&lt;code>as&lt;/code>)&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/local/sbin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/local/bin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/sbin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20036&lt;/code>&lt;/li>
&lt;li>&lt;strong>Why Multiple Tries?&lt;/strong>:&lt;br>
GCC searches standard paths for the assembler. Succeeds with &lt;code>/usr/bin/as&lt;/code> (GNU Assembler).&lt;/li>
&lt;li>&lt;strong>Action&lt;/strong>:&lt;br>
Assembles &lt;code>/tmp/ccLfEVyN.s&lt;/code> into an object file: &lt;code>/tmp/ccGZrdFz.o&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Linking Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="linking-phase">&lt;/span>
&lt;a href="#linking-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20037&lt;/code>&lt;/li>
&lt;li>&lt;strong>Role&lt;/strong>:
&lt;ul>
&lt;li>Wrapper for the linker (&lt;code>ld&lt;/code>).&lt;/li>
&lt;li>Prepares metadata for C++ static constructors/destructors (not needed here since &lt;code>hello.c&lt;/code> is plain C).&lt;/li>
&lt;li>Invokes the &lt;strong>real linker&lt;/strong> (&lt;code>/usr/bin/ld&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Internal Linker Call&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/ld&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20038&lt;/code>&lt;/li>
&lt;li>&lt;strong>Key Flags&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>-dynamic-linker /lib64/ld-linux-x86-64.so.2&lt;/code>: Sets the dynamic loader.&lt;/li>
&lt;li>&lt;code>-pie&lt;/code>: Creates a &lt;strong>Position-Independent Executable&lt;/strong> (security feature).&lt;/li>
&lt;li>&lt;code>-z now&lt;/code> and &lt;code>-z relro&lt;/code>: Enhance runtime security.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Inputs Linked&lt;/strong>:
&lt;ul>
&lt;li>CRT (C Runtime) files (&lt;code>Scrt1.o&lt;/code>, &lt;code>crti.o&lt;/code>, &lt;code>crtbeginS.o&lt;/code>, &lt;code>crtendS.o&lt;/code>, &lt;code>crtn.o&lt;/code>).&lt;/li>
&lt;li>Object file: &lt;code>/tmp/ccGZrdFz.o&lt;/code>.&lt;/li>
&lt;li>Standard libraries: &lt;code>-lgcc&lt;/code>, &lt;code>-lgcc_s&lt;/code>, &lt;code>-lc&lt;/code> (libc).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Result&lt;/strong>:&lt;br>
Final executable &lt;code>hello&lt;/code> is created.&lt;/p>
&lt;hr>
&lt;h3>&lt;strong>Success Indicators&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="success-indicators">&lt;/span>
&lt;a href="#success-indicators" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>All &lt;code>execve()&lt;/code> calls return &lt;code>0&lt;/code> (success).&lt;/li>
&lt;li>Processes exit cleanly (&lt;code>+++ exited with 0 +++&lt;/code>).&lt;/li>
&lt;li>No errors detected in the toolchain path or linking.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Security &amp;amp; Optimization Notes&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security--optimization-notes">&lt;/span>
&lt;a href="#security--optimization-notes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Stack Protection&lt;/strong>: Enabled via &lt;code>-fstack-protector-strong&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Hardened Linking&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>-z now&lt;/code>: Immediate binding of symbols.&lt;/li>
&lt;li>&lt;code>-z relro&lt;/code>: Read-only relocations after relocation.&lt;/li>
&lt;li>&lt;code>-pie&lt;/code>: ASLR-friendly executable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Build ID&lt;/strong>: Embedded via &lt;code>--build-id&lt;/code> for debugging/tracing.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Critical Paths&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="critical-paths">&lt;/span>
&lt;a href="#critical-paths" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tool&lt;/th>
&lt;th>Path&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cc1&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&lt;/code>&lt;/td>
&lt;td>Compiles C to assembly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>as&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/bin/as&lt;/code>&lt;/td>
&lt;td>Assembles &lt;code>.s&lt;/code> to &lt;code>.o&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>collect2&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&lt;/code>&lt;/td>
&lt;td>Manages linker setup&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ld&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/bin/ld&lt;/code>&lt;/td>
&lt;td>Links objects into final binary&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>&lt;strong>Conclusion&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="conclusion">&lt;/span>
&lt;a href="#conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The log confirms a &lt;strong>standard GCC compilation pipeline&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Preprocessing + Parsing&lt;/strong>: Handled by &lt;code>cc1&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Assembly&lt;/strong>: Done by &lt;code>as&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Linking&lt;/strong>: Orchestrated by &lt;code>collect2&lt;/code> → &lt;code>ld&lt;/code>.&lt;/li>
&lt;/ol></description></item><item><title>Master Elf</title><link>https://cloudedseal.github.io/blog/master-elf/</link><pubDate>Mon, 28 Apr 2025 15:29:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-elf/</guid><description>
&lt;h2>hello world&lt;span class="hx-absolute -hx-mt-20" id="hello-world">&lt;/span>
&lt;a href="#hello-world" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello world&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>gcc &amp;ndash;save-temps -o hello hello.c&lt;/p>
&lt;/blockquote>
&lt;h2>&lt;strong>What is ELF?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="what-is-elf">&lt;/span>
&lt;a href="#what-is-elf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>ELF (Executable and Linkable Format) is a &lt;strong>standardized binary format&lt;/strong> for storing compiled programs, libraries, and other binaries on Unix-like systems (e.g., Linux). It defines how machine code, data, symbols, relocation information, and metadata are organized in files like:&lt;/p>
&lt;ul>
&lt;li>Executables (&lt;code>./hello&lt;/code>)&lt;/li>
&lt;li>Object files (&lt;code>hello.o&lt;/code>)&lt;/li>
&lt;li>Shared libraries (&lt;code>.so&lt;/code>)&lt;/li>
&lt;li>Core dumps&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>ELF File Structure&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-file-structure">&lt;/span>
&lt;a href="#elf-file-structure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>An ELF file has two primary views:&lt;/p>
&lt;h3>&lt;strong>Linking View (Sections)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="linking-view-sections">&lt;/span>
&lt;a href="#linking-view-sections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Used during &lt;code>compilation/linking&lt;/code> to combine object files.&lt;/li>
&lt;li>Contains &lt;strong>section headers&lt;/strong> describing discrete parts of the file.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Execution View (Segments)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="execution-view-segments">&lt;/span>
&lt;a href="#execution-view-segments" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Used at &lt;code>runtime&lt;/code> to load the program into memory.&lt;/li>
&lt;li>Contains &lt;strong>program headers&lt;/strong> mapping sections to memory segments.&lt;/li>
&lt;/ul>
&lt;h2>Key Components&lt;span class="hx-absolute -hx-mt-20" id="key-components">&lt;/span>
&lt;a href="#key-components" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Component&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>ELF Header&lt;/strong>&lt;/td>
&lt;td>Metadata about the file (architecture, type, entry point, etc.).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Program Headers&lt;/strong>&lt;/td>
&lt;td>Describe how to map segments to memory (used by the OS at runtime).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Section Headers&lt;/strong>&lt;/td>
&lt;td>List all sections (code, data, symbols, relocations, debug info, etc.).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sections&lt;/strong>&lt;/td>
&lt;td>Logical units like &lt;code>.text&lt;/code> (code), &lt;code>.data&lt;/code> (initialized variables), etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Segments&lt;/strong>&lt;/td>
&lt;td>Physical chunks mapped into memory (e.g., &lt;code>LOAD&lt;/code>, &lt;code>DYNAMIC&lt;/code>, &lt;code>STACK&lt;/code>).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>&lt;strong>ELF File Layout&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-file-layout">&lt;/span>
&lt;a href="#elf-file-layout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>&amp;#43;---------------------&amp;#43;
| ELF Header | ← Fixed-size metadata at file offset 0
&amp;#43;---------------------&amp;#43;
| Program Headers | ← Describes segments (for runtime)
&amp;#43;---------------------&amp;#43;
| Section 1 (.text) | ← Machine code
&amp;#43;---------------------&amp;#43;
| Section 2 (.data) | ← Initialized global/static variables
&amp;#43;---------------------&amp;#43;
| ... |
&amp;#43;---------------------&amp;#43;
| Section Headers | ← Table listing all sections
&amp;#43;---------------------&amp;#43;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>&lt;strong>Key ELf Concepts&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-elf-concepts">&lt;/span>
&lt;a href="#key-elf-concepts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;strong>ELF Header&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-header">&lt;/span>
&lt;a href="#elf-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -h hello&lt;/code> to see:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ELF Header:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Magic: 7f &lt;span class="m">45&lt;/span> 4c &lt;span class="m">46&lt;/span> &lt;span class="m">02&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Class: ELF64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data: 2&lt;span class="err">&amp;#39;&lt;/span>s complement, little endian
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>current&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OS/ABI: UNIX - System V
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ABI Version: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type: DYN &lt;span class="o">(&lt;/span>Position-Independent Executable file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Machine: Advanced Micro Devices X86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry point address: 0x1060
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of program headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of section headers: &lt;span class="m">13976&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Flags: 0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of this header: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of program headers: &lt;span class="m">56&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of program headers: &lt;span class="m">13&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of section headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of section headers: &lt;span class="m">31&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Section header string table index: &lt;span class="m">30&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Program Headers (Segments)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="program-headers-segments">&lt;/span>
&lt;a href="#program-headers-segments" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -l hello&lt;/code> to see:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Elf file &lt;span class="nb">type&lt;/span> is DYN &lt;span class="o">(&lt;/span>Position-Independent Executable file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry point 0x1060
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">There are &lt;span class="m">13&lt;/span> program headers, starting at offset &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Program Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type Offset VirtAddr PhysAddr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FileSiz MemSiz Flags Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PHDR 0x0000000000000040 0x0000000000000040 0x0000000000000040
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000002d8 0x00000000000002d8 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> INTERP 0x0000000000000318 0x0000000000000318 0x0000000000000318
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x000000000000001c 0x000000000000001c R 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Requesting program interpreter: /lib64/ld-linux-x86-64.so.2&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000000000 0x0000000000000000 0x0000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000628 0x0000000000000628 R 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000001000 0x0000000000001000 0x0000000000001000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000175 0x0000000000000175 R E 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000002000 0x0000000000002000 0x0000000000002000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000000f4 0x00000000000000f4 R 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000002db8 0x0000000000003db8 0x0000000000003db8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000258 0x0000000000000260 RW 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DYNAMIC 0x0000000000002dc8 0x0000000000003dc8 0x0000000000003dc8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000001f0 0x00000000000001f0 RW 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE 0x0000000000000338 0x0000000000000338 0x0000000000000338
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000030 0x0000000000000030 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE 0x0000000000000368 0x0000000000000368 0x0000000000000368
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000044 0x0000000000000044 R 0x4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_PROPERTY 0x0000000000000338 0x0000000000000338 0x0000000000000338
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000030 0x0000000000000030 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_EH_FRAME 0x0000000000002010 0x0000000000002010 0x0000000000002010
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000034 0x0000000000000034 R 0x4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_STACK 0x0000000000000000 0x0000000000000000 0x0000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000000 0x0000000000000000 RW 0x10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_RELRO 0x0000000000002db8 0x0000000000003db8 0x0000000000003db8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000248 0x0000000000000248 R 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Section to Segment mapping:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Segment Sections...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">01&lt;/span> .interp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">02&lt;/span> .interp .note.gnu.property .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">03&lt;/span> .init .plt .plt.got .plt.sec .text .fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">04&lt;/span> .rodata .eh_frame_hdr .eh_frame
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">05&lt;/span> .init_array .fini_array .dynamic .got .data .bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">06&lt;/span> .dynamic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">07&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">08&lt;/span> .note.gnu.build-id .note.ABI-tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">09&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">10&lt;/span> .eh_frame_hdr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">12&lt;/span> .init_array .fini_array .dynamic .got &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>segment LOAD 理解&lt;span class="hx-absolute -hx-mt-20" id="segment-load-理解">&lt;/span>
&lt;a href="#segment-load-%e7%90%86%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Explanation of the Two Lines in the &lt;code>LOAD&lt;/code> Segment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="explanation-of-the-two-lines-in-the">&lt;/span>
&lt;a href="#explanation-of-the-two-lines-in-the" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Here’s a breakdown of the two lines from the &lt;code>LOAD&lt;/code> segment in your &lt;code>readelf -l hello&lt;/code> output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>LOAD 0x0000000000000000 0x0000000000000000 0x0000000000000000
0x0000000000000628 0x0000000000000628 R 0x1000&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h4>&lt;strong>Line-by-Line Breakdown&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="line-by-line-breakdown">&lt;/span>
&lt;a href="#line-by-line-breakdown" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>LOAD&lt;/code>&lt;/td>
&lt;td>This segment is &lt;code>loaded&lt;/code> into memory during execution.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Start of this segment in the file (offset 0 bytes from the file start).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VirtAddr&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>&lt;code>Virtual memory address&lt;/code> where this segment is mapped (position-independent; resolved at runtime).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PhysAddr&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>&lt;code>Physical memory address&lt;/code> (ignored for executables; used in firmware).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>FileSiz&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000628&lt;/code> (1576 bytes)&lt;/td>
&lt;td>&lt;code>Size&lt;/code> of the segment in the file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MemSiz&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000628&lt;/code> (1576 bytes)&lt;/td>
&lt;td>&lt;code>Size&lt;/code> of the segment in memory (same as &lt;code>FileSiz&lt;/code>; no zero-filled padding).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>&lt;code>R&lt;/code>&lt;/td>
&lt;td>Segment is &lt;strong>read-only&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Align&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x1000&lt;/code> (4096 bytes)&lt;/td>
&lt;td>Alignment requirement (must be &lt;code>page-aligned&lt;/code> in memory).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4>&lt;strong>Purpose of This Segment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="purpose-of-this-segment">&lt;/span>
&lt;a href="#purpose-of-this-segment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>This &lt;code>LOAD&lt;/code> segment maps &lt;strong>read-only metadata&lt;/strong> into memory, including:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>.interp&lt;/code>&lt;/strong>: Path to the dynamic linker (&lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>.note.gnu.build-id&lt;/code>&lt;/strong>: Unique identifier for debugging.&lt;/li>
&lt;li>&lt;strong>&lt;code>.gnu.hash&lt;/code>, &lt;code>.dynsym&lt;/code>, &lt;code>.dynstr&lt;/code>&lt;/strong>: Dynamic symbol table and hashing for efficient symbol resolution.&lt;/li>
&lt;li>&lt;strong>Relocation tables&lt;/strong>: Used by the dynamic linker to adjust addresses at runtime.&lt;/li>
&lt;/ul>
&lt;p>It is critical for &lt;strong>dynamic linking&lt;/strong> and &lt;strong>runtime symbol resolution&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h4>&lt;strong>Why Are &lt;code>VirtAddr&lt;/code> and &lt;code>PhysAddr&lt;/code> Zero?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-are">&lt;/span>
&lt;a href="#why-are" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Position-Independent Executable (PIE)&lt;/strong>:&lt;br>
The binary is compiled as &lt;code>DYN&lt;/code> (shared object style), allowing the OS to load it at a &lt;strong>randomized base address&lt;/strong> (ASLR).
&lt;ul>
&lt;li>At runtime, the OS chooses a base address (e.g., &lt;code>0x555555554000&lt;/code>), and all segments are mapped relative to this base.&lt;/li>
&lt;li>&lt;code>VirtAddr = 0&lt;/code> means the segment’s virtual address is calculated as &lt;code>base + offset&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Security Implications&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security-implications">&lt;/span>
&lt;a href="#security-implications" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>No Write or Execute Permissions&lt;/strong>:&lt;br>
The &lt;code>R&lt;/code> flag ensures this segment is &lt;strong>read-only&lt;/strong>, protecting metadata from tampering.&lt;/li>
&lt;li>&lt;strong>Alignment (&lt;code>0x1000&lt;/code>)&lt;/strong>:&lt;br>
Ensures the segment starts at a &lt;strong>page boundary&lt;/strong> (4KB), satisfying memory protection requirements.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Example Mapping in Memory&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-mapping-in-memory">&lt;/span>
&lt;a href="#example-mapping-in-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>At runtime, the OS maps this segment as follows:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>Virtual Address Range Permissions Purpose
[BASE_ADDR] R .interp, .note.gnu.build-id, .gnu.hash, .dynsym, etc.
[BASE_ADDR &amp;#43; 0x628] ... Next segment starts here.&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h4>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways">&lt;/span>
&lt;a href="#key-takeaways" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>Metadata Storage&lt;/strong>: Contains essential runtime data for dynamic linking.&lt;/li>
&lt;li>&lt;strong>ASLR Compatibility&lt;/strong>: Position-independent addressing enhances security.&lt;/li>
&lt;li>&lt;strong>Read-Only Protection&lt;/strong>: Prevents accidental or malicious modification of critical data.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3>&lt;strong>Sections&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="sections">&lt;/span>
&lt;a href="#sections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -S hello&lt;/code> to list sections:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Section Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Nr&lt;span class="o">]&lt;/span> Name Type Address Offset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size EntSize Flags Link Info Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 0&lt;span class="o">]&lt;/span> NULL &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> .text PROGBITS &lt;span class="m">0000000000401000&lt;/span> &lt;span class="m">00001000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001b2 &lt;span class="m">0000000000000000&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>.text&lt;/code>: Executable code.&lt;/li>
&lt;li>&lt;code>.rodata&lt;/code>: Read-only constants (e.g., strings).&lt;/li>
&lt;li>&lt;code>.plt/.got&lt;/code>: Dynamic linking stubs.&lt;/li>
&lt;li>&lt;code>.symtab&lt;/code>: Symbol table for debugging/linking.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>How Does ELF Work?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-does-elf-work">&lt;/span>
&lt;a href="#how-does-elf-work" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Compilation&lt;/strong>:&lt;br>
GCC generates an ELF object file (&lt;code>hello.o&lt;/code>) with sections like &lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>, and &lt;code>.symtab&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Linking&lt;/strong>:&lt;br>
The linker (&lt;code>ld&lt;/code>) merges sections from multiple object files, resolves symbols, and creates an executable ELF file with program headers.&lt;/li>
&lt;li>&lt;strong>Execution&lt;/strong>:&lt;br>
The OS loads the executable using the program headers to map memory regions and execute code.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>&lt;strong>What Does the OS Do When Running &lt;code>./hello&lt;/code>?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="what-does-the-os-do-when-running">&lt;/span>
&lt;a href="#what-does-the-os-do-when-running" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Here’s the lifecycle from command line to execution:&lt;/p>
&lt;h3>&lt;strong>User Runs the Command&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="user-runs-the-command">&lt;/span>
&lt;a href="#user-runs-the-command" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The shell calls &lt;code>execve(&amp;quot;./hello&amp;quot;, ...)&lt;/code>, which triggers the kernel to load the ELF file.&lt;/p>
&lt;h3>&lt;strong>Kernel Reads the ELF Header&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-reads-the-elf-header">&lt;/span>
&lt;a href="#kernel-reads-the-elf-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Checks the magic number (&lt;code>\x7fELF&lt;/code>) to confirm it’s an ELF file.&lt;/li>
&lt;li>Parses the ELF header to determine architecture (e.g., x86-64).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Kernel Loads Segments into Memory&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-loads-segments-into-memory">&lt;/span>
&lt;a href="#kernel-loads-segments-into-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Using the &lt;strong>program headers&lt;/strong>, the kernel:&lt;/p>
&lt;ul>
&lt;li>Maps &lt;code>.text&lt;/code> (code) to &lt;code>executable memory&lt;/code>.&lt;/li>
&lt;li>Maps &lt;code>.data&lt;/code> and &lt;code>.bss&lt;/code> to &lt;code>writable memory&lt;/code>.&lt;/li>
&lt;li>Sets up the &lt;strong>stack&lt;/strong> and environment variables.&lt;/li>
&lt;li>If there’s a &lt;code>INTERP&lt;/code> segment, loads the &lt;code>dynamic linker&lt;/code> (e.g., &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Dynamic Linking (if needed)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linking-if-needed">&lt;/span>
&lt;a href="#dynamic-linking-if-needed" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>If the program uses shared libraries:&lt;/p>
&lt;ul>
&lt;li>The kernel &lt;code>transfers control&lt;/code> to the dynamic linker.&lt;/li>
&lt;li>The linker resolves dependencies (e.g., &lt;code>libc.so.6&lt;/code>), loads libraries, and relocates addresses.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Start Execution&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="start-execution">&lt;/span>
&lt;a href="#start-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The kernel jumps to the &lt;strong>entry point&lt;/strong> specified in the ELF header (&lt;code>Entry point address&lt;/code>).&lt;/li>
&lt;li>For C programs, this is typically &lt;code>_start&lt;/code> (in &lt;code>crt1.o&lt;/code>), which initializes the C runtime, calls &lt;code>main()&lt;/code>, and exits cleanly.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>Example: Full Flow for &lt;code>hello&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-full-flow-for">&lt;/span>
&lt;a href="#example-full-flow-for" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ gcc -o hello hello.c &lt;span class="c1"># Compiles to ELF executable&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>File Type&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="file-type">&lt;/span>
&lt;a href="#file-type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> file hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hello: ELF 64-bit LSB pie executable, x86-64, version &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>SYSV&lt;span class="o">)&lt;/span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID&lt;span class="o">[&lt;/span>sha1&lt;span class="o">]=&lt;/span>ce69e228b62365b698bac3bf837cb1c5668a8079, &lt;span class="k">for&lt;/span> GNU/Linux 3.2.0, not stripped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldd hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> linux-vdso.so.1 &lt;span class="o">(&lt;/span>0x00007fffdd6be000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> libc.so.6 &lt;span class="o">=&lt;/span>&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o">(&lt;/span>0x00007cdea5a00000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /lib64/ld-linux-x86-64.so.2 &lt;span class="o">(&lt;/span>0x00007cdea5db7000&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Entry Point&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="entry-point">&lt;/span>
&lt;a href="#entry-point" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ readelf -h hello &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;Entry point&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry point address: 0x1060&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Execution Steps&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="execution-steps">&lt;/span>
&lt;a href="#execution-steps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Kernel maps the &lt;code>.text&lt;/code> segment to &lt;code>0x401000&lt;/code>.&lt;/li>
&lt;li>Starts executing &lt;code>_start&lt;/code> (&lt;code>assembler&lt;/code> boilerplate).&lt;/li>
&lt;li>Calls &lt;code>__libc_start_main()&lt;/code> (glibc initialization).&lt;/li>
&lt;li>Invokes &lt;code>main()&lt;/code> → prints &lt;code>&amp;quot;Hello, world!&amp;quot;&lt;/code>.&lt;/li>
&lt;li>Returns to the kernel via &lt;code>exit(0)&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Tools to Inspect ELF Files&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="tools-to-inspect-elf-files">&lt;/span>
&lt;a href="#tools-to-inspect-elf-files" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tool&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>readelf&lt;/code>&lt;/td>
&lt;td>Analyze headers, sections, symbols.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>objdump&lt;/code>&lt;/td>
&lt;td>Disassemble code, view relocations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>nm&lt;/code>&lt;/td>
&lt;td>List symbols (functions/variables).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gdb&lt;/code>&lt;/td>
&lt;td>Debug and inspect memory layout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>strings&lt;/code>&lt;/td>
&lt;td>Extract human-readable strings.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>&lt;strong>Summary Workflow&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="summary-workflow">&lt;/span>
&lt;a href="#summary-workflow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Source Code&lt;/strong> → &lt;code>gcc -c&lt;/code> → &lt;strong>ELF Object File&lt;/strong> (&lt;code>hello.o&lt;/code>)&lt;/li>
&lt;li>&lt;strong>Object Files&lt;/strong> → &lt;code>ld&lt;/code> → &lt;strong>ELF Executable&lt;/strong> (&lt;code>hello&lt;/code>)&lt;/li>
&lt;li>&lt;strong>OS Loads ELF&lt;/strong> → Maps Memory Segments → Resolves Dependencies → Executes Code&lt;/li>
&lt;/ol>
&lt;p>By understanding ELF, you gain insight into how software interacts with hardware, memory, and the operating system at the lowest level.&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.lurklurk.org/linkers/linkers.html" target="_blank" rel="noopener">linkers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Linker_%28computing%29" target="_blank" rel="noopener">wiki-linker&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Great Prompt</title><link>https://cloudedseal.github.io/blog/great-prompt/</link><pubDate>Mon, 28 Apr 2025 09:35:51 +0800</pubDate><guid>https://cloudedseal.github.io/blog/great-prompt/</guid><description>
&lt;h1>great prompt&lt;/h1>&lt;p>我在做 XX。如果你是一位专业人士，有更好的方法和建议吗？尽可能全面。&lt;/p></description></item><item><title>Master Type System</title><link>https://cloudedseal.github.io/blog/master-type-system/</link><pubDate>Fri, 25 Apr 2025 11:04:51 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-type-system/</guid><description>
&lt;h1>为啥需要 type system?&lt;/h1>&lt;h2>&lt;code>type&lt;/code> 就是契约&lt;span class="hx-absolute -hx-mt-20" id="type-就是契约">&lt;/span>
&lt;a href="#type-%e5%b0%b1%e6%98%af%e5%a5%91%e7%ba%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>At the hardware level, the machine does not know types in the way humans or high-level programming languages do. 硬件级别就是电信号了。&lt;code>type&lt;/code> 这种概念不存在。&lt;/li>
&lt;li>Bits are just bits (0s and 1s), and the CPU/memory has no intrinsic understanding of &amp;ldquo;integers,&amp;rdquo; &amp;ldquo;strings,&amp;rdquo; or &amp;ldquo;objects.&amp;rdquo;&lt;/li>
&lt;li>But types exist in programming languages to &lt;code>impose structure on those raw bits&lt;/code>, guiding both the &lt;code>programmer&lt;/code> and the &lt;code>compiler/interpreter&lt;/code> on how to &lt;code>interpret and manipulate&lt;/code> data safely and meaningfully.&lt;/li>
&lt;/ul>
&lt;h2>Bridging Human Intent &amp;lt;-&amp;gt; Machine Execution&lt;span class="hx-absolute -hx-mt-20" id="bridging-human-intent---machine-execution">&lt;/span>
&lt;a href="#bridging-human-intent---machine-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Types act as a &lt;code>contract&lt;/code>&lt;/p>
&lt;ul>
&lt;li>For &lt;code>humans&lt;/code>: They make code &lt;code>readable&lt;/code> and &lt;code>intentional&lt;/code> (e.g., int age vs. string name).&lt;/li>
&lt;li>For &lt;code>compilers&lt;/code>: They generate &lt;code>correct&lt;/code>, &lt;code>optimized&lt;/code> machine code (e.g., using ADD vs. FADD for integers vs. floats). 编译器根据数据类型使用相应的指令&lt;/li>
&lt;li>For &lt;code>safety&lt;/code>: They prevent &lt;code>invalid&lt;/code> operations (e.g., multiplying a string by a file handle).&lt;/li>
&lt;/ul>
&lt;h1>硬件视角下的数据&lt;/h1>&lt;h2>Bits Are Just Bits&lt;span class="hx-absolute -hx-mt-20" id="bits-are-just-bits">&lt;/span>
&lt;a href="#bits-are-just-bits" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>按照硬件电路的设计，就是一系列电信号而已。&lt;/p>
&lt;/blockquote>
&lt;h3>No inherent types&lt;span class="hx-absolute -hx-mt-20" id="no-inherent-types">&lt;/span>
&lt;a href="#no-inherent-types" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>没有所谓的类型。&lt;/p>
&lt;/blockquote>
&lt;p>To the CPU, memory is a giant array of bytes. When you write 42 (integer) or &amp;ldquo;hello&amp;rdquo; (string), the machine sees only binary patterns like 00101010 or 01101000 01100101 01101100 01101100 01101111.&lt;/p>
&lt;h3>Operations are &amp;ldquo;type-agnostic&amp;rdquo;&lt;span class="hx-absolute -hx-mt-20" id="operations-are-type-agnostic">&lt;/span>
&lt;a href="#operations-are-type-agnostic" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>给定一个指令，指令就会按照设计好的功能来使用 bits, 不管这个 bits 到底是啥。&lt;/p>
&lt;/blockquote>
&lt;p>The CPU executes instructions (e.g., ADD, MOV) based on the binary values in registers, not their &amp;ldquo;meaning.&amp;rdquo; For example:&lt;/p>
&lt;ul>
&lt;li>ADD treats bits as integers (using &lt;code>arithmetic circuits&lt;/code>).&lt;/li>
&lt;li>MOV copies bits &lt;code>blindly&lt;/code> from one location to another.&lt;/li>
&lt;li>The &lt;code>same bits&lt;/code> could represent an integer, a float, or part of a string, depending on context.&lt;/li>
&lt;/ul>
&lt;h1>How Types Work &amp;ldquo;Under the Hood&amp;rdquo;？&lt;/h1>&lt;p>&lt;strong>&lt;code>Types are a human/compiler abstraction layered on top of raw bits&lt;/code>&lt;/strong>&lt;/p>
&lt;p>Here’s how they translate to the machine:&lt;/p>
&lt;ol>
&lt;li>Compiler/Interpreter Assigns Meaning&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>A high-level language (e.g., C, Python) assigns semantic meaning to bits using types. For example:&lt;/li>
&lt;li>int x = 42: The compiler allocates 4 bytes (32 bits) and encodes 42 as 00101010&amp;hellip;, then enforces that x can only be used in integer operations (e.g., x + 5).&lt;/li>
&lt;li>float y = 3.14: The same 4 bytes are interpreted as an IEEE 754 floating-point number.&lt;/li>
&lt;li>char* s = &amp;ldquo;hello&amp;rdquo;: The compiler stores the ASCII codes for each character in memory and treats the variable as a pointer to the first byte.&lt;/li>
&lt;/ul>
&lt;p>Without types, the compiler wouldn’t know &lt;code>how to generate correct machine code&lt;/code> (e.g., integer vs. floating-point arithmetic instructions).&lt;/p>
&lt;ol start="2">
&lt;li>Runtime Type Tracking (Dynamically Typed Languages)
In languages like Python or JavaScript, types are &lt;code>checked at runtime&lt;/code>. For example:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span> &lt;span class="c1"># Interpreter tags `x` as an integer internally.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span> &lt;span class="c1"># Later, the tag changes to &amp;#34;string.&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The interpreter keeps metadata (e.g., type tags) to track what the bits represent. This adds overhead but allows flexibility.&lt;/p>
&lt;h1>What Happens Without High-Level Type Abstractions?&lt;/h1>&lt;p>If you remove types from the equation (e.g., programming in raw assembly or using memory pointers without safeguards):&lt;/p>
&lt;h2>Ambiguous Interpretation&lt;span class="hx-absolute -hx-mt-20" id="ambiguous-interpretation">&lt;/span>
&lt;a href="#ambiguous-interpretation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The same bits can be misused as different types, leading to chaos:&lt;/p>
&lt;p>// C code (no runtime type checking)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Reinterpret the bits of `x` as a float.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Prints nonsense: 42 as a float ≈ 5.9e-44.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Undefined Behavior&lt;span class="hx-absolute -hx-mt-20" id="undefined-behavior">&lt;/span>
&lt;a href="#undefined-behavior" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Memory corruption: Writing a string into memory allocated for an integer:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">malloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Buffer overflow (undefined behavior).
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>• Security vulnerabilities: Treating data as executable code (e.g., injection attacks).&lt;/p>
&lt;h2>No Guardrails&lt;span class="hx-absolute -hx-mt-20" id="no-guardrails">&lt;/span>
&lt;a href="#no-guardrails" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• You could &amp;ldquo;add&amp;rdquo; a string to a file handle, and the CPU would try to execute it, resulting in crashes or garbage output.&lt;/p>
&lt;h1>java 代码理解&lt;/h1>&lt;h2>Square.java&lt;span class="hx-absolute -hx-mt-20" id="squarejava">&lt;/span>
&lt;a href="#squarejava" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Square&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Square 字节码查看&lt;span class="hx-absolute -hx-mt-20" id="square-字节码查看">&lt;/span>
&lt;a href="#square-%e5%ad%97%e8%8a%82%e7%a0%81%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>javap -c Square&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Square&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Square&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokespecial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/Object.&amp;#34;&amp;lt;init&amp;gt;&amp;#34;:()V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">imul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ireturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fmul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">freturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lmul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lreturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到编译器根据 type 使用了对应的 mul 指令&lt;/p>
&lt;ol>
&lt;li>可以看到 int 类型对应的指令有 imul&lt;/li>
&lt;li>可以看到 float 类型对应的指令有 fmul&lt;/li>
&lt;li>可以看到 long 类型对应的指令有 lmul&lt;/li>
&lt;/ol>
&lt;h1>总结&lt;/h1>&lt;p>Types are a tool &lt;code>for humans&lt;/code>, &lt;code>not the machine&lt;/code>. Without them, programming would require &lt;code>manually managing every bit and operation&lt;/code>, akin to writing assembly code for every program—a recipe for bugs and inefficiency&lt;/p></description></item><item><title>Linux Process State</title><link>https://cloudedseal.github.io/blog/linux-process-state/</link><pubDate>Tue, 22 Apr 2025 17:07:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/linux-process-state/</guid><description>
&lt;h1>进程状态机&lt;/h1>&lt;p>最近在看南京大学&lt;a href="https://ics.nju.edu.cn/~jyy/" target="_blank" rel="noopener">蒋炎岩&lt;/a>老师的 2025 操作系统课程。里面有一句话, 计算机中的一切程序可以视为 &lt;code>state machine&lt;/code>。很有启发。进程有初始状态, CPU 这个无情的执行指令的机器执行一条指令后，程序的状态就发生了变化。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/linux-process-state-machine-userspace.drawio.svg" alt="linux-process-state-machine-userspace" loading="lazy" />&lt;/p>
&lt;h1>process state&lt;/h1>&lt;h2>Running/Runnable(R)&lt;span class="hx-absolute -hx-mt-20" id="runningrunnabler">&lt;/span>
&lt;a href="#runningrunnabler" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>万事俱备，只需要被 &lt;code>scheduler&lt;/code> 调度到 CPU 上去运行。&lt;/p>
&lt;h2>Interruptable Sleep(S)&lt;span class="hx-absolute -hx-mt-20" id="interruptable-sleeps">&lt;/span>
&lt;a href="#interruptable-sleeps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>处于这个状态的不会被 &lt;code>scheduler&lt;/code> 调度到 CPU 上去运行。&lt;/p>
&lt;h3>d_state.c code&lt;span class="hx-absolute -hx-mt-20" id="d_statec-code">&lt;/span>
&lt;a href="#d_statec-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">d_state.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pause&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o d_state d_state.c&lt;/li>
&lt;li>./d_state&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;/ol>
&lt;h2>Uninterruptible Sleep(D)&lt;span class="hx-absolute -hx-mt-20" id="uninterruptible-sleepd">&lt;/span>
&lt;a href="#uninterruptible-sleepd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>可能是 &lt;code>Disk Sleep&lt;/code> 的原因。状态用 &lt;code>D&lt;/code> 表示。&lt;/p>
&lt;h2>Stopped(T)&lt;span class="hx-absolute -hx-mt-20" id="stoppedt">&lt;/span>
&lt;a href="#stoppedt" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如使用 &lt;code>SIGSTOP&lt;/code> 信号，暂停的进程。&lt;/p>
&lt;h3>d_state.c code&lt;span class="hx-absolute -hx-mt-20" id="d_statec-code-1">&lt;/span>
&lt;a href="#d_statec-code-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">d_state.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pause&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o d_state d_state.c&lt;/li>
&lt;li>./d_state&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;li>kill -SIGTSTP $(pidof d_state)&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;/ol>
&lt;h2>Zombie(Z)&lt;span class="hx-absolute -hx-mt-20" id="zombiez">&lt;/span>
&lt;a href="#zombiez" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>进程已经执行了 &lt;code>exit&lt;/code>, &lt;code>exit code&lt;/code> 还没有被&lt;code>父进程&lt;/code> &lt;code>wait/waitpid&lt;/code> 读取。也就是进程的 &lt;code>PCB&lt;/code> 还没有从 kernel 的 &lt;code>process table&lt;/code> 中清除。&lt;/p>
&lt;h3>zombie.c code&lt;span class="hx-absolute -hx-mt-20" id="zombiec-code">&lt;/span>
&lt;a href="#zombiec-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">zombie.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sched.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">pid_t&lt;/span> &lt;span class="n">child_pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fork&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">child_pid&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Child process
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Child PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">getpid&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Child exits immediately
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Parent process
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">getpid&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Child PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">child_pid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent is sleeping (check for zombie with `ps`).&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Parent sleeps (does not call wait())
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent exiting.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o zombie zombie.c&lt;/li>
&lt;li>./zombie&lt;/li>
&lt;li>ps aux | grep zombie&lt;/li>
&lt;/ol>
&lt;h1>system calls changing process state on Linux&lt;/h1>&lt;h2>&lt;code>fork()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="fork">&lt;/span>
&lt;a href="#fork" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Creates a new child process by duplicating the parent process.&lt;/p>
&lt;p>• State Change: The child starts in the ready/runnable state (waiting for CPU time).&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value:&lt;/p>
&lt;p>• &lt;code>0&lt;/code> to the child process.&lt;/p>
&lt;p>• &lt;code>Child's PID&lt;/code> to the parent.&lt;/p>
&lt;p>• &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Used in spawning new processes (e.g., shell commands).&lt;/p>
&lt;h2>&lt;code>execve()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="execve">&lt;/span>
&lt;a href="#execve" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Replaces the current process&amp;rsquo;s memory space with a new program.&lt;/p>
&lt;p>• State Change: The process remains in the &lt;code>running state&lt;/code> but executes new code.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>path&lt;/code>: Path to the executable.&lt;/p>
&lt;p>• &lt;code>argv&lt;/code>: Command-line arguments.&lt;/p>
&lt;p>• &lt;code>envp&lt;/code>: Environment variables.&lt;/p>
&lt;p>• Return Value: Only returns on error (&lt;code>-1&lt;/code>).&lt;/p>
&lt;p>• Example: Running programs like &lt;code>ls&lt;/code> or &lt;code>grep&lt;/code> from a shell.&lt;/p>
&lt;h2>&lt;code>exit()&lt;/code> / &lt;code>_exit()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="exit--_exit">&lt;/span>
&lt;a href="#exit--_exit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Terminates the current process.&lt;/p>
&lt;p>• State Change: Moves the process to &lt;code>zombie&lt;/code> (until the parent calls &lt;code>wait()&lt;/code>).&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Exit status code.&lt;/p>
&lt;p>• Return Value: None (does not return).&lt;/p>
&lt;p>• Difference: &lt;code>exit()&lt;/code> flushes buffers; &lt;code>_exit()&lt;/code> is a raw system call.&lt;/p>
&lt;p>• Example: Clean termination after program completion.&lt;/p>
&lt;h2>&lt;code>wait()&lt;/code> / &lt;code>waitpid()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="wait--waitpid">&lt;/span>
&lt;a href="#wait--waitpid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Suspends the parent until a child changes state (exits or stops).&lt;/p>
&lt;p>• State Change: Parent enters sleeping state until child exits.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Stores child&amp;rsquo;s exit status.&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Specific child to wait for (in &lt;code>waitpid&lt;/code>).&lt;/p>
&lt;p>• Return Value: Child PID on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Parent process ensuring a child completes first.&lt;/p>
&lt;h2>&lt;code>kill()&lt;/code> / &lt;code>raise()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="kill--raise">&lt;/span>
&lt;a href="#kill--raise" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Sends signals to processes (e.g., &lt;code>SIGTERM&lt;/code>, &lt;code>SIGSTOP&lt;/code>).&lt;/p>
&lt;p>• State Change:&lt;/p>
&lt;p>• &lt;code>SIGSTOP&lt;/code>: Moves process to stopped state.&lt;/p>
&lt;p>• &lt;code>SIGCONT&lt;/code>: Resumes a stopped process.&lt;/p>
&lt;p>• &lt;code>SIGKILL&lt;/code>: Terminates immediately.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Target process ID.&lt;/p>
&lt;p>• &lt;code>sig&lt;/code>: Signal to send.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Terminating a frozen process via &lt;code>kill -9 PID&lt;/code>.&lt;/p>
&lt;h2>&lt;code>pause()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="pause">&lt;/span>
&lt;a href="#pause" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Suspends the process until a signal is received.&lt;/p>
&lt;p>• State Change: Process enters &lt;strong>&lt;code>interruptable sleeping&lt;/code>&lt;/strong> state.&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value: Always &lt;code>-1&lt;/code> (interrupted by signal).&lt;/p>
&lt;p>• Example: Waiting indefinitely for user input or signals.&lt;/p>
&lt;h2>&lt;code>nanosleep()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="nanosleep">&lt;/span>
&lt;a href="#nanosleep" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Pauses execution for a specified time.&lt;/p>
&lt;p>• State Change: Process enters &lt;strong>&lt;code>interruptible sleep&lt;/code>&lt;/strong>.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>req&lt;/code>: Time to sleep.&lt;/p>
&lt;p>• &lt;code>rem&lt;/code>: Remaining time if interrupted.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: High-precision delays in real-time applications.&lt;/p>
&lt;h2>&lt;code>ptrace()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ptrace">&lt;/span>
&lt;a href="#ptrace" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Allows a process to control another (debugging, tracing).&lt;/p>
&lt;p>• State Change: Traced process enters &lt;strong>&lt;code>stopped&lt;/code>&lt;/strong> state on signals.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>request&lt;/code>: Action (e.g., &lt;code>PTRACE_ATTACH&lt;/code>, &lt;code>PTRACE_CONT&lt;/code>).&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Target process ID.&lt;/p>
&lt;p>• Return Value: Varies by request; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Debuggers like &lt;code>gdb&lt;/code> using breakpoints.&lt;/p>
&lt;h2>&lt;code>clone()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="clone">&lt;/span>
&lt;a href="#clone" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Creates a child process or thread with configurable behavior.&lt;/p>
&lt;p>• State Change: New process/thread starts in ready state.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>fn&lt;/code>: Function for the child to execute.&lt;/p>
&lt;p>• &lt;code>flags&lt;/code>: Options (e.g., &lt;code>CLONE_VM&lt;/code> for shared memory).&lt;/p>
&lt;p>• &lt;code>arg&lt;/code>: Arguments for &lt;code>fn&lt;/code>.&lt;/p>
&lt;p>• Return Value: Child PID on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Implementing threads (used by &lt;code>pthread&lt;/code> library).&lt;/p>
&lt;h2>&lt;code>sched_yield()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="sched_yield">&lt;/span>
&lt;a href="#sched_yield" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Voluntarily yields the CPU to other processes/threads.&lt;/p>
&lt;p>• State Change: Process moves from running to &lt;code>ready&lt;/code> state.&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Cooperative multitasking in real-time apps.&lt;/p>
&lt;h2>&lt;code>exit_group()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="exit_group">&lt;/span>
&lt;a href="#exit_group" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Terminates all threads in a process.&lt;/p>
&lt;p>• State Change: All threads enter zombie state.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Exit code.&lt;/p>
&lt;p>• Return Value: Does not return.&lt;/p>
&lt;p>• Example: Terminating multi-threaded applications.&lt;/p>
&lt;h1>Key Signals Affecting Process State&lt;/h1>&lt;p>• &lt;code>SIGSTOP&lt;/code>: Forcefully stops a process.&lt;/p>
&lt;p>• &lt;code>SIGCONT&lt;/code>: Resumes a stopped process.&lt;/p>
&lt;p>• &lt;code>SIGTERM&lt;/code>: Requests graceful termination.&lt;/p>
&lt;p>• &lt;code>SIGKILL&lt;/code>: Forcefully kills a process.&lt;/p>
&lt;h1>Summary Table&lt;/h1>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>System Call&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;th>Key State Change&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>fork()&lt;/code>&lt;/td>
&lt;td>Create child process&lt;/td>
&lt;td>Child → Runnable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>execve()&lt;/code>&lt;/td>
&lt;td>Replace process image&lt;/td>
&lt;td>Process runs new code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>exit()&lt;/code>&lt;/td>
&lt;td>Terminate process&lt;/td>
&lt;td>Process → Zombie&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>wait()&lt;/code>&lt;/td>
&lt;td>Wait for child state change&lt;/td>
&lt;td>Parent → Sleeping&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kill()&lt;/code>&lt;/td>
&lt;td>Send signal (e.g., stop/resume)&lt;/td>
&lt;td>Target → Stopped/Running&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pause()&lt;/code>&lt;/td>
&lt;td>Sleep until signal&lt;/td>
&lt;td>Process → Sleeping&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ptrace()&lt;/code>&lt;/td>
&lt;td>Debug/trace another process&lt;/td>
&lt;td>Target → Stopped&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clone()&lt;/code>&lt;/td>
&lt;td>Create thread/process&lt;/td>
&lt;td>New entity → Runnable&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>These system calls and signals form the backbone of process lifecycle management in Linux, enabling creation, termination, synchronization, and debugging of processes.&lt;/p></description></item><item><title>Asm How Glibc Wrap Syscall</title><link>https://cloudedseal.github.io/blog/asm-how-glibc-wrap-syscall/</link><pubDate>Mon, 21 Apr 2025 15:34:28 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-how-glibc-wrap-syscall/</guid><description>
&lt;blockquote>
&lt;p>实验平台: x86_64 GNU/Linux mint22.1&lt;/p>
&lt;/blockquote>
&lt;h1>使用 &lt;code>glibc&lt;/code> 的函数&lt;/h1>&lt;p>write1.c&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello, glibc!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// glibc&amp;#39;s write() wrapper
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o write1 write1.c&lt;/li>
&lt;li>使用 &lt;code>ltrace ./write1&lt;/code> 查看调用了 write 库函数&lt;/li>
&lt;/ol>
&lt;h1>不使用 glibc 的函数&lt;/h1>&lt;p>write2.c&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;errno.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;syscall.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">ssize_t&lt;/span> &lt;span class="nf">write_no_glibc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">size_t&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">asm&lt;/span> &lt;span class="k">volatile&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;=a&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Output: result in rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">__NR_write&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;D&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;S&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Inputs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;rcx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;r11&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;memory&amp;#34;&lt;/span> &lt;span class="c1">// Clobbered registers
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">errno&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Set errno on error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Return bytes written
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello, glibc!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write_no_glibc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o write2 write2.c&lt;/li>
&lt;li>使用 &lt;code>ltrace ./write2&lt;/code> 查看没有调用 write 库函数&lt;/li>
&lt;/ol>
&lt;h1>How glibc Wraps System Calls​​&lt;/h1>&lt;h2>​System Call Number​​&lt;span class="hx-absolute -hx-mt-20" id="system-call-number">&lt;/span>
&lt;a href="#system-call-number" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Each system call (e.g., write, read) is assigned a &lt;code>unique number&lt;/code> (e.g., __NR_write). 要使用哪一个 syscall&lt;/p>
&lt;h2>Argument Setup​​&lt;span class="hx-absolute -hx-mt-20" id="argument-setup">&lt;/span>
&lt;a href="#argument-setup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The wrapper loads the system call number and arguments into specific registers (architecture-dependent). 设置 syscall 的参数&lt;/p>
&lt;h2>​Kernel Transition​​&lt;span class="hx-absolute -hx-mt-20" id="kernel-transition">&lt;/span>
&lt;a href="#kernel-transition" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The wrapper uses an instruction like syscall (x86-64) to switch to kernel mode. 进入 kernel mode&lt;/p>
&lt;h2>Result Handling​​&lt;span class="hx-absolute -hx-mt-20" id="result-handling">&lt;/span>
&lt;a href="#result-handling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>After the kernel finishes, the wrapper checks for errors, sets errno if needed, and returns the result. 处理返回值&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/ltrace.1.html" target="_blank" rel="noopener">https://man7.org/linux/man-pages/man1/ltrace.1.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Cmd Strace</title><link>https://cloudedseal.github.io/blog/cmd-strace/</link><pubDate>Sat, 19 Apr 2025 16:29:04 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cmd-strace/</guid><description>
&lt;h1>syscall&lt;/h1>&lt;p>操作系统运行在 kernel space, 拥有整个系统的控制权。
应用程序运行在 user space, 拥有部分权限。
这就是隔离。
To prevent user applications from &lt;code>accessing or modifying&lt;/code> critical operating system data.
想让操作系统做些事情怎么办？使用 syscall。&lt;/p>
&lt;h1>strace&lt;/h1>&lt;h2>strace -t -ff -o MainTest.log -f java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--t--ff--o-maintestlog--f--java-maintest">&lt;/span>
&lt;a href="#strace--t--ff--o-maintestlog--f--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>-t&lt;/code> time&lt;/li>
&lt;li>&lt;code>-ff&lt;/code> follow-fork&lt;/li>
&lt;li>&lt;code>-o&lt;/code> output&lt;/li>
&lt;/ol>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=futex,write java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracefutexwrite-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracefutexwrite-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-ff -o 每一个进程的 log 单独写到一个文件&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">13468&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21792
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">455425&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21793
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1254&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21794
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1361&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21795
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">3802&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21796
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1677&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21797
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1705&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21798
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1797&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21810
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">6087&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21811
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">5541&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21812
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1444&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21813
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">33890&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21814
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">3996&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21822&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=futex,write java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracefutexwrite--java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracefutexwrite--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-e expr 多个 syscall CSV 形式&lt;/p>
&lt;/blockquote>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%process java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-traceprocess-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-traceprocess-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%memory -a java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracememory--a-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracememory--a-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%ipc java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-traceipc--java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-traceipc--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://jvns.ca/strace-zine-v2.pdf" target="_blank" rel="noopener">https://jvns.ca/strace-zine-v2.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/strace.1.html" target="_blank" rel="noopener">https://man7.org/linux/man-pages/man1/strace.1.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://strace.io/" target="_blank" rel="noopener">https://strace.io/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java String Concat in Loop</title><link>https://cloudedseal.github.io/blog/java-string-concat-in-loop/</link><pubDate>Wed, 09 Apr 2025 10:56:10 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-string-concat-in-loop/</guid><description>
&lt;h1>分析环境&lt;/h1>&lt;blockquote>
&lt;p>jdk8&lt;/p>
&lt;/blockquote>
&lt;h1>分析代码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">StringConcat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>main 字节码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ldc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// String $&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">astore_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iconst_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">istore_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bipush&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">if_icmpge&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">36&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// class java/lang/StringBuilder&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dup&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokespecial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.&amp;#34;&amp;lt;init&amp;gt;&amp;#34;:()V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">22&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">23&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">26&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">astore_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iinc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">goto&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">36&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getstatic&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Field java/lang/System.out:Ljava/io/PrintStream;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/io/PrintStream.println:(Ljava/lang/String;)V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">43&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>main 字节码执行图解分析&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/java-string-concat-in-loop.drawio.svg" alt="循环里字符串连接.drawio.svg" loading="lazy" />&lt;/p>
&lt;blockquote>
&lt;p>由图可以看出，在外部定义的字符串变量 s，在 for 循环中和其他变量进行拼接，最终得到连接后的 s。&lt;br>
循环的每一轮都会生成一个新的 StringBuilder 对象，进行两次 append 操作，append(s) 和 append(i)。最终这一轮的 s 是由 sb.toString() 得来的。&lt;br>
如果循环次数是 1万次，需要创建的 StringBuilder 是 1 万个。这样是对性能肯定有影响的。短时间内产生大量的对象。&lt;br>&lt;/p>
&lt;/blockquote>
&lt;h1>结论&lt;/h1>&lt;blockquote>
&lt;p>循环次数过多时，不要在循环里拼接需要的字符串。&lt;/p>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.ldc" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.ldc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.astore_n" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.astore_n&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iload_n" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iload_n&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.bipush" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.bipush&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.if_icmp_cond" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.if_icmp_cond&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.new" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.new&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iinc" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iinc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokevirtual" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokevirtual&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Name Id Pairs</title><link>https://cloudedseal.github.io/blog/name-id-pairs/</link><pubDate>Wed, 09 Apr 2025 10:16:41 +0800</pubDate><guid>https://cloudedseal.github.io/blog/name-id-pairs/</guid><description>
&lt;h1>name id pairs&lt;/h1>&lt;blockquote>
&lt;p>对于 OS 来说，id 更重要。&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">symbolic name(human readable name)&lt;/th>
&lt;th style="text-align: center">number name(low level name)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">service name&lt;/td>
&lt;td style="text-align: center">port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">user name&lt;/td>
&lt;td style="text-align: center">user id&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">process name&lt;/td>
&lt;td style="text-align: center">process id&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">host name&lt;/td>
&lt;td style="text-align: center">ip address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">file name&lt;/td>
&lt;td style="text-align: center">inode number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">signal name&lt;/td>
&lt;td style="text-align: center">signal number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">syscall name&lt;/td>
&lt;td style="text-align: center">syscall number&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Java Aqs</title><link>https://cloudedseal.github.io/blog/java-aqs/</link><pubDate>Fri, 21 Mar 2025 10:54:27 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-aqs/</guid><description>
&lt;h1>abstract queued synchronizer 是啥？&lt;/h1>&lt;blockquote>
&lt;p>AQS is an abstract class that provides a skeleton for &lt;code>managing thread contention&lt;/code>, &lt;code>queuing&lt;/code>, and &lt;code>state synchronization&lt;/code>.
It uses a &lt;code>FIFO wait(sync) queue&lt;/code> to manage threads waiting for access to a shared resource and an &lt;code>atomic integer (state)&lt;/code> to track the synchronizer&amp;rsquo;s status (e.g., locked/unlocked, available permits).&lt;/p>
&lt;/blockquote>
&lt;h1>AQS 数据结构&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Head of the wait queue, lazily initialized. Except for
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * initialization, it is modified only via method setHead. Note:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * If head exists, its waitStatus is guaranteed not to be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * CANCELLED.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 等待队列的 head&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Tail of the wait queue, lazily initialized. Modified only via
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * method enq to add new wait node.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 等待队列的 tail&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The synchronization state.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同步状态, 这就是所谓的 lock&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The current owner of exclusive mode synchronization.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exclusiveOwnerThread&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">继承自&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractOwnableSynchronizer&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>Node 数据结构&lt;/h1>&lt;blockquote>
&lt;p>组成双向链表，在之上构建等待队列&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 下一个 Node 等待状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 前驱节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 后继节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">入队等待的线程&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>RentrantLock.lock 整体概览&lt;/h1>&lt;p>&lt;a href="https://raw.githubusercontent.com/buybyte/pictures/main/img/CAS_acquire.png" target="_blank" rel="noopener">RentrantLock.lock 流程概览&lt;/a>&lt;/p>
&lt;h2>FairSync.lock 分析&lt;span class="hx-absolute -hx-mt-20" id="fairsynclock-分析">&lt;/span>
&lt;a href="#fairsynclock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>acquire(1) 分析&lt;span class="hx-absolute -hx-mt-20" id="acquire1-分析">&lt;/span>
&lt;a href="#acquire1-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">acquireQueued&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addWaiter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">EXCLUSIVE&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">selfInterrupt&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;code>tryAcquire&lt;/code> 若返回为 true, 表明获取 lock 成功, !tryAcquire 为 false, 获取 lock 流程结束。&lt;/li>
&lt;li>&lt;code>tryAcquire&lt;/code> 若返回为 false, 表明获取 lock 失败, 为啥失败, 因为有其他线程获取了, 但是还没有释放。
&lt;ol>
&lt;li>流程进入 &lt;code>addWaiter&lt;/code>, 也就是当前线程去排队等待获取 lock。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3>tryAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="tryacquire-分析">&lt;/span>
&lt;a href="#tryacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Fair version of tryAcquire. Don&amp;#39;t grant access unless
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * recursive call or no waiters or is first.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 当前申请获取锁的线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getState&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 的状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 是 unlock 状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">hasQueuedPredecessors&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 看一下队列中是不是已有在等待获取锁的线程，这就是所谓公平的体现，FIFO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 没有在等待获取锁的线程, 获取锁，这里 CAS 可能会失败&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setExclusiveOwnerThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 本线程持有这个锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getExclusiveOwnerThread&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 该线程已经持有了锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 直接改变状态，这就是所谓可重入的意思,已经获取锁的线程，可以再次获取该锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Maximum lock count exceeded&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 这里可能会抛异常&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>addWaiter 分析&lt;span class="hx-absolute -hx-mt-20" id="addwaiter-分析">&lt;/span>
&lt;a href="#addwaiter-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>线程获取锁失败, 到阻塞队列去排队。这里是 addWaiter(null, 1)&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Creates and enqueues node for current thread and given mode.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return the new node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">addWaiter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Try the fast path of enq; backup to full enq on failure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 说明队列不空&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置 node 前驱&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">compareAndSetTail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// AQS 设置新的 tail&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置 pred 后继&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 返回包装申请锁的线程的 Node 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 说明队列为空&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 返回包装申请锁的线程的 Node 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>enq 返回 node 的前驱节点&lt;span class="hx-absolute -hx-mt-20" id="enq-返回-node-的前驱节点">&lt;/span>
&lt;a href="#enq-%e8%bf%94%e5%9b%9e-node-%e7%9a%84%e5%89%8d%e9%a9%b1%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h4>addWaiter 图示&lt;span class="hx-absolute -hx-mt-20" id="addwaiter-图示">&lt;/span>
&lt;a href="#addwaiter-%e5%9b%be%e7%a4%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>链表，还是画一画图，理解的更好&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-addWaiter.drawio.svg" alt="addWaiter-图示" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>tail == null, 等待队列里一个等待的线程 Node 也没有
&lt;ul>
&lt;li>enq 入队, 创建一个 Node 节点,作为 head, 再添加要获取锁的节点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>tail != null, 等待队列里已经有等待的线程 Node 了
&lt;ul>
&lt;li>直接添加到等待队列队尾&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>acquireQueued 分析&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-分析">&lt;/span>
&lt;a href="#acquirequeued-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Acquires in exclusive uninterruptible mode for thread already in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * queue. Used by condition wait methods as well as acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param arg the acquire argument
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if interrupted while waiting
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">acquireQueued&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(;;)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 注意是循环&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">predecessor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 是等待队列的第一个 &amp;amp;&amp;amp; tryAcquire , true 表明获取了锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置成 head, 旧的 head 出队&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// help GC&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shouldParkAfterFailedAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 锁已被其他线程获取, 会走到这里&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parkAndCheckInterrupt&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cancelAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>acquireQueued for 循环退出两种情况&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-for-循环退出两种情况">&lt;/span>
&lt;a href="#acquirequeued-for-%e5%be%aa%e7%8e%af%e9%80%80%e5%87%ba%e4%b8%a4%e7%a7%8d%e6%83%85%e5%86%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>当前节点是等待队列第一个 &amp;amp;&amp;amp; tryAcquire 成功获取了锁&lt;/li>
&lt;li>tryAcquire 抛出了 Error, finally 的 failed 逻辑会执行 cancelAcquire&lt;/li>
&lt;/ol>
&lt;h5>acquireQueued 两轮循环分析&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-两轮循环分析">&lt;/span>
&lt;a href="#acquirequeued-%e4%b8%a4%e8%bd%ae%e5%be%aa%e7%8e%af%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-acquireQueuedPark.drawio.svg" alt="acquireQueued 两轮分析" loading="lazy" />&lt;/p>
&lt;h5>cancelAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="cancelacquire-分析">&lt;/span>
&lt;a href="#cancelacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Cancels an ongoing attempt to acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">cancelAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Ignore if node doesn&amp;#39;t exist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Skip cancelled predecessors 跳过取消的节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// predNext is the apparent node to unsplice. CASes below will&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// fail if not, in which case, we lost race vs another cancel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// or signal, so no further action is necessary.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Can use unconditional write instead of CAS here.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// After this atomic step, other Nodes can skip past us.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Before, we are free of interference from other threads.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CANCELLED&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// If we are the tail, remove ourselves. 队尾&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetTail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// expect update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetNext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// node expect null&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// If successor needs signal, try to set pred&amp;#39;s next-link&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// so it will get one. Otherwise wake it up to propagate.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不是队尾，也就是等待队列的其他节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不是等待队列中第一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// pred.thread != null 表示前驱节点有线程在等待获取锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消节点有后继节点 next 且后继节点 waitStatus &amp;lt;= 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetNext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// pred 设置新的 next 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消等待的节点是等待队列中的第一个节点, 叫醒后继节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// help GC&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>if 为 true 判断分析&lt;span class="hx-absolute -hx-mt-20" id="if-为-true-判断分析">&lt;/span>
&lt;a href="#if-%e4%b8%ba-true-%e5%88%a4%e6%96%ad%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>为了将&lt;code>取消节点&lt;/code>的&lt;code>前驱节点&lt;/code>和&lt;code>取消节点&lt;/code>的&lt;code>后继节点&lt;/code>进行链接&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>pred != head 为 true 表示取消节点不是等待队列中第一个节点&lt;/li>
&lt;li>((ws = pred.waitStatus) == Node.SIGNAL || (ws &amp;lt;= 0 &amp;amp;&amp;amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) 为 true
&lt;ol>
&lt;li>(ws = pred.waitStatus) == Node.SIGNAL 为 true, 前驱节点的 waitStatus 为 -1&lt;/li>
&lt;li>(ws &amp;lt;= 0 &amp;amp;&amp;amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL)) 为 true
&lt;ol>
&lt;li>ws &amp;lt;= 0 为 true, 前驱节点的 waitStatus 为 0, 那就 compareAndSetWaitStatus 前驱节点的 waitStatus 为 -1&lt;/li>
&lt;li>compareAndSetWaitStatus 返回为 true, 设置前驱节点的的 waitStatus 为 -1 成功&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pred.thread != null 为 true 前驱节点有等待的线程&lt;/li>
&lt;/ol>
&lt;h4>shouldParkAfterFailedAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="shouldparkafterfailedacquire-分析">&lt;/span>
&lt;a href="#shouldparkafterfailedacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>为即将被 block 的线程，设置前驱节点的 waitStatus 为 -1, 表示下一个节点需要被唤醒&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Checks and updates status for a node that failed to acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Returns true if thread should block. This is the main signal
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * control in all acquire loops. Requires that pred == node.prev.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param pred node&amp;#39;s predecessor holding status
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if thread should block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">shouldParkAfterFailedAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This node has already set status asking a release
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to signal it, so it can safely park.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程取消了获取锁, 找到一个没有取消的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Predecessor was cancelled. Skip over predecessors and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * indicate retry.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">do&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * waitStatus must be 0 or PROPAGATE. Indicate that we
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * need a signal, but don&amp;#39;t park yet. Caller will need to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * retry to make sure it cannot acquire before parking.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置前驱节点的 waitStatus 为 -1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>parkAndCheckInterrupt 分析&lt;span class="hx-absolute -hx-mt-20" id="parkandcheckinterrupt-分析">&lt;/span>
&lt;a href="#parkandcheckinterrupt-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>线程状态进入 waiting 的重要逻辑&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Convenience method to park and then check if interrupted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if interrupted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">parkAndCheckInterrupt&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LockSupport&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">park&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 调用线程执行到这里就不再继续向下执行了, 这是理解线程 waiting 的关键&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">interrupted&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程被唤醒后才会 return, 执行下一轮的 acquireQueued&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>FairSync.unlock 分析&lt;span class="hx-absolute -hx-mt-20" id="fairsyncunlock-分析">&lt;/span>
&lt;a href="#fairsyncunlock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>release 分析&lt;span class="hx-absolute -hx-mt-20" id="release-分析">&lt;/span>
&lt;a href="#release-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Releases in exclusive mode. Implemented by unblocking one or
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * more threads if {@link #tryRelease} returns true.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This method can be used to implement method {@link Lock#unlock}.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param arg the release argument. This value is conveyed to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * {@link #tryRelease} but is otherwise uninterpreted and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * can represent anything you like.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return the value returned from {@link #tryRelease}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">release&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tryRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// waitStatus 为 -1, 表明下一个节点需要被唤醒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 唤醒 head 节点后的节点，也就是等待队列中第一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>tryRelease 分析&lt;span class="hx-absolute -hx-mt-20" id="tryrelease-分析">&lt;/span>
&lt;a href="#tryrelease-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>该方法可能抛出异常&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">tryRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getState&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getExclusiveOwnerThread&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 是不是持有该锁的线程在 release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalMonitorStateException&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 已完全释放，因为可以重入&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setExclusiveOwnerThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 设置成 unlock 状态，也就是 0，这就是所谓的释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>unparkSuccessor 分析&lt;span class="hx-absolute -hx-mt-20" id="unparksuccessor-分析">&lt;/span>
&lt;a href="#unparksuccessor-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Wakes up node&amp;#39;s successor, if one exists.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * If status is negative (i.e., possibly needing signal) try
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to clear in anticipation of signalling. It is OK if this
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * fails or if status is changed by waiting thread.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Thread to unpark is held in successor, which is normally
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * just the next node. But if cancelled or apparently null,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * traverse backwards from tail to find the actual
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * non-cancelled successor.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LockSupport&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unpark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 唤醒这个线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-acquireQueuedUnpark.drawio.svg" alt="acquireQueued 被 unpark 唤醒的线程继续执行的逻辑" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://javadoop.com/post/AbstractQueuedSynchronizer" target="_blank" rel="noopener">https://javadoop.com/post/AbstractQueuedSynchronizer 强烈推荐&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java User Space Schedule</title><link>https://cloudedseal.github.io/blog/java-user-space-schedule/</link><pubDate>Mon, 10 Mar 2025 17:13:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-user-space-schedule/</guid><description>
&lt;blockquote>
&lt;p>A user-space scheduler manages tasks or &amp;ldquo;threads&amp;rdquo; entirely within an application, without relying on the operating system (OS) scheduler. This is different from kernel-level scheduling, where the OS manages threads.
什么是用户态调度？可以简单理解为自定义一堆任务, 由用户决定怎样执行这些任务。不涉及操作系统的进程/线程调度。&lt;/p>
&lt;/blockquote>
&lt;h1>举例理解&lt;/h1>&lt;h2>Task 自定义的任务&lt;span class="hx-absolute -hx-mt-20" id="task-自定义的任务">&lt;/span>
&lt;a href="#task-%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e4%bb%bb%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">steps&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">runStep&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Task is done&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; is running. Steps left: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Task has more work&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>自定义的调度&lt;span class="hx-absolute -hx-mt-20" id="自定义的调度">&lt;/span>
&lt;a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e8%b0%83%e5%ba%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.LinkedList&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Queue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">UserSpaceScheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 以 FIFO 顺序执行 Task&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LinkedList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasMoreWork&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">runStep&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hasMoreWork&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// deciding which task runs next&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Re-add to the queue if not done&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Driver class&lt;span class="hx-absolute -hx-mt-20" id="driver-class">&lt;/span>
&lt;a href="#driver-class" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UserSpaceScheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserSpaceScheduler&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task B&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task C&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何工作&lt;span class="hx-absolute -hx-mt-20" id="如何工作">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%b7%a5%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Cooperative Multitasking&lt;span class="hx-absolute -hx-mt-20" id="cooperative-multitasking">&lt;/span>
&lt;a href="#cooperative-multitasking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>Tasks are not OS threads. They are objects managed in a queue.
不是 OS 的线程&lt;/p>
&lt;/blockquote>
&lt;h3>Explicit Yielding&lt;span class="hx-absolute -hx-mt-20" id="explicit-yielding">&lt;/span>
&lt;a href="#explicit-yielding" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>The scheduler runs each task for one &amp;ldquo;step,&amp;rdquo; then moves to the next. Tasks don’t block—they voluntarily give up control.&lt;/p>
&lt;/blockquote>
&lt;h3>No OS Involvement&lt;span class="hx-absolute -hx-mt-20" id="no-os-involvement">&lt;/span>
&lt;a href="#no-os-involvement" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>The OS sees only the main thread running scheduler.run().&lt;/p>
&lt;/blockquote></description></item><item><title>Learn Llm</title><link>https://cloudedseal.github.io/blog/learn-llm/</link><pubDate>Mon, 17 Feb 2025 17:10:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/learn-llm/</guid><description>
&lt;h1>pre-training&lt;/h1>&lt;p>&lt;a href="https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1" target="_blank" rel="noopener">https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1&lt;/a>&lt;/p>
&lt;p>100000 symbols(tokens)
raw text &amp;mdash;&amp;gt;tokenization &amp;mdash;&amp;gt; token&lt;/p>
&lt;h2>tokenization&lt;span class="hx-absolute -hx-mt-20" id="tokenization">&lt;/span>
&lt;a href="#tokenization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://tiktokenizer.vercel.app/?model=cl100k_base" target="_blank" rel="noopener">https://tiktokenizer.vercel.app/?model=cl100k_base&lt;/a>&lt;/p>
&lt;h2>statistic token simulator&lt;span class="hx-absolute -hx-mt-20" id="statistic-token-simulator">&lt;/span>
&lt;a href="#statistic-token-simulator" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>这就是所谓的 prediction
参数 各个 token 的权重
模型有大量的知识，存储在上亿的参数之中。这些参数可以视为对超大规模的知识进行的一种有损压缩。超大规模知识的模糊记忆。
按照统计规律给出所谓的答案
模型需要中间结果
概率、统计
in-context learning&lt;/p>
&lt;h1>post-training&lt;/h1>&lt;p>对话集结构 &amp;mdash;&amp;gt; 一维 token 序列
&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/conversation-structure-to-token-sequence.png" alt="conversation-structure-to-token-sequence" loading="lazy" />&lt;/p>
&lt;p>instruct-gpt&lt;/p>
&lt;p>强化学习
reinforcement learning
监督学习
supervised earning
supervised-fine-tuning&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://weibo.com/2194035935/PefWkzTkK#attitude" target="_blank" rel="noopener">视频讲解&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tiktokenizer.vercel.app/" target="_blank" rel="noopener">https://tiktokenizer.vercel.app/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bbycroft.net/llm" target="_blank" rel="noopener">https://bbycroft.net/llm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hyperbolic.xyz/" target="_blank" rel="noopener">https://hyperbolic.xyz/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://atlas.nomic.ai/map/0ce65783-c3a9-40b5-895d-384933f50081/a7b46301-022f-45d8-bbf4-98107eabdbac" target="_blank" rel="noopener">对话数据集&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1" target="_blank" rel="noopener">互联网数据集&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Cache Miss Anomaly</title><link>https://cloudedseal.github.io/blog/cache-miss-anomaly/</link><pubDate>Thu, 13 Feb 2025 16:25:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cache-miss-anomaly/</guid><description>
&lt;h1>缓存 miss 类型&lt;/h1>&lt;h2>compulsory miss&lt;span class="hx-absolute -hx-mt-20" id="compulsory-miss">&lt;/span>
&lt;a href="#compulsory-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>一开始缓存里啥都没有，cold-start miss&lt;/p>
&lt;/blockquote>
&lt;h2>capacity miss&lt;span class="hx-absolute -hx-mt-20" id="capacity-miss">&lt;/span>
&lt;a href="#capacity-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>缓存容量有限，需要 evict 一些页&lt;/p>
&lt;/blockquote>
&lt;h2>conflict miss&lt;span class="hx-absolute -hx-mt-20" id="conflict-miss">&lt;/span>
&lt;a href="#conflict-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>cpu cache 的 set-associativity 的缓存行&lt;/p>
&lt;/blockquote>
&lt;h1>缓存越大，命中率就越高么？不是的&lt;/h1>&lt;blockquote>
&lt;p>1, 2, 3, 4, 1, 2, 5, 1, 2, 3, 4, 5
采用 FIFO 的 swap 策略。容量为 3 的缓存，比容量为 4 的缓存命中率更高&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.concurrent.ArrayBlockingQueue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">CacheFifo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;缓存页: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayBlockingQueue&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayBlockingQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cache miss:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;total :&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cache hit:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nl">缓存页&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">25&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nl">缓存页&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">16666666666666663&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/vm-beyondphys-policy.pdf" target="_blank" rel="noopener">https://pages.cs.wisc.edu/~remzi/OSTEP/vm-beyondphys-policy.pdf&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>lsof examples</title><link>https://cloudedseal.github.io/blog/cmd-lsof/</link><pubDate>Fri, 10 Jan 2025 17:31:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cmd-lsof/</guid><description>
&lt;h2>通用&lt;span class="hx-absolute -hx-mt-20" id="通用">&lt;/span>
&lt;a href="#%e9%80%9a%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>^ 表示非&lt;/li>
&lt;li>多个值是 &lt;code>CSV&lt;/code> 形式&lt;/li>
&lt;/ol>
&lt;h2>lsof -i(internet)&lt;span class="hx-absolute -hx-mt-20" id="lsof--iinternet">&lt;/span>
&lt;a href="#lsof--iinternet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-i 后可以有空格
[46][protocol][@hostname|hostaddr][:service|port]&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>46&lt;/code> specifies the IP version, IPv4 or IPv6 that applies to the following address.&amp;lsquo;6&amp;rsquo; may be be specified only if the UNIX dialect supports IPv6. If neither &amp;lsquo;4&amp;rsquo; nor &amp;lsquo;6&amp;rsquo; is specified, the following address applies to all IP versions.&lt;/li>
&lt;li>&lt;code>protocol&lt;/code> is a protocol name - TCP, UDP&lt;/li>
&lt;li>&lt;code>hostname&lt;/code> is an Internet host name. Unless a specific IP version is specified, open network files associated with host names of all versions will be selected.&lt;/li>
&lt;li>&lt;code>hostaddr&lt;/code> is a numeric Internet IPv4 address in dot form; or an IPv6 numeric address in colon form enclosed in brackets, if the UNIX dialect supports IPv6. When an IP version is selected, only its numeric addresses may be specified.&lt;/li>
&lt;li>&lt;code>service&lt;/code> is an /etc/services name - e.g., smtp -or a list of them.&lt;/li>
&lt;li>&lt;code>port&lt;/code> is a port number, or a list of them.&lt;/li>
&lt;/ol>
&lt;h3>lsof &lt;code>-i&lt;/code>@10.10.129.99:8080&lt;span class="hx-absolute -hx-mt-20" id="lsof--i1010129998080">&lt;/span>
&lt;a href="#lsof--i1010129998080" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>lsof &lt;code>-i&lt;/code>4tcp&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4tcp">&lt;/span>
&lt;a href="#lsof--i4tcp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all ipv4 tcp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>4udp&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4udp">&lt;/span>
&lt;a href="#lsof--i4udp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all ipv4 udp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>4udp@localhost&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4udplocalhost">&lt;/span>
&lt;a href="#lsof--i4udplocalhost" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all localhost ipv4 udp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>&lt;a href="mailto:4tcp@10.10.129.99" >4tcp@10.10.129.99&lt;/a>&lt;span class="hx-absolute -hx-mt-20" id="lsof--i">&lt;/span>
&lt;a href="#lsof--i" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all 10.10.129.99 tcp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code> :ssh&lt;span class="hx-absolute -hx-mt-20" id="lsof--i-ssh">&lt;/span>
&lt;a href="#lsof--i-ssh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>service ssh&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>:22&lt;span class="hx-absolute -hx-mt-20" id="lsof--i22">&lt;/span>
&lt;a href="#lsof--i22" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>port 22&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>TCP -sTCP:LISTEN&lt;span class="hx-absolute -hx-mt-20" id="lsof--itcp--stcplisten">&lt;/span>
&lt;a href="#lsof--itcp--stcplisten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>tcp state Listen&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-p&lt;/code> pid&lt;span class="hx-absolute -hx-mt-20" id="lsof--p-pid">&lt;/span>
&lt;a href="#lsof--p-pid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>by pid&lt;/p>
&lt;/blockquote>
&lt;h2>lsof /test.sock&lt;span class="hx-absolute -hx-mt-20" id="lsof-testsock">&lt;/span>
&lt;a href="#lsof-testsock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>lsof &lt;code>-t&lt;/code> /test.sock&lt;span class="hx-absolute -hx-mt-20" id="lsof--t-testsock">&lt;/span>
&lt;a href="#lsof--t-testsock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-t(terse) 简要的 get pid&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-c&lt;/code> &lt;code>^&lt;/code>java&lt;span class="hx-absolute -hx-mt-20" id="lsof--c-java">&lt;/span>
&lt;a href="#lsof--c-java" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>找到以非 java 命令(command)开始的&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-c&lt;/code> java&lt;span class="hx-absolute -hx-mt-20" id="lsof--c-java-1">&lt;/span>
&lt;a href="#lsof--c-java-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>找到以 java 命令(command)开始的&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>+d&lt;/code> /dir&lt;span class="hx-absolute -hx-mt-20" id="lsof-d-dir">&lt;/span>
&lt;a href="#lsof-d-dir" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>该 /dir目录(directory) 下所有&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-d&lt;/code> 1&lt;span class="hx-absolute -hx-mt-20" id="lsof--d-1">&lt;/span>
&lt;a href="#lsof--d-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>查看 descriptor = 1(标准输出)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-d&lt;/code> 1,2&lt;span class="hx-absolute -hx-mt-20" id="lsof--d-12">&lt;/span>
&lt;a href="#lsof--d-12" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>查看 descriptor = 1,2(标准输出、标准错误)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-a&lt;/code> &lt;code>-c&lt;/code> java &lt;code>-d&lt;/code> 3-10&lt;span class="hx-absolute -hx-mt-20" id="lsof--a--c-java--d-3-10">&lt;/span>
&lt;a href="#lsof--a--c-java--d-3-10" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>条件组合查询 -a(and) -c(command) -d(范围)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-u&lt;/code> root&lt;span class="hx-absolute -hx-mt-20" id="lsof--u-root">&lt;/span>
&lt;a href="#lsof--u-root" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>该 root 下所有 -u(user)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-U&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="lsof--u">&lt;/span>
&lt;a href="#lsof--u" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-U(Unix domain socket)&lt;/p>
&lt;/blockquote></description></item><item><title>Master Iptables</title><link>https://cloudedseal.github.io/blog/master-iptables/</link><pubDate>Tue, 07 Jan 2025 11:15:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-iptables/</guid><description>
&lt;h1>数据包&lt;/h1>&lt;ol>
&lt;li>接收&lt;/li>
&lt;li>发送&lt;/li>
&lt;li>转发 &lt;code>路由器&lt;/code>&lt;/li>
&lt;/ol>
&lt;h1>iptables 三要素&lt;/h1>&lt;h2>table&lt;span class="hx-absolute -hx-mt-20" id="table">&lt;/span>
&lt;a href="#table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>tables allow you to do very &lt;code>specific things&lt;/code> with packets. 对数据包做特定的处理&lt;/p>
&lt;/blockquote>
&lt;h3>filter table &lt;code>default&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="filter-table-default">&lt;/span>
&lt;a href="#filter-table-default" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>mangle table&lt;span class="hx-absolute -hx-mt-20" id="mangle-table">&lt;/span>
&lt;a href="#mangle-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>nat table&lt;span class="hx-absolute -hx-mt-20" id="nat-table">&lt;/span>
&lt;a href="#nat-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>raw table&lt;span class="hx-absolute -hx-mt-20" id="raw-table">&lt;/span>
&lt;a href="#raw-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>chain&lt;span class="hx-absolute -hx-mt-20" id="chain">&lt;/span>
&lt;a href="#chain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>each of these tables are &lt;code>composed of a few default chains&lt;/code>. These chains allow you to &lt;code>filter&lt;/code> packets at &lt;code>various points&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h3>PREROUTING&lt;span class="hx-absolute -hx-mt-20" id="prerouting">&lt;/span>
&lt;a href="#prerouting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>INPUT&lt;span class="hx-absolute -hx-mt-20" id="input">&lt;/span>
&lt;a href="#input" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>OUTPUT&lt;span class="hx-absolute -hx-mt-20" id="output">&lt;/span>
&lt;a href="#output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>FORWARD&lt;span class="hx-absolute -hx-mt-20" id="forward">&lt;/span>
&lt;a href="#forward" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>POSTROUTING&lt;span class="hx-absolute -hx-mt-20" id="postrouting">&lt;/span>
&lt;a href="#postrouting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>target&lt;span class="hx-absolute -hx-mt-20" id="target">&lt;/span>
&lt;a href="#target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>terminating target&lt;span class="hx-absolute -hx-mt-20" id="terminating-target">&lt;/span>
&lt;a href="#terminating-target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>一旦匹配立刻决定一个网络包的最终命运。如 &lt;code>ACCEPT&lt;/code>,&lt;code>DROP&lt;/code>,&lt;code>REJECT&lt;/code>&lt;/li>
&lt;li>chain 上的 target 依次匹配, 一旦匹配就执行关联的操作。匹配不到执行默认的 target&lt;/li>
&lt;li>可以配置 default policy, 也是一个 target&lt;/li>
&lt;li>所有 chain 的 default policy 是 &lt;code>ACCEPT&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3>non-terminating target&lt;span class="hx-absolute -hx-mt-20" id="non-terminating-target">&lt;/span>
&lt;a href="#non-terminating-target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>如 &lt;code>LOG&lt;/code> 记录 kernel 日志&lt;/li>
&lt;/ol>
&lt;h2>iptables examples&lt;span class="hx-absolute -hx-mt-20" id="iptables-examples">&lt;/span>
&lt;a href="#iptables-examples" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-t 不指定，默认是 filter table. 为啥? filter 常用呗&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>N&lt;/em>ew-chain
&lt;em>X&lt;/em>delete-chain
&lt;em>L&lt;/em>ist
&lt;em>I&lt;/em>nsert
&lt;em>A&lt;/em>ppend
&lt;em>D&lt;/em>elete
&lt;em>R&lt;/em>eplace
&lt;em>F&lt;/em>lush
&lt;em>P&lt;/em>olicy
&lt;em>j&lt;/em>ump
&lt;em>m&lt;/em>atch &lt;em>m&lt;/em>odule
&lt;em>s&lt;/em>ource
&lt;em>d&lt;/em>estination
&lt;em>n&lt;/em>umeric 不进行 reverse dns lookup
&lt;em>p&lt;/em>rotocol
&lt;em>i&lt;/em>nput interface
&lt;em>o&lt;/em>nput interface&lt;/p>
&lt;h3>list rules&lt;span class="hx-absolute -hx-mt-20" id="list-rules">&lt;/span>
&lt;a href="#list-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>iptables -L &amp;ndash;line-numbers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>iptables -A INPUT -p tcp &amp;ndash;dport 22 -j LOG&lt;/p>
&lt;/li>
&lt;li>
&lt;p>iptables -D INPUT -p tcp &amp;ndash;dport 22 -j LOG&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>append rules&lt;span class="hx-absolute -hx-mt-20" id="append-rules">&lt;/span>
&lt;a href="#append-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables &lt;code>-A&lt;/code> INPUT -s 221.194.47.0/24 -j REJECT&lt;/li>
&lt;/ol>
&lt;h3>delete rules&lt;span class="hx-absolute -hx-mt-20" id="delete-rules">&lt;/span>
&lt;a href="#delete-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables &lt;code>-D&lt;/code> INPUT -s 221.194.47.0/24 -j REJECT&lt;/li>
&lt;li>iptables -D INPUT &lt;code>12&lt;/code>&lt;/li>
&lt;li>iptables -D INPUT &lt;code>9&lt;/code>&lt;/li>
&lt;li>iptables -F&lt;/li>
&lt;li>iptables -F INPUT&lt;/li>
&lt;/ol>
&lt;h3>insert/replace rules&lt;span class="hx-absolute -hx-mt-20" id="insertreplace-rules">&lt;/span>
&lt;a href="#insertreplace-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -I INPUT 1 -s 114.114.114.114 -j ACCEPT&lt;/li>
&lt;li>iptables -R INPUT 1 -s 59.45.175.10 -J ACCEPT&lt;/li>
&lt;/ol>
&lt;h3>protocals/modules&lt;span class="hx-absolute -hx-mt-20" id="protocalsmodules">&lt;/span>
&lt;a href="#protocalsmodules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -A INPUT -p tcp -m tcp -dport 22 -s 59.45.175.0/24 -j DROP&lt;/li>
&lt;li>iptables -A INPUT -p tcp -m multiport -dports 22,49101 -s 59.45.175.0/24 -j DROP&lt;/li>
&lt;li>iptables -A input -p icmp -m icmp -icmp-type 17 -j DROP&lt;/li>
&lt;/ol>
&lt;h3>connection tracking module&lt;span class="hx-absolute -hx-mt-20" id="connection-tracking-module">&lt;/span>
&lt;a href="#connection-tracking-module" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>change default policy&lt;span class="hx-absolute -hx-mt-20" id="change-default-policy">&lt;/span>
&lt;a href="#change-default-policy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -P INPUT DROP&lt;/li>
&lt;li>iptables -t nat -P INPUT DROP&lt;/li>
&lt;/ol>
&lt;h3>custom chain&lt;span class="hx-absolute -hx-mt-20" id="custom-chain">&lt;/span>
&lt;a href="#custom-chain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -N ssh-rules&lt;/li>
&lt;li>iptables -A ssh-rules -s 18.130.0.0./16 -j ACCEPT&lt;/li>
&lt;li>iptables -A ssh-rules -s 18.11.0.0/16 -j ACCEPT&lt;/li>
&lt;li>iptables -A ssh-rules -j DROP&lt;/li>
&lt;li>iptables -A INPUT -p tcp -m tcp &amp;ndash;dport 22 -j &lt;code>ssh-rules&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2>默认的 iptables 配置&lt;span class="hx-absolute -hx-mt-20" id="默认的-iptables-配置">&lt;/span>
&lt;a href="#%e9%bb%98%e8%ae%a4%e7%9a%84-iptables-%e9%85%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>所有 chain 的默认 policy 都是 ACCEPT&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t filter -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain FORWARD &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t nat -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain POSTROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t mangle -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain FORWARD &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain POSTROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t raw -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.booleanworld.com/depth-guide-iptables-linux-firewall/" target="_blank" rel="noopener">depth-guide-iptables-linux-firewall-强烈推荐&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/O084fYzUFk7jAzJ2DDeADg" target="_blank" rel="noopener">iptables-解析&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/iptables.8.html" target="_blank" rel="noopener">iptables&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/iptables-extensions.8.html" target="_blank" rel="noopener">iptables-extensions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linode.com/docs/guides/linux-router-and-ip-forwarding/#enable-ip-forwarding" target="_blank" rel="noopener">ip-forward&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manned.org/iptables" target="_blank" rel="noopener">https://manned.org/iptables&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>My Source List</title><link>https://cloudedseal.github.io/blog/my-source-list/</link><pubDate>Mon, 06 Jan 2025 11:25:58 +0800</pubDate><guid>https://cloudedseal.github.io/blog/my-source-list/</guid><description>
&lt;ol>
&lt;li>&lt;a href="https://arthurchiao.art/" target="_blank" rel="noopener">https://arthurchiao.art/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alexanderell.is/posts/" target="_blank" rel="noopener">https://alexanderell.is/posts/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.ryanlevick.com/" target="_blank" rel="noopener">https://blog.ryanlevick.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://brennan.io/blog/" target="_blank" rel="noopener">https://brennan.io/blog/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bhoot.dev/" target="_blank" rel="noopener">https://bhoot.dev/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chsasank.com/" target="_blank" rel="noopener">https://chsasank.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codewords.recurse.com/about" target="_blank" rel="noopener">https://codewords.recurse.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://crockford.com/blog.html" target="_blank" rel="noopener">https://crockford.com/blog.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devconnected.com/" target="_blank" rel="noopener">https://devconnected.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://joearms.github.io/#Index" target="_blank" rel="noopener">https://joearms.github.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jitwxs.cn/" target="_blank" rel="noopener">https://jitwxs.cn/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kiosk007.top/" target="_blank" rel="noopener">https://kiosk007.top/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kunststube.net/" target="_blank" rel="noopener">https://kunststube.net/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/" target="_blank" rel="noopener">https://linuxize.com/post/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matt.might.net/" target="_blank" rel="noopener">https://matt.might.net/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.marcobehler.com/" target="_blank" rel="noopener">https://www.marcobehler.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://natanyellin.com/posts/" target="_blank" rel="noopener">https://natanyellin.com/posts/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://robertovitillo.com/blog" target="_blank" rel="noopener">https://robertovitillo.com/blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://research.swtch.com/" target="_blank" rel="noopener">https://research.swtch.com/ Russ Cox&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://strikefreedom.top/" target="_blank" rel="noopener">https://strikefreedom.top/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://serhack.me/blog/" target="_blank" rel="noopener">https://serhack.me/blog/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.0xffffff.org/" target="_blank" rel="noopener">https://www.0xffffff.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.booleanworld.com/" target="_blank" rel="noopener">https://www.booleanworld.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jmeiners.com" target="_blank" rel="noopener">https://www.jmeiners.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.timdbg.com/" target="_blank" rel="noopener">https://www.timdbg.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.taniarascia.com/" target="_blank" rel="noopener">https://www.taniarascia.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manybutfinite.com/archives/" target="_blank" rel="noopener">https://manybutfinite.com/archives/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hutusi.com/" target="_blank" rel="noopener">胡涂说&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.qiufeng.blue/" target="_blank" rel="noopener">秋风的笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zsythink.net/" target="_blank" rel="noopener">朱双印&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shuyi.tech/" target="_blank" rel="noopener">陈树义&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Null Device</title><link>https://cloudedseal.github.io/blog/null-device/</link><pubDate>Fri, 03 Jan 2025 10:53:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/null-device/</guid><description>
&lt;h1>NULL device 是啥？&lt;/h1>&lt;p>The null device is a special file that &lt;code>discards&lt;/code> all data written to it, but reports that the &lt;code>write operation succeeded&lt;/code>.&lt;/p>
&lt;h1>用在何处？&lt;/h1>&lt;blockquote>
&lt;p>java 执行外部的命令, 但是不需要外部命令的执行结果. 直接丢弃 stdout, stderr.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DiscardProcessOutput&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create the ProcessBuilder with the command to run&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ProcessBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ProcessBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;someCommand&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Merge stdout and stderr and redirect them to /dev/null (or NUL in Windows)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectErrorStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;os.name&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Windows&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;NUL&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/dev/null&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Start the process&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Process&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">process&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Wait for the process to finish&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exitCode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitFor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Process exited with code: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exitCode&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.putorius.net/introduction-to-dev-null.html" target="_blank" rel="noopener">dev-null&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ss64.com/nt/nul.html" target="_blank" rel="noopener">windows-NUL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man4/null.4.html" target="_blank" rel="noopener">man7 /dev/null&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/313111/is-there-a-dev-null-on-windows" target="_blank" rel="noopener">NUL in Windows seems to be actually a virtual path in any folder&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Ipc Unix Domain Socket</title><link>https://cloudedseal.github.io/blog/ipc-unix-domain-socket/</link><pubDate>Tue, 23 Jul 2024 15:00:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/ipc-unix-domain-socket/</guid><description>
&lt;h1>unix domain socket 是啥?&lt;/h1>&lt;blockquote>
&lt;p>A &lt;code>Unix domain socket (UDS)&lt;/code> or &lt;code>IPC socket&lt;/code> (inter-process communication) is a data communications &lt;code>endpoint&lt;/code> for exchanging data between processes executing on the &lt;code>same&lt;/code> host operating system.
同一台机器两个不同的进程之间交换数据，优化过的 socket。&lt;/p>
&lt;/blockquote>
&lt;h1>问题背景&lt;/h1>&lt;blockquote>
&lt;p>java 写的程序需要和 c 写的程序交换数据，且两个程序运行在同一台机器上。&lt;/p>
&lt;/blockquote>
&lt;h1>gradle 配置&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-native-common
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;com.kohlschutter.junixsocket&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">name:&lt;/span> &lt;span class="s1">&amp;#39;junixsocket-native-common&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">version:&lt;/span> &lt;span class="s1">&amp;#39;2.9.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-common
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;com.kohlschutter.junixsocket&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">name:&lt;/span> &lt;span class="s1">&amp;#39;junixsocket-common&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">version:&lt;/span> &lt;span class="s1">&amp;#39;2.9.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>java 服务端程序示例&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXServerSocket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXSocket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXSocketAddress&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.slf4j.Logger&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.slf4j.LoggerFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.charset.StandardCharsets&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Files&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Path&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Paths&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * unix domain socket 进程通信
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@SuppressWarnings&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s">&amp;#34;CatchAndPrintStackTrace&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/* errorprone */&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;PMD.CognitiveComplexity&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MsgServer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user.home&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ipc.sock&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoggerFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MsgServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">startServer&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Paths&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UDS path: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socketFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXServerSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXServerSocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newInstance&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setReuseAddress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXSocketAddress&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socketFile&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MsgServer 监听 socket: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">interrupted&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isClosed&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Waiting for connection...&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">accept&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ClientHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;msg-receiver&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;server.accept() 出错&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MsgServer terminated&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">startServer&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;启动 MsgServer 失败&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 处理连接,以接收 utf-8 字符串为例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ClientHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ClientHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInputStream&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OutputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getOutputStream&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PrintWriter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PrintWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BufferedReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BufferedReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InputStreamReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">StandardCharsets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">UTF_8&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readLine&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equalsIgnoreCase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bye&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handleMsg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received successfully&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">flush&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;客户端关闭了连接&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">close&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;关闭连接出错&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleMsg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// process receive string msg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>C 客户端程序示例&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/socket.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/un.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define SOCKET_PATH &amp;#34;/path/to/ipc.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">client_fd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello from 中国!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create a socket
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">client_fd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AF_UNIX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SOCK_STREAM&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;socket error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Set up the address structure
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AF_UNIX&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">strncpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SOCKET_PATH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Connect to the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;connect error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Send a message to the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;write error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Receive a response from the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;read error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received response: %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/kohlschutter/junixsocket" target="_blank" rel="noopener">junixsocket&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Unix_domain_socket" target="_blank" rel="noopener">Unix_domain_socket&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>My Tool Box</title><link>https://cloudedseal.github.io/blog/my-tool-box/</link><pubDate>Fri, 19 Apr 2024 17:31:31 +0800</pubDate><guid>https://cloudedseal.github.io/blog/my-tool-box/</guid><description>
&lt;h1>video &amp;amp; audio&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/iawia002/lux" target="_blank" rel="noopener">lux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ttsmaker.com/zh-cn" target="_blank" rel="noopener">ttsmaker&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>表格&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html" target="_blank" rel="noopener">ascii-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ptable.com/#%E6%80%A7%E8%B4%A8" target="_blank" rel="noopener">元素周期表&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>digital&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.socpk.com/" target="_blank" rel="noopener">socpk&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>颜色&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.zhongguose.com/" target="_blank" rel="noopener">中国色&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://colors.ichuantong.cn/" target="_blank" rel="noopener">传统色&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>网络&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://wificard.io/" target="_blank" rel="noopener">WiFi 连接卡&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.submarinecablemap.com/" target="_blank" rel="noopener">海底电缆&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>工具集&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.youxiaohou.com/" target="_blank" rel="noopener">油小猴&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devtool.tech/" target="_blank" rel="noopener">开发工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://imyshare.com/" target="_blank" rel="noopener">神秘的热心网友&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tool.butof.com/" target="_blank" rel="noopener">波特工具站&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>java&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://adoptium.net/" target="_blank" rel="noopener">JDK&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>启动盘制作&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://rufus.ie/zh/" target="_blank" rel="noopener">https://rufus.ie/zh/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ventoy.net/" target="_blank" rel="noopener">https://ventoy.net/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>windows&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://live.sysinternals.com/" target="_blank" rel="noopener">sysinternals&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>编程&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://cron.help/" target="_blank" rel="noopener">cron-expression&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://crontab.guru/" target="_blank" rel="noopener">crontab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://explainshell.com/" target="_blank" rel="noopener">explainshell&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>隐私&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://firstpartysimulator.org/" target="_blank" rel="noopener">Cover Your Tracks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://browserleaks.com/" target="_blank" rel="noopener">browserleaks&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>explorer&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://astexplorer.net/" target="_blank" rel="noopener">AST&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mbebenita.github.io/WasmExplorer/" target="_blank" rel="noopener">WASM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godbolt.org/" target="_blank" rel="noopener">compiler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://exuanbo.xyz/assembler-simulator/?shareable=eJytU8Fu2zAM_RVOZ28wip0cYEDstGg7Jx1WrAUW5aDYTCNElgSJDhoU-fdR7up16w4tUOukJ75H8pF-ENhqckEUD0Jb35MoxAQ-vuqTdiLpRsdeGZjp6I06wA-rifFXK0i6nH-Da1KBJJ8JXPadB68iAW0RWkUKSK0NptBZCSDFORrj4NYF036Q4gmHPJd20CkSNL-6AZjWGUCVJ9m52iHfwTttWdrBXrfo4Pt0PkaXKTo_GaPLZ9Gplo0OXFWzVUE1hAG0HeBIQdu7UaVilWVZr5JM5fzhTxub4LqUkImsWNXS1s75sdrltF5lCX5B5ERV_VTFWDffFI0tRX5PSheLKvUtf7v5ou0kYfGenukY1yjSzo708m_6vz4M9Pe0QVLFOzBQ0hQTY4vNDvTmf_nwXkeKw-YsfkKy8G37drqYvYlgz1yAzgXkzKrzBmMGEQ02BGfaIHyBK48WTh8fP0krMrEOqHaPcxHFcnXMROMsBWcMDn8a3zb6rg-D7wlQPblpjNjxpouCQo9M4cHsrj1iK4rPmSDdYbiwbMFeGVGc5Hmeib3uvuJhrW3L5nOujTIRj8fjL4pBMxs" target="_blank" rel="noopener">assembler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://brainfuck-visualizer.netlify.app/" target="_blank" rel="noopener">brainfuck-visualizer&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Zookeeper Transaction Log</title><link>https://cloudedseal.github.io/blog/zookeeper-transaction-log/</link><pubDate>Sat, 21 Oct 2023 14:19:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/zookeeper-transaction-log/</guid><description>
&lt;blockquote>
&lt;p>分析的 zookeeper 代码版本为 3.9.1 。 &lt;br>
zookeer 的 transaction log 为二进制文件，采用的是大端序。&lt;br>
zookeeper 数据持久化的功能在 &lt;code>zookeeper/server/persistence&lt;/code> 下。&lt;br>
解析日志就可以获取 zookeeper 的数据。可以用来实现实时备份到另一个独立的 zookeeper 集群。&lt;/p>
&lt;/blockquote>
&lt;h1>日志文件命名规则&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Creates a valid transaction log file name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param zxid used as a file name suffix (extension)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return file name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">makeLogName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">zxid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileTxnLog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LOG_FILE_PREFIX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHexString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zxid&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>日志文件布局&lt;/h1>&lt;p>由 File Header、TxnList、ZeroPad 三部分构成&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-transaction-log-file-format.svg" alt="zk-transaction-log-file-format" loading="lazy" />&lt;/p>
&lt;h1>&lt;code>log.500000004&lt;/code> 文件分析&lt;/h1>&lt;p>分析的日志文件 &lt;a href="https://raw.githubusercontent.com/stardustman/pictures/main/img/log.500000004" target="_blank" rel="noopener">log.500000004&lt;/a>&lt;/p>
&lt;h2>二进制文件查看&lt;span class="hx-absolute -hx-mt-20" id="二进制文件查看">&lt;/span>
&lt;a href="#%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%96%87%e4%bb%b6%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd log.500000004.new&lt;span class="p">|&lt;/span>head -n &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000: 5a4b 4c47 &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ZKLG............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000010: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> eaa1 0b2a &lt;span class="m">0000&lt;/span> &lt;span class="m">0030&lt;/span> &lt;span class="m">0300&lt;/span> c755 .......*...0...U
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000020: cf61 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0004&lt;/span> .a..............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000030: &lt;span class="m">0000&lt;/span> 018b &lt;span class="m">1815&lt;/span> 73ab ffff fff6 &lt;span class="m">0000&lt;/span> &lt;span class="m">7530&lt;/span> ......s.......u0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000040: &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> 000a a5c7 &lt;span class="m">7377&lt;/span> &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> ..........swB...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000050: 005f 8e12 2a00 &lt;span class="m">0000&lt;/span> 5f03 00c7 55cf &lt;span class="m">6100&lt;/span> ._..*..._...U.a.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000060: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0001&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000070: 8b18 159e &lt;span class="m">3300&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f ....3......../a/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000080: &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> &lt;span class="m">6475&lt;/span> &lt;span class="m">7374&lt;/span> ffff ffff &lt;span class="m">0000&lt;/span> &lt;span class="m">0001&lt;/span> stardust........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000090: &lt;span class="m">0000&lt;/span> 001f &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> 776f 726c &lt;span class="m">6400&lt;/span> &lt;span class="m">0000&lt;/span> ........world...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000a0: &lt;span class="m">0661&lt;/span> 6e79 6f6e &lt;span class="m">6500&lt;/span> &lt;span class="m">0000&lt;/span> 000d &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> .anyone.........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000b0: &lt;span class="m">0000&lt;/span> 000c &lt;span class="m">6113&lt;/span> &lt;span class="m">4355&lt;/span> &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0007&lt;/span> 0a0e ....a.CUB.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000c0: &lt;span class="m">4000&lt;/span> &lt;span class="m">0000&lt;/span> 4c03 00c7 55cf &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> @...L...U.a.....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000d0: &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0600&lt;/span> &lt;span class="m">0001&lt;/span> 8b18 15e5 ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000e0: b800 &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> ........./a/star
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000f0: &lt;span class="m">6475&lt;/span> &lt;span class="m">7374&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0009&lt;/span> &lt;span class="m">7468&lt;/span> &lt;span class="m">6553&lt;/span> 686f &lt;span class="m">6775&lt;/span> dust....theShogu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000100: 6e00 &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0c14 &lt;span class="m">8609&lt;/span> n...............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000110: d442 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> e9ee 12d7 &lt;span class="m">0000&lt;/span> &lt;span class="m">0058&lt;/span> &lt;span class="m">0300&lt;/span> .B...........X..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000120: c755 cf61 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0003&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> .U.a............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000130: &lt;span class="m">0007&lt;/span> &lt;span class="m">0000&lt;/span> 018b &lt;span class="m">1816&lt;/span> 66ef &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> ........f.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000140: 000b 2f61 2f73 &lt;span class="m">7461&lt;/span> &lt;span class="m">7264&lt;/span> &lt;span class="m">7573&lt;/span> &lt;span class="m">7400&lt;/span> &lt;span class="m">0000&lt;/span> ../a/stardust...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000150: &lt;span class="m">1574&lt;/span> &lt;span class="m">6865&lt;/span> &lt;span class="m">3133&lt;/span> 4c6f &lt;span class="m">6164&lt;/span> 734f &lt;span class="m">6654&lt;/span> &lt;span class="m">6865&lt;/span> .the13LoadsOfThe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000160: &lt;span class="m">5368&lt;/span> 6f67 756e &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> Shogun..........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000170: 000c 39b4 35f7 &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> 001a cb0a c700 ..9.5.B.........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000180: &lt;span class="m">0000&lt;/span> 3b03 00c7 55cf &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> ..&lt;span class="p">;&lt;/span>...U.a.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000190: &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0800&lt;/span> &lt;span class="m">0001&lt;/span> 8b18 167c ed00 .............&lt;span class="p">|&lt;/span>..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001a0: &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> &lt;span class="m">6475&lt;/span> ......./a/stardu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001b0: &lt;span class="m">7374&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> 000b 676d 37e4 &lt;span class="m">4200&lt;/span> st........gm7.B.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001c0: &lt;span class="m">0000&lt;/span> 00ef 370a d300 &lt;span class="m">0000&lt;/span> &lt;span class="m">3003&lt;/span> 00c7 55cf ....7.....0...U.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001d0: &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0900&lt;/span> a...............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001e0: &lt;span class="m">0001&lt;/span> 8b18 16f9 d4ff ffff f500 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001f0: &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0b67 6d37 e442 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> .......gm7.B....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000200: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000210: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000220: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>log 二进制文件图解&lt;span class="hx-absolute -hx-mt-20" id="log-二进制文件图解">&lt;/span>
&lt;a href="#log-%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%96%87%e4%bb%b6%e5%9b%be%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-log.500000004.jpg" alt="log.50000004.jpg" loading="lazy" />&lt;/p>
&lt;h3>log.&lt;code>500000004&lt;/code> 怎么来的？&lt;span class="hx-absolute -hx-mt-20" id="log500000004-怎么来的">&lt;/span>
&lt;a href="#log500000004-%e6%80%8e%e4%b9%88%e6%9d%a5%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>可以看到 txn log 文件，写入的第一个 transaction 的 &lt;code>zxid&lt;/code> 就是 &lt;code>0x0000000500000004&lt;/code>。这个就是 log.&lt;code>500000004&lt;/code> 的由来。&lt;/p>
&lt;/blockquote>
&lt;h3>什么是 &lt;code>zxid&lt;/code>？&lt;span class="hx-absolute -hx-mt-20" id="什么是-zxid">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-zxid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-zxid-format.svg" alt="zookeeper-zxid" loading="lazy" />&lt;/p>
&lt;h3>文件结构&lt;span class="hx-absolute -hx-mt-20" id="文件结构">&lt;/span>
&lt;a href="#%e6%96%87%e4%bb%b6%e7%bb%93%e6%9e%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>第一行 FileHeader。&lt;/li>
&lt;li>第二行开始是 transaction log, 每一个 transaction log 用 0x42 作为 EOF。可以知道 &lt;code>log.500000004&lt;/code>有 6 个 transaction。&lt;/li>
&lt;li>剩余的是 Zero Pad。&lt;/li>
&lt;/ol>
&lt;h3>transaction(txn) 类型&lt;span class="hx-absolute -hx-mt-20" id="transactiontxn-类型">&lt;/span>
&lt;a href="#transactiontxn-%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>仅分析 &lt;code>log.500000004&lt;/code>中的 6 个。还有其他类型的 txn。&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>transaction 代码位置&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="transaction-代码位置">&lt;/span>
&lt;a href="#transaction-%e4%bb%a3%e7%a0%81%e4%bd%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>zookeeper-jute 中 org.apache.zookeeper.txn 下, 这个是 jute compiler 生成的一系列类。&lt;/p>
&lt;h4>&lt;strong>create session txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="create-session-txn">&lt;/span>
&lt;a href="#create-session-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 1 个 txn 的 type= 0xfffffff6=-10&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L98" target="_blank" rel="noopener">OpCode=-10&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>create txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="create-txn">&lt;/span>
&lt;a href="#create-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 2 个 txn 的 type= 0x00000001=1&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L40" target="_blank" rel="noopener">OpCode=1&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>set data txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="set-data-txn">&lt;/span>
&lt;a href="#set-data-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 3、4 个 txn 的 type= 0x00000005=5&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L40" target="_blank" rel="noopener">OpCode=5&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>delete txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="delete-txn">&lt;/span>
&lt;a href="#delete-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 5 个 txn 的 type= 0x00000002=2&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L42" target="_blank" rel="noopener">OpCode=2&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>close session txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="close-session-txn">&lt;/span>
&lt;a href="#close-session-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 6 个 txn 的 type= 0xfffffff5=-11&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L100" target="_blank" rel="noopener">OpCode=-11&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/tree/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence" target="_blank" rel="noopener">zookeeper/server/persistence&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L36" target="_blank" rel="noopener">ZooDefs#OpCode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java#L57" target="_blank" rel="noopener">FileTxnLog.java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/Util.java#L84" target="_blank" rel="noopener">Util#makeLogName&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raw.githubusercontent.com/stardustman/pictures/main/img/log.500000004" target="_blank" rel="noopener">log.500000004&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/alenca/zklogtool/tree/master/zklogtool" target="_blank" rel="noopener">zklogtool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sharkdp/hexyl/releases" target="_blank" rel="noopener">hexyl-二进制分析工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zookeeper.apache.org/doc/r3.4.8/zookeeperAdmin.html#sc_zkCommands:~:text=The%20Log%20Directory%20contains,written%20to%20that%20log." target="_blank" rel="noopener">dataLogDir&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Ipc Signal</title><link>https://cloudedseal.github.io/blog/ipc-signal/</link><pubDate>Tue, 11 Apr 2023 20:15:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/ipc-signal/</guid><description>
&lt;h1>signal&lt;/h1>&lt;h2>什么是 signal&lt;span class="hx-absolute -hx-mt-20" id="什么是-signal">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-signal" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>A signal can be thought of as a &lt;code>software interrupt&lt;/code>.
This means that a process that receives a signal &lt;code>stops the execution&lt;/code> of the current program and makes the program &lt;code>respond to the signal&lt;/code>.
Signals are various notifications sent to a process in order to notify it of various &amp;ldquo;important&amp;rdquo; events.
信号是发送给进程的各种通知，以便通知它发生了各种“重要”的事件。&lt;/p>
&lt;/blockquote>
&lt;h2>有哪些信号？默认怎么处理？&lt;span class="hx-absolute -hx-mt-20" id="有哪些信号默认怎么处理">&lt;/span>
&lt;a href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e4%bf%a1%e5%8f%b7%e9%bb%98%e8%ae%a4%e6%80%8e%e4%b9%88%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Signal Name&lt;/th>
&lt;th style="text-align: left">Default Action&lt;/th>
&lt;th style="text-align: left">Comment&lt;/th>
&lt;th style="text-align: left">POSIX&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1 SIGHUP&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Hang up controlling terminal or process&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2 SIGINT&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Interrupt from keyboard, Control-C&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3 SIGQUIT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Quit from keyboard, Control-\&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4 SIGILL&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Illegal instruction&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5 SIGTRAP&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Breakpoint for debugging&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6 SIGABRT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Abnormal termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6 SIGIOT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGABRT&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">7 SIGBUS&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Bus error&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">8 SIGFPE&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Floating-point exception&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">9 &lt;code>SIGKILL&lt;/code>&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Forced-process termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">10 SIGUSR1&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Available to processes&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">11 SIGSEGV&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Invalid memory reference&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">12 SIGUSR2&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Available to processes&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">13 SIGPIPE&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Write to pipe with no readers&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">14 SIGALRM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Real-timer clock&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">15 SIGTERM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Process termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">16 SIGSTKFLT&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Coprocessor stack error&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">17 SIGCHLD&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Child process stopped or terminated or got a signal if traced&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">18 SIGCONT&lt;/td>
&lt;td style="text-align: left">Continue&lt;/td>
&lt;td style="text-align: left">Resume execution, if stopped&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">19 &lt;code>SIGSTOP&lt;/code>&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Stop process execution, Ctrl-Z&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">20 SIGTSTP&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Stop process issued from tty&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">21 SIGTTIN&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Background process requires input&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">22 SIGTTOU&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Background process requires output&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">23 SIGURG&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Urgent condition on socket&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">24 SIGXCPU&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">CPU time limit exceeded&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">25 SIGXFSZ&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">File size limit exceeded&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">26 SIGVTALRM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Virtual timer clock&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">27 SIGPROF&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Profile timer clock&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">28 SIGWINCH&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Window resizing&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">29 SIGIO&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">I/O now possible&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">29 SIGPOLL&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGIO&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">30 SIGPWR&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Power supply failure&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">31 SIGSYS&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Bad system call&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">31SIGUNUSED&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGSYS&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>如何发送信号？&lt;span class="hx-absolute -hx-mt-20" id="如何发送信号">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%8f%91%e9%80%81%e4%bf%a1%e5%8f%b7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1. keyboard&lt;span class="hx-absolute -hx-mt-20" id="1-keyboard">&lt;/span>
&lt;a href="#1-keyboard" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>SIGINT(Ctrl + C)&lt;/li>
&lt;li>SIGTSTP(Ctrl + Z) -&amp;gt; resume by &lt;code>fg&lt;/code>&lt;/li>
&lt;li>SIGQUIT(Ctrl + \)&lt;/li>
&lt;/ol>
&lt;h3>2. command line&lt;span class="hx-absolute -hx-mt-20" id="2-command-line">&lt;/span>
&lt;a href="#2-command-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>kill -&amp;lt;signal&amp;gt; &amp;lt;PID&amp;gt;&lt;/li>
&lt;li>fg&lt;/li>
&lt;/ol>
&lt;h3>3. system call&lt;span class="hx-absolute -hx-mt-20" id="3-system-call">&lt;/span>
&lt;a href="#3-system-call" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/kill.2.html" target="_blank" rel="noopener">kill syscall&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2>进程收到信号会怎么处理？&lt;span class="hx-absolute -hx-mt-20" id="进程收到信号会怎么处理">&lt;/span>
&lt;a href="#%e8%bf%9b%e7%a8%8b%e6%94%b6%e5%88%b0%e4%bf%a1%e5%8f%b7%e4%bc%9a%e6%80%8e%e4%b9%88%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>分为 &lt;code>3&lt;/code> 种情况:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>Ignore it&lt;/code>&lt;/strong>. Many signals can be and are ignored, but not all. Hardware exceptions such as &amp;ldquo;divide by 0&amp;rdquo; (with integers) cannot be ignored successfully and some signals such as SIGKILL cannot be ignored at all.&lt;/li>
&lt;li>&lt;strong>&lt;code>Catch and handle the exception&lt;/code>&lt;/strong>. The process has a function to be executed if and when the exception occurs. The function may terminate the program gracefully or it may handle it without terminating the program.&lt;/li>
&lt;li>&lt;strong>&lt;code>Let the default action apply&lt;/code>&lt;/strong>. Every signal has a default action. The default may be:
&lt;ul>
&lt;li>ignore&lt;/li>
&lt;li>terminate&lt;/li>
&lt;li>terminate and dump core&lt;/li>
&lt;li>stop or pause the program&lt;/li>
&lt;li>resume a program paused earlier&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>如何自定义 signal handler?&lt;span class="hx-absolute -hx-mt-20" id="如何自定义-signal-handler">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%87%aa%e5%ae%9a%e4%b9%89-signal-handler" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>注意：这里只有可以被 caught 的才可以自定义 handler。SIGKILL 和 SIGSTOP 这两个是不能自己定义 handler 的。&lt;/p>
&lt;/blockquote>
&lt;h3>java example&lt;span class="hx-absolute -hx-mt-20" id="java-example">&lt;/span>
&lt;a href="#java-example" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">sun.misc.Signal&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">sun.misc.SignalHandler&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ExampleSignalHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nanoTime&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;INT&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SignalHandler&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sig&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\nProgram execution took %f seconds\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nanoTime&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1e9f&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cat the INT signal, but still run.....😄&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>可以将 “INT” 替换为 “STOP” 运行结果为:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Exception in thread &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> java.lang.IllegalArgumentException: Signal already used by VM or OS: SIGSTOP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at sun.misc.Signal.handle&lt;span class="o">(&lt;/span>Signal.java:166&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at ExampleSignalHandler.main&lt;span class="o">(&lt;/span>ExampleSignalHandler.java:9&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>可以将 “INT” 替换为 “KILL” 运行结果为:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Exception in thread &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> java.lang.IllegalArgumentException: Signal already used by VM or OS: SIGKILL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at sun.misc.Signal.handle&lt;span class="o">(&lt;/span>Signal.java:166&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at stardustman.github.io.signal.ExampleSignalHandler.main&lt;span class="o">(&lt;/span>ExampleSignalHandler.java:9&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://chromium.googlesource.com/chromiumos/docs/&amp;#43;/HEAD/constants/signals.md" target="_blank" rel="noopener">Linux Signal Table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Signal_%28IPC%29" target="_blank" rel="noopener">Signal_(IPC)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.kent.edu/~ruttan/sysprog/lectures/signals.html" target="_blank" rel="noopener">Introduction To Unix Signals Programming&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/libc/manual/html_node/Standard-Signals.html" target="_blank" rel="noopener">Standard-Signals&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rosettacode.org/wiki/Handle_a_signal#Java" target="_blank" rel="noopener">handle-a-signal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html" target="_blank" rel="noopener">signal-block&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackabuse.com/handling-unix-signals-in-python/" target="_blank" rel="noopener">handling-unix-signals-in-python&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://faculty.cs.niu.edu/~hutchins/csci480/signals.htm" target="_blank" rel="noopener">signals&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.alexonlinux.com/signal-handling-in-linux" target="_blank" rel="noopener">signal-handling-in-linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://elixir.bootlin.com/busybox/latest/source/coreutils/nohup.c#L94" target="_blank" rel="noopener">nohup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.princeton.edu/courses/archive/fall05/cos217/lectures/23signals.pdf" target="_blank" rel="noopener">https://www.cs.princeton.edu/courses/archive/fall05/cos217/lectures/23signals.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.kent.edu/~ruttan/sysprog/lectures/signals.html" target="_blank" rel="noopener">cs.kent.edu/signals.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://faculty.cs.niu.edu/~hutchins/csci480/signals.htm" target="_blank" rel="noopener">csci480/signals.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/kill.2.html" target="_blank" rel="noopener">kill(2)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://goodyduru.github.io/os/2023/10/05/ipc-unix-signals.html" target="_blank" rel="noopener">https://goodyduru.github.io/os/2023/10/05/ipc-unix-signals.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/94318f9185757cc33d2b8d527d36be26ac6b7582/src/share/classes/sun/misc/Signal.java#L30" target="_blank" rel="noopener">java Signal 处理实现&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cs341.cs.illinois.edu/coursebook/index.html" target="_blank" rel="noopener">https://cs341.cs.illinois.edu/coursebook/index.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Asm How Java Byte Code Execute</title><link>https://cloudedseal.github.io/blog/asm-how-java-byte-code-execute/</link><pubDate>Wed, 05 Apr 2023 10:35:32 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-how-java-byte-code-execute/</guid><description>
&lt;h1>jvm&lt;/h1>&lt;blockquote>
&lt;p>jvm 是一个栈式(stack-based)虚拟计算机。啥意思，就是大多数的 opcode 的操作数在 operand stack 上，执行的结果也放在 oprand stack 上。&lt;br>
有的 opcode 的操作数在 local variable table，如 &lt;code>iinc&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h1>分析的代码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">stardustman.github.io&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">BoxingUnboxingExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Auto-boxing of primitive type int to Integer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The sum is: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>jclasslib 查看字节码&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/BoxingUnboxingExample.jpg" alt="BoxingUnboxingExample" loading="lazy" />&lt;/p>
&lt;h1>字节码执行过程&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/jvm%20-byte-code-execute.svg" alt="jvm-byte-code-execute" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/evaluation-of-postfix-expression/" target="_blank" rel="noopener">postfix-expression&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ingokegel/jclasslib/releases" target="_blank" rel="noopener">jclasslib&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iconst_i" target="_blank" rel="noopener">jvms-6.5.iconst_i&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokestatic" target="_blank" rel="noopener">jvms-6.5.invokestatic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic" target="_blank" rel="noopener">jvms-6.5.getstatic&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java Jdk Proxy</title><link>https://cloudedseal.github.io/blog/java-jdk-proxy/</link><pubDate>Sun, 12 Feb 2023 19:02:31 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-jdk-proxy/</guid><description>
&lt;blockquote>
&lt;p>分析环境: jdk8&lt;/p>
&lt;/blockquote>
&lt;h1>dynamic proxy 是啥？&lt;/h1>&lt;blockquote>
&lt;p>A dynamic proxy class is a class that implements &lt;code>a list of interfaces&lt;/code>&lt;sub>&lt;strong>1&lt;/strong>&lt;/sub> specified at &lt;code>runtime &lt;/code>such that a method invocation through one of the interfaces on an instance of the class will be &lt;code>encoded and dispatched&lt;/code> to &lt;code>another&lt;/code> object through a &lt;code>uniform interface&lt;/code>&lt;sub>&lt;strong>2&lt;/strong>&lt;/sub>.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>动态代理类生成调用方法如下：&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newProxyInstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getClass&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getClassLoader&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">Dynasty&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">},&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>handler.getClass().getClassLoader()&lt;/code> 运行时动态生成的代理类 load 到 jvm 使用的 class loader。&lt;/li>
&lt;li>&lt;code>new Class[]{Dynasty.class}&lt;/code> 运行时动态生成的代理类实现的一系列接口。&lt;/li>
&lt;li>&lt;code>handler&lt;/code> Invocation Handler 通过 invoke() 来分发方法，包含被实际代理的对象实例。&lt;/li>
&lt;/ul>
&lt;h1>保存运行时生成的动态代理类&lt;/h1>&lt;h2>ProxyGenerator.java&lt;span class="hx-absolute -hx-mt-20" id="proxygeneratorjava">&lt;/span>
&lt;a href="#proxygeneratorjava" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/** debugging flag for saving generated class files */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">saveGeneratedFiles&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">security&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">doPrivileged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GetBooleanAction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;sun.misc.ProxyGenerator.saveGeneratedFiles&amp;#34;&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="na">booleanValue&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>设置 &lt;code>sun.misc.ProxyGenerator.saveGeneratedFiles&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="设置-sunmiscproxygeneratorsavegeneratedfiles">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae-sunmiscproxygeneratorsavegeneratedfiles" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sun.misc.ProxyGenerator.saveGeneratedFiles&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>运行时生成的动态代理类($Proxy0)分析&lt;/h1>&lt;h2>运行时生成的动态代理类实例化&lt;span class="hx-absolute -hx-mt-20" id="运行时生成的动态代理类实例化">&lt;/span>
&lt;a href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e7%94%9f%e6%88%90%e7%9a%84%e5%8a%a8%e6%80%81%e4%bb%a3%e7%90%86%e7%b1%bb%e5%ae%9e%e4%be%8b%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-instance.jpg" alt="dynamic-proxy-instance" loading="lazy" />&lt;/p>
&lt;p>$Proxy0 -&amp;gt; Proxy(InvocationHandler h) 由此可见:&lt;/p>
&lt;ol>
&lt;li>动态代理类 &lt;code>$Proxy0&lt;/code> 实例化时，调用 super class &lt;code>Proxy&lt;/code> 的构造函数，需要的 InvocationHandler 是实现了该接口的 &lt;code>DynastyDynamicProxy&lt;/code>&lt;/li>
&lt;li>&lt;code>DynastyDynamicProxy&lt;/code> 实例化时，构造函数需要的是 &lt;code>TangDynasty&lt;/code> 这个实际被代理的类。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-class-method-founder.jpg" alt="dynamic-proxy-class-method-founder" loading="lazy" />&lt;/p>
&lt;h2>运行时生成的动态代理类方法&lt;span class="hx-absolute -hx-mt-20" id="运行时生成的动态代理类方法">&lt;/span>
&lt;a href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e7%94%9f%e6%88%90%e7%9a%84%e5%8a%a8%e6%80%81%e4%bb%a3%e7%90%86%e7%b1%bb%e6%96%b9%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>$Proxy0 的命名&lt;span class="hx-absolute -hx-mt-20" id="proxy0-的命名">&lt;/span>
&lt;a href="#proxy0-%e7%9a%84%e5%91%bd%e5%90%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// prefix for all proxy class names&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxyClassNamePrefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;$Proxy&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// next number to use for generation of unique proxy class names&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicLong&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextUniqueNumber&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicLong&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#founder&lt;span class="hx-absolute -hx-mt-20" id="proxy0founder">&lt;/span>
&lt;a href="#proxy0founder" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-1.jpg" alt="dynamic-proxy-stack-frame-1" loading="lazy" />&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-2.jpg" alt="" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">founder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#reviver&lt;span class="hx-absolute -hx-mt-20" id="proxy0reviver">&lt;/span>
&lt;a href="#proxy0reviver" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reviver&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#lastEmperor&lt;span class="hx-absolute -hx-mt-20" id="proxy0lastemperor">&lt;/span>
&lt;a href="#proxy0lastemperor" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">lastEmperor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>由上可知，&lt;code>$Proxy0&lt;/code> 实现的方法的统一调用入口(&lt;code>uniform interface&lt;/code>) 就是 DynastyDynamicProxy#invoke，也就是 jdk 动态代理必须实现的 InvocationHandler#invoke 方法。&lt;/p>
&lt;/blockquote>
&lt;h1>&lt;code>InvocationHandler&lt;/code> 接口实现类 &lt;code>DynastyDynamicProxy&lt;/code> 分析&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DynastyDynamicProxy&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InvocationHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 被代理的对象&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">delegate&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">DynastyDynamicProxy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">originalDynamic&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">originalDynamic&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param proxy 当前动态代理类 $Proxy0 的实例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param method 当前动态代理类调用的方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param args 当前动态代理类调用的方法的参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> **/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxy&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;公元 618 年唐朝建立!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">delegate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; of Tang Dynasty was &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;公元 907 年唐朝灭亡!\n&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-3.jpg" alt="dynamic-proxy-method-call" loading="lazy" />&lt;/p>
&lt;h1>被代理的类 &lt;code>TangDynasty&lt;/code> 分析&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-4.jpg" alt="" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">TangDynasty&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Dynasty&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">founder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李渊&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reviver&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李隆基&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">lastEmperor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李柷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;ul>
&lt;li>由&lt;code>调用栈&lt;/code>可知，最终还是要调用&lt;code>被代理的类&lt;/code>的方法。&lt;/li>
&lt;li>但是可以在执行真正的代理类方法之前，在 &lt;code>InvocationHandler#invoke&lt;/code> 中添加实际需要的逻辑。这就是中间层，通过中间层进行逻辑的增强。&lt;/li>
&lt;li>这样看起来就好像被代理对象的逻辑进行了增强。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/sun/misc/ProxyGenerator.java#L441-L443" target="_blank" rel="noopener">dynamic-proxy-class-method&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/jdk-com-sun-proxy" target="_blank" rel="noopener">jdk-com-sun-proxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/sun/misc/ProxyGenerator.java#L313-L317" target="_blank" rel="noopener">ProxyGenerator#sun.misc.ProxyGenerator.saveGeneratedFiles&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/proxy.html" target="_blank" rel="noopener">jdk8-proxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/stardustman/java-inspect" target="_blank" rel="noopener">分析所用代码&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/java/lang/reflect/Proxy.java#L560-L564" target="_blank" rel="noopener">$Proxy0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.springcloud.io/post/2023-01/jdk-porxy-and-cglib/#gsc.tab=0" target="_blank" rel="noopener">jdk-porxy-and-cglib&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Algorithm Snowflake</title><link>https://cloudedseal.github.io/blog/algorithm-snowflake/</link><pubDate>Sat, 25 Jun 2022 11:43:45 +0800</pubDate><guid>https://cloudedseal.github.io/blog/algorithm-snowflake/</guid><description>
&lt;h1>分布式 ID&lt;/h1>&lt;blockquote>
&lt;p>多个数据中心(一级)，多个节点(一级)，同一个时间点（一级），同时生成 ID(一级)。其实就是数字生成规则而已。没啥了不起的。&lt;/p>
&lt;/blockquote>
&lt;p>snowflake 算法使用一个 64bits 的正整数作为 ID。64bits 正整数 layout 如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/snowflake.jpg" alt="snowflake-i64-layout" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">stardustman.github.io&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">SnowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 起始的时间戳&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">START_STAMP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1480166465631L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// sequence number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// machine id bits&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// data-center id bits&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 每一部分最大值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 每一部分左移位数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TIMESTAMP_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">SnowFlake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dataCenterId can&amp;#39;t be greater than MAX_DATA_CENTER_ID or less than 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dataCenterId can&amp;#39;t be greater than MAX_DATA_CENTER_ID or less than 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// generate next ID&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">nextId&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;clock moved backwards. Refusing to generate id&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同一个毫秒内,序号递增，sequence 最大是 4095&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同一毫秒内，序列书已经到最大&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 阻塞到下一个毫秒，获取新的时间戳&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNextMill&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不同毫秒，序列号置为 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// assemble 64bits id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">START_STAMP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TIMESTAMP_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getNextMill&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getNewStamp&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SnowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">snowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SnowFlake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">snowFlake&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nextId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Master Pki</title><link>https://cloudedseal.github.io/blog/master-pki/</link><pubDate>Thu, 23 Jun 2022 22:17:42 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-pki/</guid><description>
&lt;h1>certificate&lt;/h1>&lt;blockquote>
&lt;p>目标：绑定 &lt;code>public key&lt;/code> 和 &lt;code>name&lt;/code>。一切围绕着这个目标来展开。&lt;/p>
&lt;/blockquote>
&lt;h1>图解&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/everything-pki.drawio.svg" alt="pki" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://smallstep.com/blog/everything-pki/" target="_blank" rel="noopener">强烈推荐-everything-pki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arthurchiao.art/blog/everything-about-pki-zh/" target="_blank" rel="noopener">翻译版-everything-pki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ubuntu.com/server/docs/security-trust-store#:~:text=The%20CA%20trust%20store%20location,%2Fcerts%2Fca%2Dcertificates." target="_blank" rel="noopener">ubuntu-trust-store-location&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.oreilly.com/library/view/linux-security-cookbook/0596003919/ch04s05.html" target="_blank" rel="noopener">decode-an-ssl-certificate&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://web.chacuo.net/netcsrdecoder/" target="_blank" rel="noopener">csr-在线解析&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/stardustman.keys" target="_blank" rel="noopener">github-public-key&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://geekflare.com/dns-caa-record/" target="_blank" rel="noopener">dns-caa-record&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/X.509" target="_blank" rel="noopener">X.509&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java Thread Pool Params</title><link>https://cloudedseal.github.io/blog/java-thread-pool-params/</link><pubDate>Mon, 20 Jun 2022 22:47:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-thread-pool-params/</guid><description>
&lt;h2>基本策略&lt;span class="hx-absolute -hx-mt-20" id="基本策略">&lt;/span>
&lt;a href="#%e5%9f%ba%e6%9c%ac%e7%ad%96%e7%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>关注点分离，任务提交和执行分离。&lt;/li>
&lt;li>延迟策略，延迟初始化。&lt;/li>
&lt;/ol>
&lt;h2>图解&lt;span class="hx-absolute -hx-mt-20" id="图解">&lt;/span>
&lt;a href="#%e5%9b%be%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/java-thread-pool-params.drawio.svg" alt="java-线程池参数" loading="lazy" />&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/OKTW_mZnNJcRBrIFHONR3g" target="_blank" rel="noopener">你管这破玩意叫线程池&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Virtual Memory Address Explore</title><link>https://cloudedseal.github.io/blog/virtual-memory-address-explore/</link><pubDate>Sun, 22 May 2022 16:26:36 +0800</pubDate><guid>https://cloudedseal.github.io/blog/virtual-memory-address-explore/</guid><description>
&lt;h1>virtual memory 是啥？&lt;/h1>&lt;ol>
&lt;li>本质是硬件支持。&lt;/li>
&lt;li>virtual memory ===== MMU =====&amp;gt; physical memory&lt;/li>
&lt;li>OS + 硬件 共同为进程提供 virtual memory 功能。所有程序的内存布局一致。&lt;/li>
&lt;li>为了安全。&lt;/li>
&lt;/ol>
&lt;h1>virtual memory address space layout&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/virtual-memory-address-space.jpg" alt="virtual-memory-address-space" loading="lazy" />&lt;/p>
&lt;h2>代码测试&lt;span class="hx-absolute -hx-mt-20" id="代码测试">&lt;/span>
&lt;a href="#%e4%bb%a3%e7%a0%81%e6%b5%8b%e8%af%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>cargo new vas-explore&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>main.rs&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="p">{&lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>::&lt;span class="n">Duration&lt;/span>::&lt;span class="n">from_millis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>::&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sl&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Goodbye, world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>cargo build&lt;/li>
&lt;li>./target/debug/vas-explore&lt;/li>
&lt;li>pidof vas-explore&lt;/li>
&lt;/ol>
&lt;h2>/proc/pid/maps&lt;span class="hx-absolute -hx-mt-20" id="procpidmaps">&lt;/span>
&lt;a href="#procpidmaps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:x86_64-linux-gnu$ pidof vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">75599&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:x86_64-linux-gnu$ cat /proc/75599/maps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a831000-556a8a837000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a837000-556a8a86e000 r-xp &lt;span class="m">00006000&lt;/span> 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/ vas-explore/target/debug/vas-explore &lt;span class="c1"># text(code segment) segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a86e000-556a8a87c000 r--p 0003d000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a87d000-556a8a880000 r--p 0004b000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a880000-556a8a881000 rw-p 0004e000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8c01b000-556a8c03c000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>heap&lt;span class="o">]&lt;/span> &lt;span class="c1"># heap segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59636000-7f5e59638000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59638000-7f5e5965a000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5965a000-7f5e597d2000 r-xp &lt;span class="m">00022000&lt;/span> 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e597d2000-7f5e59820000 r--p 0019a000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59820000-7f5e59824000 r--p 001e7000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59824000-7f5e59826000 rw-p 001eb000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59826000-7f5e5982a000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982a000-7f5e5982b000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982b000-7f5e5982d000 r-xp &lt;span class="m">00001000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982d000-7f5e5982e000 r--p &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982e000-7f5e5982f000 r--p &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982f000-7f5e59830000 rw-p &lt;span class="m">00004000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59830000-7f5e59836000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59836000-7f5e59847000 r-xp &lt;span class="m">00006000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59847000-7f5e5984d000 r--p &lt;span class="m">00017000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984d000-7f5e5984e000 r--p 0001c000 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984e000-7f5e5984f000 rw-p 0001d000 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984f000-7f5e59853000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59853000-7f5e59856000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59856000-7f5e59868000 r-xp &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59868000-7f5e5986c000 r--p &lt;span class="m">00015000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986c000-7f5e5986d000 r--p &lt;span class="m">00018000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986d000-7f5e5986e000 rw-p &lt;span class="m">00019000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986e000-7f5e59870000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59885000-7f5e59886000 ---p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59886000-7f5e59888000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59888000-7f5e59889000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59889000-7f5e598ac000 r-xp &lt;span class="m">00001000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598ac000-7f5e598b4000 r--p &lt;span class="m">00024000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b5000-7f5e598b6000 r--p 0002c000 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b6000-7f5e598b7000 rw-p 0002d000 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b7000-7f5e598b8000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c09000-7ffe91c2a000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>stack&lt;span class="o">]&lt;/span> &lt;span class="c1"># stack segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c38000-7ffe91c3b000 r--p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vvar&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c3b000-7ffe91c3c000 r-xp &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vdso&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ffffffffff600000-ffffffffff601000 --xp &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vsyscall&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>row format&lt;span class="hx-absolute -hx-mt-20" id="row-format">&lt;/span>
&lt;a href="#row-format" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/virtual-memory-address-space-format.jpg" alt="row format" loading="lazy" />&lt;/p>
&lt;h2>text&lt;span class="hx-absolute -hx-mt-20" id="text">&lt;/span>
&lt;a href="#text" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>代码段，程序的可执行代码在这里。&lt;/p>
&lt;h2>stack&lt;span class="hx-absolute -hx-mt-20" id="stack">&lt;/span>
&lt;a href="#stack" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>栈区，从 maps 可以看到 &lt;code>7ffe91c09000-7ffe91c2a000&lt;/code>，这个区域是这个进程的栈区，可读、可写。&lt;code>7ffe91c09000&lt;/code> 这个 48bits 的地址就是虚拟内存地址。为什么是 48bits，因为 amd64 的虚拟地址用 48bits(256TB)地址空间足够了。&lt;/p>
&lt;h2>heap&lt;span class="hx-absolute -hx-mt-20" id="heap">&lt;/span>
&lt;a href="#heap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>556a8c01b000-556a8c03c000&lt;/code> 可以看到 heap 的地址，是比较小的地址段。&lt;/p>
&lt;h2>heap 与 stack 会不会相互覆盖？&lt;span class="hx-absolute -hx-mt-20" id="heap-与-stack-会不会相互覆盖">&lt;/span>
&lt;a href="#heap-%e4%b8%8e-stack-%e4%bc%9a%e4%b8%8d%e4%bc%9a%e7%9b%b8%e4%ba%92%e8%a6%86%e7%9b%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>查看 /proc/pid/maps 计算：&lt;/p>
&lt;p>(low address stack - high address heap) / 1024 / 1024 /1024 / 1024
= (0x7ffe91c09000 - 0x556a8c03c000) / 1024 / 1024 /1024 / 1024 = 42TB
可以看出相差有 42TB 的空间。就算真的覆盖了，内核会终止这个程序。这也就是虚拟内存的作用之一，程序可以使用远远超过实际物理内存的空间。&lt;/p>
&lt;h2>rust 程序内存布局分析&lt;span class="hx-absolute -hx-mt-20" id="rust-程序内存布局分析">&lt;/span>
&lt;a href="#rust-%e7%a8%8b%e5%ba%8f%e5%86%85%e5%ad%98%e5%b8%83%e5%b1%80%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="no">MAX&lt;/span>: &lt;span class="kt">u32&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// string literals 指向 RODATA section 地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RODATA: &lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;hello world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// static 变量在 DATA section
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;DATA: (static var): &lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="no">MAX&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// function 在 TEXT section
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;TEXT: (function):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">foo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// string 结构体分配在栈上，所以其引用是指向的是一个栈地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;STACK: (&amp;amp;hello):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 通过 deference 获取指向的 heap 上的数据，然后获取其引用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;HEAP: (&amp;amp;(*hello)):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Box 实现了 Pointer trait, 无须额外 deference
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;HEAP: (Box impl Pointer trait)&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">,&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>查看变量在虚拟内存中的分布&lt;span class="hx-absolute -hx-mt-20" id="查看变量在虚拟内存中的分布">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e5%8f%98%e9%87%8f%e5%9c%a8%e8%99%9a%e6%8b%9f%e5%86%85%e5%ad%98%e4%b8%ad%e7%9a%84%e5%88%86%e5%b8%83" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiling stack-or-heap v0.1.0 &lt;span class="o">(&lt;/span>/Users/stardust/Downloads/rust-projects/stack-or-heap&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Finished dev &lt;span class="o">[&lt;/span>unoptimized + debuginfo&lt;span class="o">]&lt;/span> target&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> in 0.48s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Running &lt;span class="sb">`&lt;/span>target/debug/stack-or-heap&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RODATA: 0x106df1090
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DATA: &lt;span class="o">(&lt;/span>static var&lt;span class="o">)&lt;/span>: 0x106df1080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">TEXT: &lt;span class="o">(&lt;/span>&lt;span class="k">function&lt;/span>&lt;span class="o">)&lt;/span>:0x106db61b0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">STACK: &lt;span class="o">(&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>hello&lt;span class="o">)&lt;/span>:0x7ff7b9149950
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAP: &lt;span class="o">(&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="o">(&lt;/span>*hello&lt;span class="o">))&lt;/span>:0x60000346c050
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAP: &lt;span class="o">(&lt;/span>Box impl Pointer trait&lt;span class="o">)&lt;/span>0x60000346c060,0x7ff7b9149968&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.baeldung.com/linux/proc-id-maps" target="_blank" rel="noopener">/proc/pid/maps&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Virtual_address_space" target="_blank" rel="noopener">virtual memory address space&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://elinux.org/images/b/b0/Introduction_to_Memory_Management_in_Linux.pdf" target="_blank" rel="noopener">Memory_Management_in_Linux&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Linux File Permissions</title><link>https://cloudedseal.github.io/blog/linux-file-permissions/</link><pubDate>Sat, 16 Apr 2022 17:33:29 +0800</pubDate><guid>https://cloudedseal.github.io/blog/linux-file-permissions/</guid><description>
&lt;blockquote>
&lt;p>最近在使用 k8s 过程中，需要给 mount 的文件配置权限。
提起 file 的权限只想到 rwx，是不全面的,完整的权限是 rwxsStT。&lt;/p>
&lt;/blockquote>
&lt;h1>权限列表&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/file-permission.jpg" alt="file-permission" loading="lazy" />&lt;/p>
&lt;h1>权限导图&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/Linux-File-Permission-Map.png" alt="file-permission-map" loading="lazy" />&lt;/p>
&lt;h1>特殊权限&lt;/h1>&lt;h2>setuid&lt;span class="hx-absolute -hx-mt-20" id="setuid">&lt;/span>
&lt;a href="#setuid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>&lt;code>Setuid&lt;/code> is a Linux file permission setting that allows a user to &lt;code>execute&lt;/code> that file or program with the permission of the &lt;code>owner&lt;/code> of that file.
很明显，setuid 这个权限要和 execute 权限一起使用，作用于可执行文件。&lt;/p>
&lt;/blockquote>
&lt;p>以 &lt;code>passwd&lt;/code> 这个命令为例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:bin$ ls -l /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">68208&lt;/span> Jul &lt;span class="m">15&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:bin$ stat &lt;span class="k">$(&lt;/span>which passwd&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File: /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size: &lt;span class="m">68208&lt;/span> Blocks: &lt;span class="m">136&lt;/span> IO Block: &lt;span class="m">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device: 812h/2066d Inode: &lt;span class="m">659228&lt;/span> Links: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: &lt;span class="o">(&lt;/span>4755/-rwsr-xr-x&lt;span class="o">)&lt;/span> Uid: &lt;span class="o">(&lt;/span> 0/ root&lt;span class="o">)&lt;/span> Gid: &lt;span class="o">(&lt;/span> 0/ root&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: 2022-04-16 20:28:18.403355543 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Modify: 2021-07-15 06:08:18.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change: 2021-10-30 22:33:09.394547633 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Birth: -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到 &lt;code>passwd&lt;/code> 这个可执行文件的权限是 rwsr-xr-x 也就是 4755，这才是完整的权限。
rws 中 &lt;code>s&lt;/code> 表明 user 组的权限中启用了 &lt;code>setuid&lt;/code>。s 表明 execute + setuid。
查看 man passwd 得知 user 的密码以及密码相关信息保存在 &lt;a href="https://linuxize.com/post/etc-shadow-file/" target="_blank" rel="noopener">/etc/shadow&lt;/a> 中，但是 /etc/shadow 的权限是:&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -l /etc/shadow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r----- &lt;span class="m">1&lt;/span> root shadow &lt;span class="m">1669&lt;/span> Mar &lt;span class="m">31&lt;/span> 23:08 /etc/shadow&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到 &lt;code>/etc/shadow&lt;/code> 只允许 &lt;code>root&lt;/code> 用户进行修改。但是执行 &lt;code>passwd&lt;/code> 却可以修改这个文件，这是为什么呢？
因为 &lt;code>passwd&lt;/code> user 权限启用了 setuid，并且 &lt;code>passwd&lt;/code> 这个可执行文件的 &lt;code>owner&lt;/code> 是 &lt;code>root&lt;/code>，这就是 &lt;code>setuid&lt;/code> 的作用了。
由于 &lt;code>passwd&lt;/code> 启用了 &lt;code>setuid&lt;/code>，普通用户，如 &lt;code>stardust&lt;/code> 这个用户在执行 &lt;code>passwd&lt;/code> 这个程序时，会以 &lt;code>root&lt;/code> 用户, 而不是以 &lt;code>stardust&lt;/code> 这个用户运行程序，所以 &lt;code>stardust&lt;/code> 执行 &lt;code>passwd&lt;/code> 是可以修改 &lt;code>/etc/shadow&lt;/code> 这个文件的。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 查看 passwd 启用了 setuid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -l /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">68208&lt;/span> Jul &lt;span class="m">15&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 修改 stardust 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:~$ passwd stardust
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changing password &lt;span class="k">for&lt;/span> stardust.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Current password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 另外一个终端查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:Namespaces$ ps -ef &lt;span class="p">|&lt;/span> grep passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="m">299906&lt;/span> &lt;span class="m">299450&lt;/span> &lt;span class="m">0&lt;/span> 12:03 pts/5 00:00:00 passwd stardust &lt;span class="c1"># 3. 可以看出 passwd stardust 是以 root 用户执行的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust &lt;span class="m">300029&lt;/span> &lt;span class="m">299940&lt;/span> &lt;span class="m">0&lt;/span> 12:03 pts/6 00:00:00 grep --color&lt;span class="o">=&lt;/span>auto passwd&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>开启 setuid 权限经常使用的命令还有 &lt;code>sudo&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -al /usr/bin/sudo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">166056&lt;/span> Jan &lt;span class="m">19&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/sudo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>setgid&lt;span class="hx-absolute -hx-mt-20" id="setgid">&lt;/span>
&lt;a href="#setgid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>作用于 file&lt;span class="hx-absolute -hx-mt-20" id="作用于-file">&lt;/span>
&lt;a href="#%e4%bd%9c%e7%94%a8%e4%ba%8e-file" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>setgid 作用于文件和 setuid 所起作用类似。&lt;/p>
&lt;/blockquote>
&lt;h3>作用于 directory&lt;span class="hx-absolute -hx-mt-20" id="作用于-directory">&lt;/span>
&lt;a href="#%e4%bd%9c%e7%94%a8%e4%ba%8e-directory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>在该目录下创建的文件或者目录继承该目录的 group。&lt;/p>
&lt;/blockquote>
&lt;h2>sticky-bit&lt;span class="hx-absolute -hx-mt-20" id="sticky-bit">&lt;/span>
&lt;a href="#sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>When &lt;code>sticky bit&lt;/code> is set on a directory, the files in that directory can &lt;code>only&lt;/code> be removed by the owner.
A typical use of this is &lt;code>/tmp/&lt;/code>
The /tmp directory can be written to by any user, but other users cannot delete the files of others.&lt;/p>
&lt;/blockquote>
&lt;h3>/tmp 默认开启了 &lt;code>sticky bit&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="tmp-默认开启了-sticky-bit">&lt;/span>
&lt;a href="#tmp-%e9%bb%98%e8%ae%a4%e5%bc%80%e5%90%af%e4%ba%86-sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxrwt &lt;span class="m">25&lt;/span> root root &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ mkdir -v stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir: created directory &lt;span class="s1">&amp;#39;stardust-sticky&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld stardust-sticky/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxr-x &lt;span class="m">2&lt;/span> stardust stardust &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 stardust-sticky/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ su &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">uid&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nv">gid&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nv">groups&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span>,1000&lt;span class="o">(&lt;/span>stardust&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -rf /tmp/stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm: cannot remove &lt;span class="s1">&amp;#39;/tmp/stardust-sticky&amp;#39;&lt;/span>: Operation not permitted &lt;span class="c1"># test 这个 user 无法删除 /tmp/stardust-sticky 这个 directory 的。&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>/tmp 关闭 &lt;code>sticky-bit&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="tmp-关闭-sticky-bit">&lt;/span>
&lt;a href="#tmp-%e5%85%b3%e9%97%ad-sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ sudo chmod o-t /tmp &lt;span class="c1"># 关闭 /tmp 这个目录的 sticky bit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxrwx &lt;span class="m">25&lt;/span> root root &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ su &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -rf /tmp/stardust-sticky &lt;span class="c1"># test 这个 user 可以成功删除 stardust 这个用户的 /tmp/stardust-sticky 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ls: cannot access &lt;span class="s1">&amp;#39;stardust-sticky&amp;#39;&lt;/span>: No such file or directory&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.liquidweb.com/kb/how-do-i-set-up-setuid-setgid-and-sticky-bits-on-linux/" target="_blank" rel="noopener">how-do-i-set-up-setuid-setgid-and-sticky-bits-on-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/understanding-linux-file-permissions/" target="_blank" rel="noopener">understanding-linux-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://trendoceans.com/what-is-sticky-bit-permission-and-how-to-use-it" target="_blank" rel="noopener">what-is-sticky-bit-permission-and-how-to-use-it&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.liquidweb.com/kb/new-user-tutorial-basic-file-permissions/" target="_blank" rel="noopener">basic-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/title/File_permissions_and_attributes" target="_blank" rel="noopener">https://wiki.archlinux.org/title/File_permissions_and_attributes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/etc-shadow-file/" target="_blank" rel="noopener">etc-shadow-file&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.man7.org/linux/man-pages/man1/crontab.1.html" target="_blank" rel="noopener">crontab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/how-to-create-users-in-linux-using-the-useradd-command/" target="_blank" rel="noopener">useradd&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Githubpage Hugo Website</title><link>https://cloudedseal.github.io/blog/github-hugo-website/</link><pubDate>Sat, 19 Mar 2022 16:50:38 +0800</pubDate><guid>https://cloudedseal.github.io/blog/github-hugo-website/</guid><description>
&lt;h1>步骤&lt;/h1>&lt;h2>安装软件&lt;span class="hx-absolute -hx-mt-20" id="安装软件">&lt;/span>
&lt;a href="#%e5%ae%89%e8%a3%85%e8%bd%af%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://git-scm.com/" target="_blank" rel="noopener">git&lt;/a>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 配置好 git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git config --global user.name &lt;span class="s2">&amp;#34;your username&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git config --global user.email &lt;span class="s2">&amp;#34;your email&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>&lt;a href="https://gohugo.io/getting-started/installing/" target="_blank" rel="noopener">hugo&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2>hugo 创建本地 website&lt;span class="hx-absolute -hx-mt-20" id="hugo-创建本地-website">&lt;/span>
&lt;a href="#hugo-%e5%88%9b%e5%bb%ba%e6%9c%ac%e5%9c%b0-website" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>参考：&lt;a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener">https://gohugo.io/getting-started/quick-start/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>hugo new site blog # blog 根据需要修改&lt;/li>
&lt;li>cd blog&lt;/li>
&lt;li>git init&lt;/li>
&lt;li>git submodule add &lt;a href="https://github.com/theNewDynamic/gohugo-theme-ananke.git" target="_blank" rel="noopener">https://github.com/theNewDynamic/gohugo-theme-ananke.git&lt;/a> themes/ananke # theme 根据需要修改&lt;/li>
&lt;li>把 content/posts 目录修改为 content/post&lt;/li>
&lt;li>hugo new post/my-first-post.md&lt;/li>
&lt;li>hugo server -D&lt;/li>
&lt;li>根据选择的主题，修改主题相关的配置&lt;/li>
&lt;/ol>
&lt;h2>github 上创建两个公开仓库&lt;span class="hx-absolute -hx-mt-20" id="github-上创建两个公开仓库">&lt;/span>
&lt;a href="#github-%e4%b8%8a%e5%88%9b%e5%bb%ba%e4%b8%a4%e4%b8%aa%e5%85%ac%e5%bc%80%e4%bb%93%e5%ba%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>username.github.io&lt;/code>, 部署静态博客的仓库，username 修改为对应的 github 账号 ID。&lt;/li>
&lt;li>&lt;code>blog&lt;/code>，这个保存本地的 &lt;code>blog&lt;/code> 的仓库。&lt;/li>
&lt;li>在 &lt;code>blog&lt;/code> 中执行以下命令:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/blog.git &lt;span class="c1"># username 修改为自己账号的 github ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2>配置 github actions&lt;span class="hx-absolute -hx-mt-20" id="配置-github-actions">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-github-actions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>参考：&lt;a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token" target="_blank" rel="noopener">https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token&lt;/a>
使用 actions-hugo 和 actions-gh-pages 自动化部署 &lt;code>blog&lt;/code>
生成的密钥对本地保存就可以。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>生成一对 public key(gh-pages.pub) 和 private key(gh-pages)&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>git config user.email&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -f gh-pages -N &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># gh-pages.pub 公钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># gh-pages 私钥&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>添加公钥 &lt;code>gh-pages.pub&lt;/code> 添加到 username.github.io 这个仓库的 deploy key 中，勾选 &lt;code>Allow write access&lt;/code>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/username/username.github.io/settings/keys/new" target="_blank" rel="noopener">https://github.com/username/username.github.io/settings/keys/new&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>添加私钥 &lt;code>gh-pages&lt;/code> 到 &lt;code>blog&lt;/code> 中的 secret&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/username/blog/settings/secrets/actions/new" target="_blank" rel="noopener">https://github.com/username/blog/settings/secrets/actions/new&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>Name&lt;/code> ACTIONS_DEPLOY_KEY&lt;/li>
&lt;li>&lt;code>Value&lt;/code> gh-pages 私钥文件内容&lt;/li>
&lt;/ol>
&lt;h2>本地 &lt;code>blog&lt;/code> 添加 deploy.yml&lt;span class="hx-absolute -hx-mt-20" id="本地-blog-添加-deployyml">&lt;/span>
&lt;a href="#%e6%9c%ac%e5%9c%b0-blog-%e6%b7%bb%e5%8a%a0-deployyml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>mkdir -p .github/workfows/&lt;/li>
&lt;li>touch .github/workflows/deploy.yml&lt;/li>
&lt;li>粘贴一下 yaml 内容&lt;/li>
&lt;li>external_repository 配置项中 username 替换为 github ID&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Set a branch to deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.workflow }}-${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.91.2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># extended: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-deploy-to-external-repository-external_repository&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">username/username.github.io&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># username 替换为 github ID&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch: master # default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gh-pages, 注意修改为部署的分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>提交 本地 blog 到 github blog 仓库&lt;span class="hx-absolute -hx-mt-20" id="提交-本地-blog-到-github-blog-仓库">&lt;/span>
&lt;a href="#%e6%8f%90%e4%ba%a4-%e6%9c%ac%e5%9c%b0-blog-%e5%88%b0-github-blog-%e4%bb%93%e5%ba%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;commit info&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>Reference&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/38480155" target="_blank" rel="noopener">github pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener">hugo quickstart&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener">actions-hugo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener">actions-gh-pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-deploy-to-external-repository-external_repository" target="_blank" rel="noopener">deploy-to-external-repository-external_repository&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>2022-plan</title><link>https://cloudedseal.github.io/blog/2022-plan/</link><pubDate>Mon, 07 Feb 2022 23:32:40 +0800</pubDate><guid>https://cloudedseal.github.io/blog/2022-plan/</guid><description>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.bilibili.com/video/BV1Cx411S7HJ?p=2" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Cx411S7HJ?p=2&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://see.stanford.edu/Course/CS107" target="_blank" rel="noopener">https://see.stanford.edu/Course/CS107&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> ComputerSystem:A programer perspective Edtion3 English&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> rust-lang&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> kubernetes&lt;/li>
&lt;/ul></description></item><item><title>js-eventloop</title><link>https://cloudedseal.github.io/blog/js-eventloop/</link><pubDate>Sun, 05 Dec 2021 23:24:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/js-eventloop/</guid><description>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript" target="_blank" rel="noopener">understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://slidr.io/vakila/learning-functional-programming-with-javascript" target="_blank" rel="noopener">learning-functional-programming-with-javascript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ" target="_blank" rel="noopener">what is event loop?js-conf&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D" target="_blank" rel="noopener">what is event loop demo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming" target="_blank" rel="noopener">an-introduction-to-functional-programming&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/jspoint/how-javascript-works-in-browser-and-node-ab7d0d09ac2f" target="_blank" rel="noopener">how-javascript-works-in-browser-and-node&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API" target="_blank" rel="noopener">浏览器提供 Web Apis&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>k8s-deploy-container-using-yaml</title><link>https://cloudedseal.github.io/blog/k8s-deploy-container-using-yaml/</link><pubDate>Sun, 28 Nov 2021 10:18:03 +0800</pubDate><guid>https://cloudedseal.github.io/blog/k8s-deploy-container-using-yaml/</guid><description>
&lt;p>kubernetes 作为一个云上的操作系统，要想充分利用，就要了解 kubernetes 提供的功能。告诉系统要搞啥，k8s 帮你搞定这一切，归根结底，不开发 k8s 就是一个 k8s 的用户，知道 k8s 能具体做啥，写好 YAML 就可以。&lt;/p>
&lt;h2>如何在 k8s 上部署服务&lt;span class="hx-absolute -hx-mt-20" id="如何在-k8s-上部署服务">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%9c%a8-k8s-%e4%b8%8a%e9%83%a8%e7%bd%b2%e6%9c%8d%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>create Deployment&lt;span class="hx-absolute -hx-mt-20" id="create-deployment">&lt;/span>
&lt;a href="#create-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>One of the most common &lt;code>Kubernetes object&lt;/code> is the &lt;code>deployment object&lt;/code>.
The deployment object defines the &lt;code>container spec required&lt;/code>, along with the &lt;code>name&lt;/code> and &lt;code>labels&lt;/code> used by other parts of Kubernetes to discover and connect to the application.&lt;/p>
&lt;/blockquote>
&lt;h4>准备 deployment.yaml&lt;span class="hx-absolute -hx-mt-20" id="准备-deploymentyaml">&lt;/span>
&lt;a href="#%e5%87%86%e5%a4%87-deploymentyaml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>The definition defines how to launch an application called webapp1 using the Docker Image katacoda/docker-http-server that runs on Port 80.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># object type&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">katacoda/docker-http-server:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>部署到 k8s 中&lt;span class="hx-absolute -hx-mt-20" id="部署到-k8s-中">&lt;/span>
&lt;a href="#%e9%83%a8%e7%bd%b2%e5%88%b0-k8s-%e4%b8%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f &lt;span class="sb">`&lt;/span>deployment.yaml&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看所有 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看所有-deployment">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get deployment&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看某一个 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看某一个-deployment">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%80%e4%b8%aa-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl describe deployment &lt;span class="sb">`&lt;/span>webapp1&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>create Service&lt;span class="hx-absolute -hx-mt-20" id="create-service">&lt;/span>
&lt;a href="#create-service" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>kubernetes has powerful networking capabilities that control how applications communicate.
These networking configurations can also be controlled via YAML.&lt;/p>
&lt;/blockquote>
&lt;h4>准备 service.yaml&lt;span class="hx-absolute -hx-mt-20" id="准备-serviceyaml">&lt;/span>
&lt;a href="#%e5%87%86%e5%a4%87-serviceyaml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>The Service &lt;code>selects&lt;/code> all applications with the label webapp1.
As multiple replicas, or instances, are deployed,
they will be &lt;code>automatically load balanced&lt;/code> based on this common label.
The Service makes the application available via a &lt;code>NodePort&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1-svc&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NodePort&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nodePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>部署到 k8s 中&lt;span class="hx-absolute -hx-mt-20" id="部署到-k8s-中-1">&lt;/span>
&lt;a href="#%e9%83%a8%e7%bd%b2%e5%88%b0-k8s-%e4%b8%ad-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f &lt;span class="sb">`&lt;/span>service.yaml&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看所有 service&lt;span class="hx-absolute -hx-mt-20" id="查看所有-service">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89-service" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get svc&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看某一个 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看某一个-deployment-1">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%80%e4%b8%aa-deployment-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl describe svc &lt;span class="sb">`&lt;/span>webapp1-svc&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>scale &lt;code>Deployment&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="scale-deployment">&lt;/span>
&lt;a href="#scale-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>配置 replicas&lt;span class="hx-absolute -hx-mt-20" id="配置-replicas">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-replicas" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># object type&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">katacoda/docker-http-server:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.katacoda.com/courses/kubernetes/kubectl-run-containers" target="_blank" rel="noopener">https://www.katacoda.com/courses/kubernetes/kubectl-run-containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html" target="_blank" rel="noopener">apiversion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/en/topics/containers/what-is-kubernetes-deployment" target="_blank" rel="noopener">what is k8s deployment?&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>What-happens-type-url-into-browser-and-press-enter</title><link>https://cloudedseal.github.io/blog/what-happens-type-url-into-browser-and-press-enter/</link><pubDate>Sat, 11 Sep 2021 16:21:12 +0800</pubDate><guid>https://cloudedseal.github.io/blog/what-happens-type-url-into-browser-and-press-enter/</guid><description>
&lt;h2>dns query&lt;span class="hx-absolute -hx-mt-20" id="dns-query">&lt;/span>
&lt;a href="#dns-query" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>get the ip of the target domain&lt;/p>
&lt;h3>browser cache&lt;span class="hx-absolute -hx-mt-20" id="browser-cache">&lt;/span>
&lt;a href="#browser-cache" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>firefox(about:networking#dns)
&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/firefox_dns_cache.png" alt="firefox_dns_cache" loading="lazy" />&lt;/p>
&lt;h3>/etc/hosts&lt;span class="hx-absolute -hx-mt-20" id="etchosts">&lt;/span>
&lt;a href="#etchosts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>os cache&lt;span class="hx-absolute -hx-mt-20" id="os-cache">&lt;/span>
&lt;a href="#os-cache" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>macos 查看 dns 请求日志 sudo log stream &amp;ndash;predicate &amp;lsquo;process == &amp;ldquo;mDNSResponder&amp;rdquo;&amp;rsquo; &amp;ndash;info&lt;/li>
&lt;/ol>
&lt;h3>dns resolver&lt;span class="hx-absolute -hx-mt-20" id="dns-resolver">&lt;/span>
&lt;a href="#dns-resolver" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>/etc/resolv.conf&lt;/p>
&lt;ol>
&lt;li>arp -a 查看有没有 dns 服务器的 mac 地址&lt;/li>
&lt;li>ARP request for the nameserver&lt;/li>
&lt;li>send dns query to get the ip of the domain&lt;/li>
&lt;/ol>
&lt;h2>arp 获取 gateway 的 mac 地址&lt;span class="hx-absolute -hx-mt-20" id="arp-获取-gateway-的-mac-地址">&lt;/span>
&lt;a href="#arp-%e8%8e%b7%e5%8f%96-gateway-%e7%9a%84-mac-%e5%9c%b0%e5%9d%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>向 gateway 发送 ip packet&lt;span class="hx-absolute -hx-mt-20" id="向-gateway-发送-ip-packet">&lt;/span>
&lt;a href="#%e5%90%91-gateway-%e5%8f%91%e9%80%81-ip-packet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://www.science.smith.edu/~nhowe/262/oldlabs/keyboard.html" target="_blank" rel="noopener">keyborad-interrput&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/560616439/answer/2722866208" target="_blank" rel="noopener">Chrome 是怎么判断地址栏输入的东西是不是网址? 这就是第一步😂-omnibox&lt;/a>&lt;/li>
&lt;li>&lt;a href="about:networking#dns" >firefox dns&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fortinet.com/resources/cyberglossary/what-is-arp" target="_blank" rel="noopener">ARP&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>asm-java-jit</title><link>https://cloudedseal.github.io/blog/asm-java-jit/</link><pubDate>Sun, 18 Jul 2021 10:43:46 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-java-jit/</guid><description>
&lt;h2>前言&lt;span class="hx-absolute -hx-mt-20" id="前言">&lt;/span>
&lt;a href="#%e5%89%8d%e8%a8%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>无论多么花里胡哨的功能，最终落地到一台计算机上，都是二进制代码。虽然 java 代码跑在 jvm 平台之上，但是 jvm 只是负责执行 java 自定义的一套 bytecode 的工具，只要能解释字节码，这个工具用什么语言写都是可以的。主流的 HotSpot 虚拟机选择的 C++。&lt;/p>
&lt;h2>二进制代码探析&lt;span class="hx-absolute -hx-mt-20" id="二进制代码探析">&lt;/span>
&lt;a href="#%e4%ba%8c%e8%bf%9b%e5%88%b6%e4%bb%a3%e7%a0%81%e6%8e%a2%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>C 语言举例&lt;span class="hx-absolute -hx-mt-20" id="c-语言举例">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e4%b8%be%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>gcc 不开启优化&lt;span class="hx-absolute -hx-mt-20" id="gcc-不开启优化">&lt;/span>
&lt;a href="#gcc-%e4%b8%8d%e5%bc%80%e5%90%af%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span>&lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">long&lt;/span> &lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%ld&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>具体&lt;a href="https://stardustman.github.io/2019/06/24/asm-how-x86-64-arguments-pass/" target="_blank" rel="noopener">汇编级别的参数传递&lt;/a> 可以参考这篇。x86 架构下&lt;a href="https://stardustman.github.io/2019/05/28/asm-how-x86-function-execute/" target="_blank" rel="noopener">函数如何之行&lt;/a> 可以参考这篇。&lt;/p>
&lt;p>gcc -o descv1 desc.c 之后通过 objdump -d descv11 可以找到 &lt;code>long desc(long a)&lt;/code> 的汇编代码如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-asm" data-lang="asm">&lt;span class="line">&lt;span class="cl">&lt;span class="err">000000000000064&lt;/span>&lt;span class="nf">a&lt;/span> &lt;span class="err">&amp;lt;&lt;/span>&lt;span class="no">desc&lt;/span>&lt;span class="err">&amp;gt;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">64&lt;/span>&lt;span class="nl">a:&lt;/span> &lt;span class="err">55&lt;/span> &lt;span class="nf">push&lt;/span> &lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❶ 保存上一个栈帧的 base，进入一个函数的常规操作。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">64&lt;/span>&lt;span class="nl">b:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">89&lt;/span> &lt;span class="nf">e5&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="nv">%rsp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❷ 开辟新的栈帧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">64&lt;/span>&lt;span class="nl">e:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">89&lt;/span> &lt;span class="err">7&lt;/span>&lt;span class="nf">d&lt;/span> &lt;span class="no">f8&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="nv">%rdi&lt;/span>&lt;span class="p">,-&lt;/span>&lt;span class="mi">0x8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;❸ 参数 a（rdi）入栈
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">652:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">8&lt;/span>&lt;span class="nf">b&lt;/span> &lt;span class="mi">45&lt;/span> &lt;span class="no">f8&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">0x8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nv">%rax&lt;/span> &lt;span class="c1">;❹ 参数 a 从栈中复制到 rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">656:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">83&lt;/span> &lt;span class="nf">e8&lt;/span> &lt;span class="mi">01&lt;/span> &lt;span class="no">sub&lt;/span> &lt;span class="no">$0x1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">%rax&lt;/span> &lt;span class="c1">;❺ a = a - 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">65&lt;/span>&lt;span class="nl">a:&lt;/span> &lt;span class="err">5&lt;/span>&lt;span class="nf">d&lt;/span> &lt;span class="no">pop&lt;/span> &lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❻ 弹出 rbp，也即是恢复上一个栈帧的 base
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">65&lt;/span>&lt;span class="nl">b:&lt;/span> &lt;span class="nf">c3&lt;/span> &lt;span class="no">retq&lt;/span> &lt;span class="err">;❼&lt;/span> &lt;span class="err">函数返回&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到 ❸ 和 ❹ 这两步有些多余，这是没有开启优化，gcc 默认采用的方式，把所有的参数先放到栈上。我们可以进行优化。&lt;/p>
&lt;h4>对 gcc 不开启优化选项的汇编代码优化&lt;span class="hx-absolute -hx-mt-20" id="对-gcc-不开启优化选项的汇编代码优化">&lt;/span>
&lt;a href="#%e5%af%b9-gcc-%e4%b8%8d%e5%bc%80%e5%90%af%e4%bc%98%e5%8c%96%e9%80%89%e9%a1%b9%e7%9a%84%e6%b1%87%e7%bc%96%e4%bb%a3%e7%a0%81%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;memory.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/mman.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">int&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x55&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❶ push rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❷ mov rsp, rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// mov edi, eax ??
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x83&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// sub $0x1,%rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x5d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❻ pop rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ❼ ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PROT_WRITE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">PROT_EXEC&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MAP_ANONYMOUS&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">MAP_PRIVATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc_func&lt;/span> &lt;span class="n">p_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">p_desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到在运行中创建 desc 函数，&lt;code>运行时生成可执行的机器码&lt;/code>这种方式其实就是 JIT 实现的核心操作。
同时可以看到，根本没有必要开辟栈帧来执行这个 desc 函数。也就是可以把 ➊ ➋ ➏ 栈帧相关操作删除。&lt;/p>
&lt;/blockquote>
&lt;h4>进一步优化，消除栈帧&lt;span class="hx-absolute -hx-mt-20" id="进一步优化消除栈帧">&lt;/span>
&lt;a href="#%e8%bf%9b%e4%b8%80%e6%ad%a5%e4%bc%98%e5%8c%96%e6%b6%88%e9%99%a4%e6%a0%88%e5%b8%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;memory.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/mman.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">int&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// mov edi, eax ??
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x83&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// sub $0x1,%rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ❼ ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PROT_WRITE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">PROT_EXEC&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MAP_ANONYMOUS&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">MAP_PRIVATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc_func&lt;/span> &lt;span class="n">p_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">p_desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到不开辟栈帧，一样可以执行代码。&lt;/p>
&lt;/blockquote>
&lt;h4>lea addr dst 优化&lt;span class="hx-absolute -hx-mt-20" id="lea-addr-dst-优化">&lt;/span>
&lt;a href="#lea-addr-dst-%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x8d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x47&lt;/span> &lt;span class="mh">0xff&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// lea -0x1(rdi), rax lea 直接将 rdi 寄存器里的值减去 1 复制给 rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>这个和 gcc -o desc desc.c -O2 结果是一样的。&lt;/p>
&lt;/blockquote>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/TokGNbdnf2XkhHSbneppgg" target="_blank" rel="noopener">java 杂谈之 JIT&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ref.x86asm.net/coder64.html" target="_blank" rel="noopener">x64-instruction-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.stanford.edu/class/archive/cs/cs107/cs107.1166/guide_x86-64.html" target="_blank" rel="noopener">https://web.stanford.edu/class/archive/cs/cs107/cs107.1166/guide_x86-64.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf" target="_blank" rel="noopener">http://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/lea" target="_blank" rel="noopener">load-effective-address(lea)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html" target="_blank" rel="noopener">java-bytecode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/appleyuchi/article/details/84036985" target="_blank" rel="noopener">圆圈数字等&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>java-keyword-volatile</title><link>https://cloudedseal.github.io/blog/java-keyword-volatile/</link><pubDate>Fri, 18 Jun 2021 14:54:23 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-keyword-volatile/</guid><description>
&lt;h2>可见性问题&lt;span class="hx-absolute -hx-mt-20" id="可见性问题">&lt;/span>
&lt;a href="#%e5%8f%af%e8%a7%81%e6%80%a7%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/java/java-volatile.svg" alt="thread stack frame" loading="lazy" />&lt;/p>
&lt;h2>可见性问题思路&lt;span class="hx-absolute -hx-mt-20" id="可见性问题思路">&lt;/span>
&lt;a href="#%e5%8f%af%e8%a7%81%e6%80%a7%e9%97%ae%e9%a2%98%e6%80%9d%e8%b7%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/java/thread-visibility.svg" alt="线程可见性问题思路" loading="lazy" />&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://teachcomputerscience.com/von-neumann-harvard-architecture/" target="_blank" rel="noopener">von-neumann-harvard-architecture&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Out-of-order_execution" target="_blank" rel="noopener">out-of-order-execution(dynamic execution)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Instruction_scheduling" target="_blank" rel="noopener">Instruction_scheduling&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/41872203" target="_blank" rel="noopener">X86/GCC memory fence的一些见解&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-semaphores</title><link>https://cloudedseal.github.io/blog/cs-semaphores/</link><pubDate>Tue, 25 May 2021 12:38:06 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-semaphores/</guid><description/></item><item><title>asm-pointers-and-memory</title><link>https://cloudedseal.github.io/blog/asm-pointers-and-memory/</link><pubDate>Wed, 28 Apr 2021 16:04:36 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-pointers-and-memory/</guid><description>
&lt;h2>Basic Pointer&lt;span class="hx-absolute -hx-mt-20" id="basic-pointer">&lt;/span>
&lt;a href="#basic-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>为啥需要 Pointer？&lt;span class="hx-absolute -hx-mt-20" id="为啥需要-pointer">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;code>更容易&lt;/code>在不同代码段之间&lt;code>共享&lt;/code>信息，在不同代码段之间来回复制也是可以的。但用指针的形式更好。&lt;/li>
&lt;li>&lt;code>链式&lt;/code>数据结构, 如链表和二叉树。&lt;/li>
&lt;/ol>
&lt;h3>pointer dereference&lt;span class="hx-absolute -hx-mt-20" id="pointer-dereference">&lt;/span>
&lt;a href="#pointer-dereference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>指针必须要有指向的值，才可以 dereference。
没有指向的指针，dereference 时会 runtime error。&lt;/p>
&lt;h3>NULL pointer&lt;span class="hx-absolute -hx-mt-20" id="null-pointer">&lt;/span>
&lt;a href="#null-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>C -&amp;gt; NULL -&amp;gt; 0 -&amp;gt; false
java -&amp;gt; null&lt;/p>
&lt;h3>pointer assignment&lt;span class="hx-absolute -hx-mt-20" id="pointer-assignment">&lt;/span>
&lt;a href="#pointer-assignment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>指针赋值&lt;/p>
&lt;h3>copy&lt;span class="hx-absolute -hx-mt-20" id="copy">&lt;/span>
&lt;a href="#copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>shallow copy&lt;span class="hx-absolute -hx-mt-20" id="shallow-copy">&lt;/span>
&lt;a href="#shallow-copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>copy reference&lt;/p>
&lt;h4>deep copy&lt;span class="hx-absolute -hx-mt-20" id="deep-copy">&lt;/span>
&lt;a href="#deep-copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>copy real value&lt;/p>
&lt;h2>two levels&lt;span class="hx-absolute -hx-mt-20" id="two-levels">&lt;/span>
&lt;a href="#two-levels" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/memory_and_pointers-two-levels.svg" alt="two-levels" loading="lazy" />&lt;/p>
&lt;h3>C 语言下指针探析&lt;span class="hx-absolute -hx-mt-20" id="c-语言下指针探析">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e4%b8%8b%e6%8c%87%e9%92%88%e6%8e%a2%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">long&lt;/span> &lt;span class="nf">pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">ptr&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-asm" data-lang="asm">&lt;span class="line">&lt;span class="cl">&lt;span class="nl">pointer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pushq&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rsp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rdi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">%rax&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">popq&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">ret&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/asm-pointer.png" alt="clang-pointer" loading="lazy" />&lt;/p>
&lt;p>由上可知：&lt;code>long *p = (long*)ptr&lt;/code> 被编译成&lt;/p>
&lt;ol>
&lt;li>movq -8(%rbp), %rax %rax 这个寄存器里放的是传来的指针&lt;/li>
&lt;li>movq (%rax), %rax (%rax) 寄存器&lt;code>间接寻址&lt;/code>，也就是取寄存器 %rax 指向的内存里的值。这就是指针在汇编层面的意义。&lt;/li>
&lt;/ol>
&lt;h2>memory&lt;span class="hx-absolute -hx-mt-20" id="memory">&lt;/span>
&lt;a href="#memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>variable -&amp;gt; variable name -&amp;gt; memory
编译后，变量名就没有了。&lt;/p>
&lt;h3>local memory&lt;span class="hx-absolute -hx-mt-20" id="local-memory">&lt;/span>
&lt;a href="#local-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>local memory is allocated automatically on function call and it is deallocated automatically when a function exits.&lt;/p>
&lt;/blockquote>
&lt;p>编译器管理 local memory，size 编译时决定。
Local memory 最根本的性质：相互独立，这是本地内存优点和缺点的根本原因。&lt;/p>
&lt;h4>stack frame&lt;span class="hx-absolute -hx-mt-20" id="stack-frame">&lt;/span>
&lt;a href="#stack-frame" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>local memory 通过调用函数时创建的&lt;code>栈帧&lt;/code>来体现。&lt;/p>
&lt;h5>allocation&lt;span class="hx-absolute -hx-mt-20" id="allocation">&lt;/span>
&lt;a href="#allocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧创建时, local variable 一并创建。&lt;/p>
&lt;h5>deallocation&lt;span class="hx-absolute -hx-mt-20" id="deallocation">&lt;/span>
&lt;a href="#deallocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧销毁时，local variable 一并销毁。&lt;/p>
&lt;h5>lifetime&lt;span class="hx-absolute -hx-mt-20" id="lifetime">&lt;/span>
&lt;a href="#lifetime" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>随着函数栈帧同生共死。&lt;/p>
&lt;h5>local/stack/automatic variable&lt;span class="hx-absolute -hx-mt-20" id="localstackautomatic-variable">&lt;/span>
&lt;a href="#localstackautomatic-variable" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧中的变量。
local/automatic 底层经常使用 stack 结构来实现。&lt;/p>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/clang-square-function.png" alt="栈帧-lexical-scope" loading="lazy" />&lt;/p>
&lt;h5>advantage of locals&lt;span class="hx-absolute -hx-mt-20" id="advantage-of-locals">&lt;/span>
&lt;a href="#advantage-of-locals" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>convenient. 函数需要临时的内存空间做计算，计算完毕后，释放。&lt;/li>
&lt;li>efficient. 分配和释放都很快。&lt;/li>
&lt;li>local copies.
&lt;blockquote>
&lt;p>pass by value
local parameters are basically local copies of the information from the caller.
caller 原值
callee 副本，如何修改不影响 caller 中的值
软件设计原则：seperate components&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h5>disadvantage of locals&lt;span class="hx-absolute -hx-mt-20" id="disadvantage-of-locals">&lt;/span>
&lt;a href="#disadvantage-of-locals" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>short lifetime. 和栈帧同生共死。(heap memory 解决)&lt;/li>
&lt;li>restricted communication。caller&amp;rsquo;s parameter -&amp;gt; callee 单向通信。(reference parameter 解决)&lt;/li>
&lt;/ol>
&lt;h3>heap/dynamic memory&lt;span class="hx-absolute -hx-mt-20" id="heapdynamic-memory">&lt;/span>
&lt;a href="#heapdynamic-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>malloc()
free()&lt;/p>
&lt;h4>lifetime&lt;span class="hx-absolute -hx-mt-20" id="lifetime-1">&lt;/span>
&lt;a href="#lifetime-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>程序员自主决定何时申请内存, 申请多少内存，何时释放内存。
runtime 决定。&lt;/p>
&lt;h2>parameter&lt;span class="hx-absolute -hx-mt-20" id="parameter">&lt;/span>
&lt;a href="#parameter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>pass by value&lt;span class="hx-absolute -hx-mt-20" id="pass-by-value">&lt;/span>
&lt;a href="#pass-by-value" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>local copy
caller parameter(原值)
callee parameter(副本)
separate components&lt;/p>
&lt;h3>pass by reference&lt;span class="hx-absolute -hx-mt-20" id="pass-by-reference">&lt;/span>
&lt;a href="#pass-by-reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>其实就是指针。这个二级结构。
pointer(上级)，把上级传出去，就可以指挥下级了。
pointee(下级)
一级指针也可以理解为 &lt;code>hop&lt;/code>，非常像 router 中的下一跳。&lt;/p>
&lt;h2>ownership&lt;span class="hx-absolute -hx-mt-20" id="ownership">&lt;/span>
&lt;a href="#ownership" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>each blok of memory has &lt;code>exactly one&lt;/code> &amp;ldquo;owner&amp;rdquo; who takes responsibility for &lt;code>deallocating&lt;/code> it.&lt;/p>
&lt;/blockquote>
&lt;h3>caller ownership&lt;span class="hx-absolute -hx-mt-20" id="caller-ownership">&lt;/span>
&lt;a href="#caller-ownership" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>callee allocated and return&lt;span class="hx-absolute -hx-mt-20" id="callee-allocated-and-return">&lt;/span>
&lt;a href="#callee-allocated-and-return" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://cslibrary.stanford.edu/102/" target="_blank" rel="noopener">memory and pointers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/malloc.3.html" target="_blank" rel="noopener">malloc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/free.3p.html" target="_blank" rel="noopener">free&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godbolt.org/z/ncfo1q4M7" target="_blank" rel="noopener">square-function&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-condition-variables</title><link>https://cloudedseal.github.io/blog/cs-condition-variables/</link><pubDate>Sun, 18 Apr 2021 20:44:09 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-condition-variables/</guid><description>
&lt;h2>condition variable 是啥？&lt;span class="hx-absolute -hx-mt-20" id="condition-variable-是啥">&lt;/span>
&lt;a href="#condition-variable-%e6%98%af%e5%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>condition variable 是啥？本质上就是一个&lt;code>状态变量&lt;/code> +&lt;code>队列&lt;/code>。现实世界中，想要进行下一步的行动，往往需要满足一定的条件(condition)。如十字路口的交通信号灯，信号灯的颜色可以视为状态变量，根据不同的状态，汽车做出不同的选择。一条马路，可以视为&lt;code>队列&lt;/code>。红灯时, 汽车就不能通过，排队等候。绿灯时，汽车才可以通过。在计算机中，同样存在这样的问题，如父进程需要等待&lt;code>子进程完成后(条件)&lt;/code>，才能继续运行。关键就是围绕&lt;code>状态变量&lt;/code>来构建。&lt;/p>
&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/pthread_cond_wait.3p.html" target="_blank" rel="noopener">pthread_cond_wait&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/pthread_cond_signal.3p.html" target="_blank" rel="noopener">pthread_cond_signal&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-english-words</title><link>https://cloudedseal.github.io/blog/cs-english-words/</link><pubDate>Mon, 28 Dec 2020 15:11:28 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-english-words/</guid><description>
&lt;h2>a&lt;span class="hx-absolute -hx-mt-20" id="a">&lt;/span>
&lt;a href="#a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>association
&lt;blockquote>
&lt;p>a connection or cooperative link between people or organizations&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>allot
&lt;blockquote>
&lt;p>to assign as a share or portion&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ad-hoc
&lt;blockquote>
&lt;p>An ad hoc activity or organization is done or formed only because a situation has made it necessary and is &lt;code>not planned in advance&lt;/code>.Ad hoc is a word that originally comes from Latin and means &lt;code>“for this” or &amp;quot;for this situation.&amp;quot;&lt;/code> In current American English it is used to describe something that has been formed or used for a special and immediate purpose, without previous planning.
比如 shell 可以直接执行一次性的命令，这就是 ad-hoc，也可以提前写好 bash 脚本可以反复多次执行，这就是提前计划好的。Ad hoc can be used as an adjective or an adverb.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>at the discretion of
&lt;blockquote>
&lt;p>由 &amp;hellip; 决定，由 &amp;hellip; 自行处理。自由裁量权。哈哈哈。比如 object 怎样回收由 gc 具体实现决定。向线程池 submit 的 command 怎么执行, 由具体的 executor 实现来决定。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ASAP
&lt;blockquote>
&lt;p>as soon as possible 尽快&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>authoritative
&lt;blockquote>
&lt;p>Someone or something that is authoritative has &lt;code>a lot of knowledge&lt;/code> of a particular subject.
比如 authoritative DNS server 是知道相关 domain 的 resource record 的。给你的信息是可以无脑相信的。😄&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>archive
&lt;blockquote>
&lt;p>The archive or archives are a collection of documents and records that contain &lt;code>historical information&lt;/code>. You can also use archives to refer to the place where archives are stored. 包含历史信息，如 oracle 的 archived redo log.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>abstraction
&lt;blockquote>
&lt;p>An abstraction is a &lt;code>general idea&lt;/code> rather than one &lt;code>relating to a particular object, person, or situation&lt;/code>. 通用的概念，和特定的物体、人、情况无关。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>agent
&lt;blockquote>
&lt;p>An agent acts on your behalf,&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>abundant
&lt;blockquote>
&lt;p>Something that is abundant is present in &lt;code>large quantities&lt;/code>. 大量的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>approximation
&lt;blockquote>
&lt;p>An approximation is a fact, object, or description which is &lt;code>similar to&lt;/code> something else, but which is &lt;code>not exactly&lt;/code> the same. 近似&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>acquire
&lt;blockquote>
&lt;p>If you acquire something, you &lt;code>buy or obtain&lt;/code> it &lt;code>for yourself&lt;/code>, or someone gives it to you.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>await
&lt;blockquote>
&lt;p>及物动词，后跟无生命的事物，消息，等待特定的东西。conditionObject 的 await 等待满足特定的条件
They are awaiting the outcome of the investigation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>b&lt;span class="hx-absolute -hx-mt-20" id="b">&lt;/span>
&lt;a href="#b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>bypass&lt;/li>
&lt;li>bound
&lt;blockquote>
&lt;p>Bounds are limits which normally restrict what can happen or what people can do.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>base
&lt;blockquote>
&lt;p>The base of something is its lowest edge or part. same as bottom&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>backlog
&lt;blockquote>
&lt;p>A backlog is a number of things which have not yet been done but which need to be done. 积压的工作量&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>backup
&lt;blockquote>
&lt;p>If you have something such as &lt;code>a second piece of equipment or set of plans as backup&lt;/code>, you have arranged for them to be available for use in case the first one does not work. 一个完蛋后，另一个可以无缝顶上。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>broker
&lt;blockquote>
&lt;p>A broker is a person whose job is to &lt;code>buy and sell&lt;/code> shares, foreign money, or goods for other people. 对于消息中间件就是从 producer 买消息，卖给 consumer。🐶&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>barge
&lt;blockquote>
&lt;p>If you barge into a place or barge through it, you rush or push into it in a rough and rude way. 横冲直撞，非公平锁，获取时上来就 casState&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>c&lt;span class="hx-absolute -hx-mt-20" id="c">&lt;/span>
&lt;a href="#c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>context
&lt;blockquote>
&lt;p>the circumstances that form the setting for an event, statement, or idea, and in terms of which it can be fully understood and asserted.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>cardinality
&lt;blockquote>
&lt;p>the number of elements in a given mathematical set 给定集合的元素数量&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>compound
&lt;blockquote>
&lt;p>Compound is used to indicate that something consists of two or more parts or things.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>consensus
&lt;blockquote>
&lt;p>A consensus is general agreement among a group of people. 一群人达成的协议。共识。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>coalesce
&lt;blockquote>
&lt;p>If two or more things coalesce, they come together and form a larger group or system. 合并&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>counterbalance
&lt;blockquote>
&lt;p>To counterbalance something means to balance or correct it with something that has &lt;code>an equal but opposite effect&lt;/code> 相等但是有相反作用的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>compulsory
&lt;blockquote>
&lt;p>If something is compulsory, you &lt;code>must&lt;/code> do it or accept it, because it is the law or because someone in a position of authority says you must.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>d&lt;span class="hx-absolute -hx-mt-20" id="d">&lt;/span>
&lt;a href="#d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>domain
&lt;blockquote>
&lt;p>an area of territory owned or controlled by a ruler or government.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>durable
&lt;blockquote>
&lt;p>Something that is durable is strong and lasts a &lt;code>long time without breaking&lt;/code> or becoming weaker&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>discretion
&lt;blockquote>
&lt;p>If someone in &lt;code>a position of authority&lt;/code> uses their discretion or has the discretion to do something in a particular situation, they have the freedom and authority to decide what to do. 自由裁量权。没有规范的情况下，由有权威的人进行&amp;quot;圣裁&amp;quot;。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>delegation
&lt;blockquote>
&lt;p>A delegation is a group of people who have been sent somewhere to have talks with other people on behalf of a larger group of people.
代表更大集团的一个和其他人交流的小集团&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>defer
&lt;blockquote>
&lt;p>If you defer an event or action, you arrange for it to happen &lt;code>at a later date&lt;/code>, rather than immediately or at the previously planned time. 延迟到将来发生的事情&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>dedicated
&lt;blockquote>
&lt;p>You use dedicated to describe something that is &lt;code>made&lt;/code>, &lt;code>built&lt;/code>, or &lt;code>designed&lt;/code> for one &lt;code>particular purpose or thing&lt;/code>. 专用&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>e&lt;span class="hx-absolute -hx-mt-20" id="e">&lt;/span>
&lt;a href="#e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>eligible
&lt;blockquote>
&lt;p>qualified to participate or be chosen&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>exception
&lt;blockquote>
&lt;p>An exception is a &lt;code>particular&lt;/code> thing, person, or situation that is &lt;code>not included in a general&lt;/code> statement, judgment, or rule.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>entity
&lt;blockquote>
&lt;p>An entity is something that exists &lt;code>separately&lt;/code> from other things and has a &lt;code>clear identity&lt;/code> of its own. 独立有清晰标识的东西&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ephemeral
&lt;blockquote>
&lt;p>If you describe something as ephemeral, you mean that it lasts only for a very short time. 只持续较短时间的东西。短暂的。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>exclusive
&lt;blockquote>
&lt;p>If two things are &lt;code>mutually exclusive&lt;/code>, they are separate and very different from each other, so that it is &lt;code>impossible for them to exist or happen together&lt;/code>. 不可共存&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>efficiency
&lt;blockquote>
&lt;p>Efficiency is the quality of being able to do a task successfully, &lt;code>without wasting time or energy&lt;/code>. 何谓效率？不浪费时间或能量。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>entry
&lt;blockquote>
&lt;p>An entry in a diary, account book, computer file, or reference book is &lt;code>a short piece&lt;/code> of writing in it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>evict
&lt;blockquote>
&lt;p>If someone is evicted from the place where they are living, they are &lt;code>forced&lt;/code> to leave it, usually because they have broken a law or contract. 驱逐&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>f&lt;span class="hx-absolute -hx-mt-20" id="f">&lt;/span>
&lt;a href="#f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>failover
&lt;blockquote>
&lt;p>The designed ability of a server, network or other computer system to &lt;code>switch over automatically&lt;/code> to a r&lt;code>edundant or standby&lt;/code> system in order to avoid loss of access in the event of a &lt;code>failure of the primary system&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>fallback
&lt;blockquote>
&lt;p>Someone&amp;rsquo;s fallback position is what they will do &lt;code>if their plans do not succeed, or if something unexpected happens&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>field
&lt;blockquote>
&lt;p>A field is &lt;code>an area of a computer's memory or a program&lt;/code> where data can be entered, edited, or stored.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>factor out
&lt;blockquote>
&lt;p>分解&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>fragemented
&lt;blockquote>
&lt;p>If something fragments or is fragmented, it &lt;code>breaks&lt;/code> or &lt;code>separates&lt;/code> into small &lt;code>pieces&lt;/code> or &lt;code>parts&lt;/code>. 碎片化&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>flexible
&lt;blockquote>
&lt;p>Something or someone that is flexible is able to &lt;code>change easily&lt;/code> and &lt;code>adapt to different conditions and circumstances&lt;/code> as they occur.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>g&lt;span class="hx-absolute -hx-mt-20" id="g">&lt;/span>
&lt;a href="#g" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>gateway
&lt;blockquote>
&lt;p>a gateway converts between protocols&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>h&lt;span class="hx-absolute -hx-mt-20" id="h">&lt;/span>
&lt;a href="#h" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>handle
&lt;blockquote>
&lt;p>A handle is the part of an object such as a tool, bag, or cup that you hold in order to be able to &lt;code>pick up and use&lt;/code> the object.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>heap
&lt;blockquote>
&lt;p>A heap of things is a pile of them, especially a pile arranged in a rather &lt;code>untidy&lt;/code> way. 不规整放置的东西&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>i&lt;span class="hx-absolute -hx-mt-20" id="i">&lt;/span>
&lt;a href="#i" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>independent
&lt;blockquote>
&lt;p>not connected with another or with each other; separate 互不关联，分离的
If one thing or person is independent of another, they are &lt;code>separate and not connected&lt;/code>, so the first one is &lt;code>not affected or influenced&lt;/code> by the second.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>integrity
&lt;blockquote>
&lt;p>The integrity of something such as a group of people or a text is its &lt;code>state of being a united whole&lt;/code>. 完整性&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interpose
&lt;blockquote>
&lt;p>If you interpose something between &lt;code>two&lt;/code> people or things, you place it &lt;code>between&lt;/code> them. 将 &amp;hellip; 置于两者之间，中间层。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>inherent
&lt;blockquote>
&lt;p>The inherent qualities of something are the necessary and natural parts of it. 天生就有的。资本一出生就带着&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>i.e.
&lt;blockquote>
&lt;p>i.e .is used to introduce a word or sentence which makes what you have just said &lt;code>clearer&lt;/code> or &lt;code>gives details&lt;/code>. 即是,进一步解释清楚&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interface
&lt;blockquote>
&lt;p>The interface between two subjects or systems is the area in which they &lt;code>affect each other&lt;/code> or &lt;code>have links with each other&lt;/code>. 两个之间的东西，那可不就是中间层么？&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>immense
&lt;blockquote>
&lt;p>If you describe something as immense, you mean that it is extremely large or great.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interfere
&lt;blockquote>
&lt;p>If you say that someone interferes in a situation, you mean they &lt;code>get involved in&lt;/code> it although it does not concern them and their involvement is not wanted. 干涉&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>j&lt;span class="hx-absolute -hx-mt-20" id="j">&lt;/span>
&lt;a href="#j" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>k&lt;span class="hx-absolute -hx-mt-20" id="k">&lt;/span>
&lt;a href="#k" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>l&lt;span class="hx-absolute -hx-mt-20" id="l">&lt;/span>
&lt;a href="#l" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>lifetime
&lt;blockquote>
&lt;p>A lifetime is the length of time that someone is alive. 某人活着的时间，也就是享年多久。
The lifetime of a particular thing is the period of time that it lasts. 某事物存在的时长。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>leave options open 暂不决定&lt;/li>
&lt;/ol>
&lt;h2>m&lt;span class="hx-absolute -hx-mt-20" id="m">&lt;/span>
&lt;a href="#m" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>majority
&lt;blockquote>
&lt;p>The majority of people or things in a group is more than half of them. 什么是 majority。超过一半的人/事物才叫 majority。zookeeper cluster 推荐 server 数量奇数。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>mediator
&lt;blockquote>
&lt;p>a person or an organization that tries to get agreement &lt;code>between people or groups&lt;/code> who disagree with each other 多方势力之间的调停者&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>n&lt;span class="hx-absolute -hx-mt-20" id="n">&lt;/span>
&lt;a href="#n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>o&lt;span class="hx-absolute -hx-mt-20" id="o">&lt;/span>
&lt;a href="#o" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>overhead&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>额外的费用、消耗&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>on the fly&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If you do something on the fly, you do it quickly &lt;code>without&lt;/code> thinking about it &lt;code>or&lt;/code> planning it in advance, especially while something else is happening. 没有提前计划做事情或者不假思索做事情&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>overlap&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If one thing overlaps another, or if you overlap them, a part of the first thing &lt;code>occupies the same area&lt;/code> as a part of the other thing. You can also say that two things overlap. 空间上重叠&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>outstanding&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Outstanding issues or problems have not yet been resolved. 还没完成的、还没解决的。若用 tcp 确认机制，就是 unacknowledged 的包。&lt;/p>
&lt;/blockquote>
&lt;ol start="5">
&lt;li>offset
&lt;blockquote>
&lt;p>If one thing is offset by another, the effect of the first thing is reduced by the second, so that any advantage or disadvantage is cancelled out. 抵消
Refers to the distance between a base address (starting memory location) and a specific address&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>p&lt;span class="hx-absolute -hx-mt-20" id="p">&lt;/span>
&lt;a href="#p" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>precedence
&lt;blockquote>
&lt;p>the condition of being considered more important than someone or something else; priority in importance, order, or rank. 优先级&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>parenthesis
&lt;blockquote>
&lt;p>括号&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>preemptive
&lt;blockquote>
&lt;p>serving or intended to preempt or forestall something, especially to prevent attack by disabling the enemy.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>populate
&lt;blockquote>
&lt;p>to provide with members 对象填充成员属性&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>parameter
&lt;blockquote>
&lt;p>Parameters are factors or limits which &lt;code>affect&lt;/code> the way that something can be done or made.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proxy
&lt;blockquote>
&lt;p>A proxy is a person or thing that is acting or being used in the place of someone or something else.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>payload
&lt;blockquote>
&lt;p>The payload of an aircraft or spacecraft is the &lt;code>amount or weight&lt;/code> of things or people that &lt;code>it is carrying&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proceed
&lt;blockquote>
&lt;p>If you proceed to do something, you do it, often after doing something else first. 先做完一件事，接着做另一件事。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pending
&lt;blockquote>
&lt;p>If something is done &lt;code>pending a future event&lt;/code>, it is done until that event happens.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>post-
&lt;blockquote>
&lt;p>Post- is used to form words that indicate that something takes place after a particular date, period, or event.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pre-
&lt;blockquote>
&lt;p>Pre- is used to form words that indicate that something takes place before a particular date, period, or event.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>per se
&lt;blockquote>
&lt;p>Per se means &amp;lsquo;by itself&amp;rsquo; or &amp;lsquo;in itself&amp;rsquo;, and is used when you are talking about the qualities of one thing &lt;code>considered on its own&lt;/code>, rather than in connection with other things. 本身，本质上&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>permissible
&lt;blockquote>
&lt;p>If something is permissible, it is considered to be acceptable because it does not break any laws or rules. 不违反法律和规则即为允许的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proxy
&lt;blockquote>
&lt;p>a proxy emulates a service provided by a server that is &lt;code>not contacted directly&lt;/code> by the client itself&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>respectively
&lt;blockquote>
&lt;p>Respectively means in the &lt;code>same order&lt;/code> as the items that you have &lt;code>just mentioned&lt;/code>. 和刚刚提到过的保持一致的顺序。相应地&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>premise
&lt;blockquote>
&lt;p>a premise is something that &lt;code>you suppose is true&lt;/code> and that you use as a basis for developing an idea. 前提&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>privileged
&lt;blockquote>
&lt;p>Someone who is privileged has an &lt;code>advantage or opportunity&lt;/code> that most other people do not have, often because of their wealth or high social class. 特权&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pile
&lt;blockquote>
&lt;p>A pile of things is a quantity of things that have been put &lt;code>neatly&lt;/code> somewhere so that each thing is &lt;code>on top of the one below&lt;/code>. 一个摞一个 stack&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>portion
&lt;blockquote>
&lt;p>A portion of something is &lt;code>a part of&lt;/code> it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>possession
&lt;blockquote>
&lt;p>If you are in possession of something, you have it, because you &lt;code>have obtained&lt;/code> it or because it &lt;code>belongs to&lt;/code> you. 占有&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>q&lt;span class="hx-absolute -hx-mt-20" id="q">&lt;/span>
&lt;a href="#q" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>r&lt;span class="hx-absolute -hx-mt-20" id="r">&lt;/span>
&lt;a href="#r" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>relinquish
&lt;blockquote>
&lt;p>to stop having sth, especially when this happens unwillingly 抢占式调度，timer 定时中断，time slice 用完，必须让出 CPU。
voluntarily cease to keep or claim; give up. 自愿放弃
to give over possession or control of : YIELD 放弃控制&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>reference
&lt;blockquote>
&lt;p>A reference is something such as a number or a name that tells you where you can obtain the information you want. 能从中获取信息的东西，隔一层。you-&amp;gt;reference-&amp;gt;info&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>routine
&lt;blockquote>
&lt;p>A routine is a computer program, or part of a program, that performs a specific function.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>s&lt;span class="hx-absolute -hx-mt-20" id="s">&lt;/span>
&lt;a href="#s" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>sparse
&lt;blockquote>
&lt;p>thinly dispersed or scattered, 稀疏的
Something that is sparse is &lt;code>small in number or amount&lt;/code> and &lt;code>spread out over&lt;/code> an area.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>slot
&lt;blockquote>
&lt;p>a long, narrow aperture or slit in a machine for something to be inserted
an allotted place in a arrangement or plan such as a broadcasting schedule.(安排或计划中分配的位置)&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>sandbox
&lt;blockquote>
&lt;p>A sandbox is a place on a computer system where an &lt;code>untrusted program&lt;/code> can be run without affecting other parts of the system.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>suspend
&lt;blockquote>
&lt;p>If you suspend something, you delay it or stop it from happening for a while or until a decision is made about it. 最著名的例子就是进程 suspend，之后 scheduler 再 decide 是不是再次运行。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>shard
&lt;blockquote>
&lt;p>Shards are pieces of broken glass, pottery, or metal. fragement,piece 一片，想象一下把一整块玻璃打碎，分成多个碎片，scale out..&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>standby
&lt;blockquote>
&lt;p>A standby is something or someone that is &lt;code>always ready to be used&lt;/code> if they are needed.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>segment
&lt;blockquote>
&lt;p>A segment of something is &lt;code>one part of&lt;/code> it, considered separately from the rest. 整体的一部分，分段，和余下的部分分开的。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>split
&lt;blockquote>
&lt;p>If something splits or if you split it, it is &lt;code>divided&lt;/code> into two or more parts.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>segregate
&lt;blockquote>
&lt;p>To segregate two groups of people or things means to keep them &lt;code>physically apart from&lt;/code> each other.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>surrogate&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>You use surrogate to describe a person or thing that is given a particular role &lt;code>because the person or thing that should have the role is not available&lt;/code>. 代理&lt;/p>
&lt;/blockquote>
&lt;ol start="11">
&lt;li>sweep&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If someone makes a sweep of a place, they &lt;code>search&lt;/code> it, usually because they are &lt;code>looking for&lt;/code> people who are hiding or for an illegal activity. 搜寻，扫荡
If lights or someone&amp;rsquo;s eyes sweep an area, they move &lt;code>across&lt;/code> the area from side to side.
磁盘的调度算法之 elevator(SCAN/C-SCAN) 从最内部向最外部(反之亦可)的磁道扫描&lt;/p>
&lt;/blockquote>
&lt;ol start="12">
&lt;li>scatter
&lt;blockquote>
&lt;p>If you scatter things over an area, you throw or drop them so that they spread all over the area.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>t&lt;span class="hx-absolute -hx-mt-20" id="t">&lt;/span>
&lt;a href="#t" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>
&lt;p>ternary&lt;/p>
&lt;blockquote>
&lt;p>composed of three parts 三元&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>trade-off&lt;/p>
&lt;blockquote>
&lt;p>balance achieved between two desirable but incompatible features;
balancing of factors all of which are not attainable at the same time
平衡两个&lt;code>互不兼容的特性&lt;/code>，妥协&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>trade off&lt;/p>
&lt;blockquote>
&lt;p>If you trade off one thing against another, you exchange all or part of one thing for another, as part of a negotiation or compromise. 以 &amp;hellip; 换取&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>traid / triplet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ticket&lt;/p>
&lt;blockquote>
&lt;p>a certificate or token showing that a fare or admission fee has been paid 票&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>tuple&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>computing a row of values in a &lt;code>relational database&lt;/code> 关系型数据库中的一行就是 tuple&lt;/p>
&lt;/blockquote>
&lt;ol start="6">
&lt;li>transient&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Transient is used to describe a situation that &lt;code>lasts only a short time&lt;/code> or is &lt;code>constantly changing&lt;/code>. 持续时间很短或者一直在变化的情况，和 persistent 相反&lt;/p>
&lt;/blockquote>
&lt;ol start="7">
&lt;li>transition
&lt;blockquote>
&lt;p>Transition is the process in which something changes &lt;code>from one state to another&lt;/code>. 一个状态变成另一个状态, 这是什么? 这就是状态机。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>trap
&lt;blockquote>
&lt;p>A trap is a &lt;code>device&lt;/code> which is placed somewhere or a hole which is dug somewhere in order to &lt;code>catch&lt;/code> animals or birds.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>u&lt;span class="hx-absolute -hx-mt-20" id="u">&lt;/span>
&lt;a href="#u" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>v&lt;span class="hx-absolute -hx-mt-20" id="v">&lt;/span>
&lt;a href="#v" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>virtualize
&lt;blockquote>
&lt;p>To virtualize means to take something of &lt;code>one form&lt;/code> and make it appear to be &lt;code>another form&lt;/code>. 这不就是 transformer 🤣&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>w&lt;span class="hx-absolute -hx-mt-20" id="w">&lt;/span>
&lt;a href="#w" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>x&lt;span class="hx-absolute -hx-mt-20" id="x">&lt;/span>
&lt;a href="#x" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>y&lt;span class="hx-absolute -hx-mt-20" id="y">&lt;/span>
&lt;a href="#y" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>yield
If you yield something that you have control of or responsibility for, you allow someone else to have control or responsibility for it 自愿让出&lt;/li>
&lt;/ol>
&lt;h2>z&lt;span class="hx-absolute -hx-mt-20" id="z">&lt;/span>
&lt;a href="#z" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>cs-lock</title><link>https://cloudedseal.github.io/blog/cs-lock/</link><pubDate>Mon, 14 Dec 2020 15:20:26 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-lock/</guid><description>
&lt;h2>为啥需要 lock？&lt;span class="hx-absolute -hx-mt-20" id="为啥需要-lock">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>多处理器的存在&lt;/li>
&lt;li>中断的存在&lt;/li>
&lt;/ol>
&lt;h2>lock 是啥？&lt;span class="hx-absolute -hx-mt-20" id="lock-是啥">&lt;/span>
&lt;a href="#lock-%e6%98%af%e5%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>lock 本质上是一个变量。变量本质上是一块内存。归根结底，lock 就是一块内存，用这块内存来保证线程的原子性。锁有两种状态：&lt;/p>
&lt;ol>
&lt;li>被占用&lt;/li>
&lt;li>空闲&lt;/li>
&lt;/ol>
&lt;h2>critical section&lt;span class="hx-absolute -hx-mt-20" id="critical-section">&lt;/span>
&lt;a href="#critical-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">balance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">balance&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>在多线程环境下，这段代码执行有问题。如何保证任意时刻，只有一个线程在执行这段代码呢？用 lock，获取这个锁之后，才可以执行这段代码，这段代码执行完毕后，释放这个锁。没有获取锁的线程，无法执行这段代码。也可以认为通过 lock 来&lt;code>监视&lt;/code>这段代码任意时刻只能有一个线程执行。不错，monitor 本质上也是一个锁。&lt;/p>
&lt;h2>如何评估估锁&lt;span class="hx-absolute -hx-mt-20" id="如何评估估锁">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%af%84%e4%bc%b0%e4%bc%b0%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>mutual exclusion&lt;span class="hx-absolute -hx-mt-20" id="mutual-exclusion">&lt;/span>
&lt;a href="#mutual-exclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>锁，提供互斥功能。&lt;/p>
&lt;h3>fairless&lt;span class="hx-absolute -hx-mt-20" id="fairless">&lt;/span>
&lt;a href="#fairless" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>是否会有线程饥饿&lt;/p>
&lt;h3>performance&lt;span class="hx-absolute -hx-mt-20" id="performance">&lt;/span>
&lt;a href="#performance" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>构建 Lock&lt;span class="hx-absolute -hx-mt-20" id="构建-lock">&lt;/span>
&lt;a href="#%e6%9e%84%e5%bb%ba-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>控制中断&lt;span class="hx-absolute -hx-mt-20" id="控制中断">&lt;/span>
&lt;a href="#%e6%8e%a7%e5%88%b6%e4%b8%ad%e6%96%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">disableInterrupts&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 关闭中断
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">enableInterrputs&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 开启中断
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>对于单处理器，可以直接来关闭中断、开启中断的方式来实现线程的原子性。
关闭、开启中断的指令是特权指令。&lt;/p>
&lt;/blockquote>
&lt;h4>优点&lt;span class="hx-absolute -hx-mt-20" id="优点">&lt;/span>
&lt;a href="#%e4%bc%98%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>实现简单、便于理解。在关闭中断的情况下，可以保证线程的执行不会被打断。&lt;/p>
&lt;h4>缺点&lt;span class="hx-absolute -hx-mt-20" id="缺点">&lt;/span>
&lt;a href="#%e7%bc%ba%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>需要特权指令。可能被滥用。若一个程序关闭中断后，执行死循环，那么就霸占了 CPU，想要解决这个问题，就只好重启了。&lt;/li>
&lt;li>在多核的处理器上，关闭中断没有用。因为其他线程可以在其他处理器上运行，也可以进入临界区。&lt;/li>
&lt;li>可能会丢失其他的中断信号。一直在处理这个中断，没空搭理其他的中断请求。&lt;/li>
&lt;li>低效。处理中断还是很麻烦的。&lt;/li>
&lt;/ol>
&lt;h3>失败的尝试，只用 Loads/Stores&lt;span class="hx-absolute -hx-mt-20" id="失败的尝试只用-loadsstores">&lt;/span>
&lt;a href="#%e5%a4%b1%e8%b4%a5%e7%9a%84%e5%b0%9d%e8%af%95%e5%8f%aa%e7%94%a8-loadsstores" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用(L1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 获取锁(L3)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Loads/Stores 分析&lt;span class="hx-absolute -hx-mt-20" id="loadsstores-分析">&lt;/span>
&lt;a href="#loadsstores-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-lock-1.svg" alt="简单的 flag, Loads/Store" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>上图可见，由于中断的存在，在1.检测锁是否被占用 2.获取锁 这两个步骤之间，可能被打断，这样两个线程都获取了这个锁。&lt;code>这不符合锁的基本功能，没有提供互斥&lt;/code>。无法保证临界区，任意时刻只有一个线程在执行。&lt;/li>
&lt;li>如果一个线程 T1 已经获取了锁，另外一个线程 T2 在获取锁时，会在 L1 处不停的判断锁的状态，这就是在 L1 处 Spin，这就是所谓的 Spin Lock。&lt;/li>
&lt;/ol>
&lt;h3>test-and-set(atomic exchange) 构建锁&lt;span class="hx-absolute -hx-mt-20" id="test-and-setatomic-exchange-构建锁">&lt;/span>
&lt;a href="#test-and-setatomic-exchange-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>因为只是简单的 Loads/Stores(Reads/Writes) 不能构建出 Lock。所以引入和支持构建 Lock 的 test-and-set 指令。在 x86 下，指令是 &lt;a href="https://www.felixcloutier.com/x86/xchg" target="_blank" rel="noopener">xchg&lt;/a>。Exchanges the contents of the destination (first) and source (second) operands. The operands can be &lt;code>two general-purpose registers&lt;/code> or a &lt;code>register and a memory location&lt;/code>. If a memory operand is referenced, the processor’s locking protocol is automatically implemented for the duration of the exchange operation, &lt;code>regardless of the presence or absence of the LOCK prefix or of the value of the IOPL&lt;/code>. 用 &lt;code>xchg&lt;/code> 原子交换来实现。&lt;/p>
&lt;h4>C 语言表示 test-and-set 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-test-and-set-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-test-and-set-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// fetch old value at old_ptr, Read
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// store ’new’ into old_ptr, Write
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// return the old value
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>test-and-set 构建锁&lt;span class="hx-absolute -hx-mt-20" id="test-and-set-构建锁">&lt;/span>
&lt;a href="#test-and-set-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用,同时将 flag 设置为 1(L1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>test-and-set spin-lock 分析&lt;span class="hx-absolute -hx-mt-20" id="test-and-set-spin-lock-分析">&lt;/span>
&lt;a href="#test-and-set-spin-lock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-lock-test-and-set.svg" alt="test-and-set-spin-lock" loading="lazy" />&lt;/p>
&lt;h5>correctness&lt;span class="hx-absolute -hx-mt-20" id="correctness">&lt;/span>
&lt;a href="#correctness" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>由上图分析可知，test-and-set 这个 spin lock 提供了 mutual exclusion，这是锁的基本功能。&lt;/p>
&lt;h5>fairness&lt;span class="hx-absolute -hx-mt-20" id="fairness">&lt;/span>
&lt;a href="#fairness" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>spin lock 不是公平的，可能导致线程饥饿。&lt;/p>
&lt;h5>performance&lt;span class="hx-absolute -hx-mt-20" id="performance-1">&lt;/span>
&lt;a href="#performance-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h6>单处理器&lt;span class="hx-absolute -hx-mt-20" id="单处理器">&lt;/span>
&lt;a href="#%e5%8d%95%e5%a4%84%e7%90%86%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;p>对于 spin lock，假定有 N 个线程，其中有一个线程已经持有的这个锁。其余 N - 1 个线程来获取这个锁，当调度器调度一个线程获取锁时，会在时间片(T)内一直死循环判定 TestAndSet 的返回值，直到时间片消耗完，线程切出。会浪费 (N - 1) * T 这么多时间。&lt;/p>
&lt;h6>多处理器&lt;span class="hx-absolute -hx-mt-20" id="多处理器">&lt;/span>
&lt;a href="#%e5%a4%9a%e5%a4%84%e7%90%86%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostem-lock-multi-core-contend-spin-lock.svg" alt="多核处理器-spin-lock" loading="lazy" />&lt;/p>
&lt;p>由图可知，在多处理器环境中，若 critical section 很短，在 Thread1 释放这个锁后，其余的线程是可以获取这个锁的。耗时并不长。&lt;/p>
&lt;h3>Compare-And-Swap(Exchange) 构建锁&lt;span class="hx-absolute -hx-mt-20" id="compare-and-swapexchange-构建锁">&lt;/span>
&lt;a href="#compare-and-swapexchange-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>C 语言表示 Compare-And-Swap 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-compare-and-swap-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-compare-and-swap-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">CompareAndSwap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">original&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">original&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Compare-And-Swap 构建锁&lt;span class="hx-absolute -hx-mt-20" id="compare-and-swap-构建锁">&lt;/span>
&lt;a href="#compare-and-swap-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">CompareAndSwap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>x86-version of compare-and-swap&lt;span class="hx-absolute -hx-mt-20" id="x86-version-of-compare-and-swap">&lt;/span>
&lt;a href="#x86-version-of-compare-and-swap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">char&lt;/span> &lt;span class="nf">compare_and_swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Note that sete sets a ’byte’ not the word
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">__asm__&lt;/span> &lt;span class="nf">__volatile__&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34; lock&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// 保证原子性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="s">&amp;#34; cmpxchgl %2,%1&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// cmpxchgl new, *ptr, %rax = old，The ZF flag is set if the values in the destination operand and register AL, AX, or EAX are equal; otherwise it is cleared.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="s">&amp;#34; sete %0&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// ZF = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;=q&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;=m&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// output 0,1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;r&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;m&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">old&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// input 2,3,4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// clobber list
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Fetch-And-Add 构建锁&lt;span class="hx-absolute -hx-mt-20" id="fetch-and-add-构建锁">&lt;/span>
&lt;a href="#fetch-and-add-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>C 语言表示 Fetch-And-Add 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-fetch-and-add-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-fetch-and-add-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">FetchAndAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>构建 ticket lock&lt;span class="hx-absolute -hx-mt-20" id="构建-ticket-lock">&lt;/span>
&lt;a href="#%e6%9e%84%e5%bb%ba-ticket-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">ticket&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">turn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ticket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">myturn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">FetchAndAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ticket&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 获取票号，类似于用票号来给要获取锁的线程排队。拿到票号的最终都会成功获取锁。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">myturn&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 下一位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何避免 spin？&lt;span class="hx-absolute -hx-mt-20" id="如何避免-spin">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e9%81%bf%e5%85%8d-spin" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>yield(放弃 CPU)&lt;span class="hx-absolute -hx-mt-20" id="yield放弃-cpu">&lt;/span>
&lt;a href="#yield%e6%94%be%e5%bc%83-cpu" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">yield&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// give up the CPU, 线程状态由 running-&amp;gt;ready
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>当一个线程无法获取锁时，不是 spin，而是 yield(), 线程状态由 running 变为 ready。
这样就节约了时间。但是无法解决饥饿问题。
若一个线程不停的获取锁，进入临界区，释放锁。
其他的尝试获取锁的线程就会不断的 yield。&lt;/p>
&lt;h3>Using Queues: Sleeping Instead Of Spinning&lt;span class="hx-absolute -hx-mt-20" id="using-queues-sleeping-instead-of-spinning">&lt;/span>
&lt;a href="#using-queues-sleeping-instead-of-spinning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Lock With Queues, Test-and-set, Yield, And Wakeup&lt;span class="hx-absolute -hx-mt-20" id="lock-with-queues-test-and-set-yield-and-wakeup">&lt;/span>
&lt;a href="#lock-with-queues-test-and-set-yield-and-wakeup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">guard&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// spin lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">queue_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 队列,需要锁的线程放在队列里，避免饥饿。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">queue_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">//acquire guard lock by spinning
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock is acquired
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">queue_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">gettid&lt;/span>&lt;span class="p">());&lt;/span> &lt;span class="c1">//1 线程 id 放入队列
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">setpark&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 将要 park()！！！！
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">park&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">//3 running-&amp;gt;sleep，被 unpark() 叫醒，就像在这里返回。先去获取 guard 这个 spin lock。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 先获取 guard 这个 spin lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">//acquire guard lock by spinning
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">queue_empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// 队列为空，没有等待锁的线程
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// let go of lock; no one wants it
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">unpark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">queue_remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">//4 hold lock, 叫醒这个 m-&amp;gt;q 线程。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (for next thread!)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Spin Lock 的问题&lt;span class="hx-absolute -hx-mt-20" id="spin-lock-的问题">&lt;/span>
&lt;a href="#spin-lock-%e7%9a%84%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>spin forever&lt;span class="hx-absolute -hx-mt-20" id="spin-forever">&lt;/span>
&lt;a href="#spin-forever" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-spin-lock-spin-forever.svg" alt="spin-lock-spin-forever" loading="lazy" />&lt;/p>
&lt;p>线程有优先级的概念。
Thread1(priority1) &amp;lt; Thread(priority2), 在 Thread1 和 Thread2 都是 runnable 情况下，调度器保证先运行 Thread2。
由上图可知，Thread2 可能永远无法获取锁，导致系统挂掉。&lt;/p>
&lt;h3>Priority Inversion&lt;span class="hx-absolute -hx-mt-20" id="priority-inversion">&lt;/span>
&lt;a href="#priority-inversion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-spin-lock-priority-inversion.svg" alt="spin-lock-priority-inversion" loading="lazy" />&lt;/p>
&lt;p>有上图可知 Thread2 有可能在 Thread3 之前运行，这不符合线程优先级的要求。
Thread2 和 Thread3 的优先级反转了。&lt;/p>
&lt;h2>two-phrase-lock&lt;span class="hx-absolute -hx-mt-20" id="two-phrase-lock">&lt;/span>
&lt;a href="#two-phrase-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>spin(先旋转一段时间，看能不能获取锁)&lt;/li>
&lt;li>sleep(先旋转一段时间，不能获取锁，线程进入 sleep 状态，放弃 CPU)&lt;/li>
&lt;/ol>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/threads-locks.pdf" target="_blank" rel="noopener">Lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html" target="_blank" rel="noopener">gcc-inline-assembly-howto&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/xchg" target="_blank" rel="noopener">atomic-exchange&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks" target="_blank" rel="noopener">compare-and-swap-lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/lock" target="_blank" rel="noopener">lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/cmpxchg" target="_blank" rel="noopener">cpmxchg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/xadd" target="_blank" rel="noopener">xadd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://filippo.io/linux-syscall-table/" target="_blank" rel="noopener">system-call-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html" target="_blank" rel="noopener">sched_yield&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/gettid.2.html" target="_blank" rel="noopener">gettid&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-cache</title><link>https://cloudedseal.github.io/blog/cs-cache/</link><pubDate>Tue, 01 Dec 2020 08:40:29 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-cache/</guid><description>
&lt;blockquote>
&lt;p>There can be many caches &lt;code>stacked&lt;/code> on top of each other.
Cache 可以一层一层累积。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>if you miss in one you try in the “lower level cache”
Lower level, mean higher number.
在上层的 Cache miss 了，可以在下层的 Cache 去找。依次类推。&lt;/li>
&lt;li>There can also be &lt;code>separate&lt;/code> caches for data and
instructions. Or the cache can be &lt;code>“unified”&lt;/code>.
数据和指令的 Cache 可以独立，也可以混合。&lt;/li>
&lt;li>to wit:
&lt;ul>
&lt;li>the &lt;code>L1 data cache (d-cache)&lt;/code> is the one nearest processor. It
corresponds to the “data memory” block in our pipeline
diagrams&lt;/li>
&lt;li>the &lt;code>L1 instruction cache (i-cache)&lt;/code> corresponds to the
“instruction memory” block in our pipeline diagrams.&lt;/li>
&lt;li>The L2 sits &lt;code>underneath&lt;/code> the L1s.&lt;/li>
&lt;li>There is often an &lt;code>L3 in modern systems&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>cache 指导思想&lt;span class="hx-absolute -hx-mt-20" id="cache-指导思想">&lt;/span>
&lt;a href="#cache-%e6%8c%87%e5%af%bc%e6%80%9d%e6%83%b3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>局部性原理&lt;span class="hx-absolute -hx-mt-20" id="局部性原理">&lt;/span>
&lt;a href="#%e5%b1%80%e9%83%a8%e6%80%a7%e5%8e%9f%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>temporal locality (时间局部性)&lt;span class="hx-absolute -hx-mt-20" id="temporal-locality-时间局部性">&lt;/span>
&lt;a href="#temporal-locality-%e6%97%b6%e9%97%b4%e5%b1%80%e9%83%a8%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Taking advantage of temporal locality:&lt;/p>
&lt;ol>
&lt;li>bring data into cache whenever its referenced&lt;/li>
&lt;li>kick out something that hasn’t been used recently&lt;/li>
&lt;/ol>
&lt;h4>spatial locality (空间局部性)&lt;span class="hx-absolute -hx-mt-20" id="spatial-locality-空间局部性">&lt;/span>
&lt;a href="#spatial-locality-%e7%a9%ba%e9%97%b4%e5%b1%80%e9%83%a8%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Taking advantage of spatial locality:
bring in a block of &lt;code>contiguous data (cacheline)&lt;/code>, not just
the &lt;code>requested data&lt;/code>.&lt;/p>
&lt;h2>基本问题&lt;span class="hx-absolute -hx-mt-20" id="基本问题">&lt;/span>
&lt;a href="#%e5%9f%ba%e6%9c%ac%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>怎样找到 cache 中的数据？&lt;span class="hx-absolute -hx-mt-20" id="怎样找到-cache-中的数据">&lt;/span>
&lt;a href="#%e6%80%8e%e6%a0%b7%e6%89%be%e5%88%b0-cache-%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>以 32bits 的内存地址，来分析。
(index, offset) 二维坐标来定位一个 byte 的数据。&lt;/p>
&lt;/blockquote>
&lt;h4>index&lt;span class="hx-absolute -hx-mt-20" id="index">&lt;/span>
&lt;a href="#index" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>定位 cache line，可视为&lt;code>横坐标&lt;/code>。
现在可以通过 cache lines = cache size / cache line size 来计算。
index bits = log2(cache lines)&lt;/p>
&lt;h4>offset&lt;span class="hx-absolute -hx-mt-20" id="offset">&lt;/span>
&lt;a href="#offset" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>通过 index 定位到 cache line 后，offset 定位到这个 cache line 的哪一个 byte。
可以视为&lt;code>纵坐标&lt;/code>。
offset bits = log2(offset)&lt;/p>
&lt;h4>tag&lt;span class="hx-absolute -hx-mt-20" id="tag">&lt;/span>
&lt;a href="#tag" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>32bits 剩下的部分。&lt;/p>
&lt;h4>cache line 应该是多大？&lt;span class="hx-absolute -hx-mt-20" id="cache-line-应该是多大">&lt;/span>
&lt;a href="#cache-line-%e5%ba%94%e8%af%a5%e6%98%af%e5%a4%9a%e5%a4%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>这其实是分块(block)思想。在利用空间局部性原理。&lt;/p>
&lt;/blockquote>
&lt;h5>cache line size 越大&lt;span class="hx-absolute -hx-mt-20" id="cache-line-size-越大">&lt;/span>
&lt;a href="#cache-line-size-%e8%b6%8a%e5%a4%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Exploits more spatial locality.&lt;/li>
&lt;li>Large cache lines effectively prefetch data that we have not
explicitly asked for.
更好地利用空间局部性，提前获取将要访问的数据。&lt;/li>
&lt;/ol>
&lt;h5>cache line size 越小&lt;span class="hx-absolute -hx-mt-20" id="cache-line-size-越小">&lt;/span>
&lt;a href="#cache-line-size-%e8%b6%8a%e5%b0%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Focuses on temporal locality.&lt;/li>
&lt;li>If there is little spatial locality, large cache lines waste
space and bandwidth.
聚焦在时间局部性上，如果没有较好的空间局部性，提前 &lt;code>fetch&lt;/code> 了数据，那就浪费了空间和带宽。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache_organization.svg" alt="cache_organization" loading="lazy" /> #(cache 组织方式)&lt;/p>
&lt;h3>实例分析&lt;span class="hx-absolute -hx-mt-20" id="实例分析">&lt;/span>
&lt;a href="#%e5%ae%9e%e4%be%8b%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>内存地址 32bits。&lt;/p>
&lt;h4>1024 cache lines, 32 Bytes per line.&lt;span class="hx-absolute -hx-mt-20" id="1024-cache-lines-32-bytes-per-line">&lt;/span>
&lt;a href="#1024-cache-lines-32-bytes-per-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>index bits = log2(1024) = 10
offset bits = log2(32) = 5
tags bits = 32 - index - offset = 17&lt;/p>
&lt;h4>32KB cache, 64byte lines&lt;span class="hx-absolute -hx-mt-20" id="32kb-cache-64byte-lines">&lt;/span>
&lt;a href="#32kb-cache-64byte-lines" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>index bits = log2(32KB / 64Bytes) = 9
offset bits = log2(64) = 6
tags bits = 32 - 9 - 6 = 17&lt;/p>
&lt;h4>set 是干什么的？&lt;span class="hx-absolute -hx-mt-20" id="set-是干什么的">&lt;/span>
&lt;a href="#set-%e6%98%af%e5%b9%b2%e4%bb%80%e4%b9%88%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>(set) &lt;code>Associativity&lt;/code> means providing &lt;code>more than one&lt;/code> place for a cache line to live.
One group of lines corresponds to each index.&lt;/p>
&lt;ol>
&lt;li>it is called a “set”&lt;/li>
&lt;li>&lt;code>Each line&lt;/code> in a set is called a &lt;code>“way”&lt;/code>&lt;/li>
&lt;li>N-Way associativity requires N parallel comparators
set = ？&lt;/li>
&lt;/ol>
&lt;p>{% asset_img cache-2-ways-cache.svg 2-ways-cache%}
&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache-2-ways-cache.svg" alt="2-ways-cache" loading="lazy" />&lt;/p>
&lt;h3>cache 哪一种 address？&lt;span class="hx-absolute -hx-mt-20" id="cache-哪一种-address">&lt;/span>
&lt;a href="#cache-%e5%93%aa%e4%b8%80%e7%a7%8d-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>virtual memory address&lt;span class="hx-absolute -hx-mt-20" id="virtual-memory-address">&lt;/span>
&lt;a href="#virtual-memory-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h4>physical memory address&lt;span class="hx-absolute -hx-mt-20" id="physical-memory-address">&lt;/span>
&lt;a href="#physical-memory-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache-memory-address-type.svg" alt="cache-memory-address-type" loading="lazy" /> #(缓存类型)&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/wi12/cse141-a/Slides/09_Cache_intro.pdf" target="_blank" rel="noopener">CSE141-Caching-Intro&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/sp10/cse141/pdf/07/09_CSE141-Caching.pdf" target="_blank" rel="noopener">CSE141-Caching&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/wi12/cse141-a/Slides/10_Caches_detail.pdf" target="_blank" rel="noopener">CSE141-Caches-Details&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.0xffffff.org/2014/01/06/26-x86-cache/" target="_blank" rel="noopener">x86-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/admin-guide/mm/memory-hotplug.html" target="_blank" rel="noopener">memory-hotplug&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/31859105" target="_blank" rel="noopener">Cache 是怎样组织和工作的？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/coreinfo" target="_blank" rel="noopener">cacheinfo-windows&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manybutfinite.com/post/intel-cpu-caches/" target="_blank" rel="noopener">intel-cpu-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.cs.cornell.edu/courses/cs3410/2013sp/lecture/18-caches3-w.pdf" target="_blank" rel="noopener">caches3-w.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/CPU_cache" target="_blank" rel="noopener">wiki-cpu-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.princeton.edu/courses/archive/fall19/cos316/lectures/10-cpu-cache.pdf" target="_blank" rel="noopener">cos316-10-cpu-cache.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/Intel-CacheOverview.pdf" target="_blank" rel="noopener">cos355-Intel-CacheOverview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/31875174" target="_blank" rel="noopener">细说Cache-L1/L2/L3/TLB&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>acknowledgement-timeout-retry-sequence-number</title><link>https://cloudedseal.github.io/blog/acknowledgement-timeout-retry-sequence-number/</link><pubDate>Mon, 30 Nov 2020 10:54:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/acknowledgement-timeout-retry-sequence-number/</guid><description>
&lt;h3>TCP 要解决的问题&lt;span class="hx-absolute -hx-mt-20" id="tcp-要解决的问题">&lt;/span>
&lt;a href="#tcp-%e8%a6%81%e8%a7%a3%e5%86%b3%e7%9a%84%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/notions_tcp.svg" alt="notions_tcp" loading="lazy" />&lt;/p>
&lt;h2>references&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/tcp-congestion-control/" target="_blank" rel="noopener">tcp-congestion-control&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.cs.wpi.edu/~rek/Undergrad_Nets/B06/TCP_Congestion_Control.ppt" target="_blank" rel="noopener">tcp-congestion-control-ppt&lt;/a>&lt;/li>
&lt;/ol></description></item></channel></rss>